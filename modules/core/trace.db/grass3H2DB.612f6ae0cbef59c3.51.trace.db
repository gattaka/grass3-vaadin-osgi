03-03 12:04:44 jdbc: 
/**/Connection conn51 = DriverManager.getConnection("jdbc:h2:tcp://localhost/grass3H2DB;TRACE_LEVEL_FIlE=3", "SA", "");
03-03 12:04:44 jdbc: java.lang.Exception: Open Stack Trace
	at org.h2.util.CloseWatcher.register(CloseWatcher.java:93)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:120)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:92)
	at org.h2.Driver.connect(Driver.java:72)
	at java.sql.DriverManager.getConnection(DriverManager.java:579)
	at java.sql.DriverManager.getConnection(DriverManager.java:190)
	at org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl.getConnection(DriverManagerConnectionProviderImpl.java:173)
	at org.hibernate.internal.AbstractSessionImpl$NonContextualJdbcConnectionAccess.obtainConnection(AbstractSessionImpl.java:276)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:297)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.getConnection(LogicalConnectionImpl.java:169)
	at org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:67)
	at org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:160)
	at org.hibernate.internal.SessionImpl.beginTransaction(SessionImpl.java:1263)
	at org.myftp.gattserver.grass3.model.AbstractDAO.findByID(AbstractDAO.java:133)
	at org.myftp.gattserver.grass3.facades.NodeFacade.getNodeById(NodeFacade.java:30)
	at org.myftp.gattserver.grass3.pages.template.ContentsTableFactory$ContentsTable.populateTable(ContentsTableFactory.java:118)
	at org.myftp.gattserver.grass3.pages.HomePage.createRecentMenus(HomePage.java:245)
	at org.myftp.gattserver.grass3.pages.HomePage.createContent(HomePage.java:99)
	at org.myftp.gattserver.grass3.pages.template.GrassPage.init(GrassPage.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:344)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:295)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:130)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1479)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:461)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:314)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1129)
	at org.myftp.gattserver.grass3.pages.factories.template.PageFactory.createPage(PageFactory.java:43)
	at org.myftp.gattserver.grass3.GrassUI.init(GrassUI.java:65)
	at com.vaadin.ui.UI.doInit(UI.java:523)
	at com.vaadin.server.AbstractCommunicationManager.getBrowserDetailsUI(AbstractCommunicationManager.java:2457)
	at com.vaadin.server.AbstractCommunicationManager.handleBrowserDetailsRequest(AbstractCommunicationManager.java:2352)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:325)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:201)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:669)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1448)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:118)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:45)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(BasicAuthenticationFilter.java:150)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:183)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:192)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:160)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1419)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:455)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:557)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1075)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:384)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1009)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:255)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:154)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)
	at org.eclipse.jetty.server.Server.handle(Server.java:368)
	at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:488)
	at org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:932)
	at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:994)
	at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:640)
	at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235)
	at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:628)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)
	at java.lang.Thread.run(Thread.java:722)

org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-168]
	at org.h2.message.DbException.get(DbException.java:169)
	at org.h2.message.DbException.get(DbException.java:146)
	at org.h2.message.DbException.get(DbException.java:135)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:172)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:119)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:92)
	at org.h2.Driver.connect(Driver.java:72)
	at java.sql.DriverManager.getConnection(DriverManager.java:579)
	at java.sql.DriverManager.getConnection(DriverManager.java:190)
	at org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl.getConnection(DriverManagerConnectionProviderImpl.java:173)
	at org.hibernate.internal.AbstractSessionImpl$NonContextualJdbcConnectionAccess.obtainConnection(AbstractSessionImpl.java:276)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:297)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.getConnection(LogicalConnectionImpl.java:169)
	at org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:67)
	at org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:160)
	at org.hibernate.internal.SessionImpl.beginTransaction(SessionImpl.java:1263)
	at org.myftp.gattserver.grass3.model.AbstractDAO.findAll(AbstractDAO.java:102)
	at org.myftp.gattserver.grass3.facades.ContentTagFacade.getAllContentTags(ContentTagFacade.java:34)
	at org.myftp.gattserver.grass3.pages.HomePage.createTagCloud(HomePage.java:117)
	at org.myftp.gattserver.grass3.pages.HomePage.createContent(HomePage.java:102)
	at org.myftp.gattserver.grass3.pages.template.GrassPage.init(GrassPage.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:344)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:295)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:130)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1479)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:461)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:314)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1129)
	at org.myftp.gattserver.grass3.pages.factories.template.PageFactory.createPage(PageFactory.java:43)
	at org.myftp.gattserver.grass3.GrassUI.init(GrassUI.java:65)
	at com.vaadin.ui.UI.doInit(UI.java:523)
	at com.vaadin.server.AbstractCommunicationManager.getBrowserDetailsUI(AbstractCommunicationManager.java:2457)
	at com.vaadin.server.AbstractCommunicationManager.handleBrowserDetailsRequest(AbstractCommunicationManager.java:2352)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:325)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:201)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:669)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1448)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:118)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:45)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(BasicAuthenticationFilter.java:150)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:183)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:192)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:160)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1419)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:455)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:557)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1075)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:384)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1009)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:255)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:154)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)
	at org.eclipse.jetty.server.Server.handle(Server.java:368)
	at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:488)
	at org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:932)
	at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:994)
	at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:640)
	at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235)
	at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:628)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)
	at java.lang.Thread.run(Thread.java:722)
Caused by: org.h2.jdbc.JdbcSQLException: The connection was not closed by the application and is garbage collected [90018-168]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:329)
	... 96 more
03-03 12:04:44 jdbc: java.lang.Exception: Open Stack Trace
	at org.h2.util.CloseWatcher.register(CloseWatcher.java:93)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:120)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:92)
	at org.h2.Driver.connect(Driver.java:72)
	at java.sql.DriverManager.getConnection(DriverManager.java:579)
	at java.sql.DriverManager.getConnection(DriverManager.java:190)
	at org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl.getConnection(DriverManagerConnectionProviderImpl.java:173)
	at org.hibernate.internal.AbstractSessionImpl$NonContextualJdbcConnectionAccess.obtainConnection(AbstractSessionImpl.java:276)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:297)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.getConnection(LogicalConnectionImpl.java:169)
	at org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:67)
	at org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:160)
	at org.hibernate.internal.SessionImpl.beginTransaction(SessionImpl.java:1263)
	at org.myftp.gattserver.grass3.model.AbstractDAO.findByID(AbstractDAO.java:133)
	at org.myftp.gattserver.grass3.facades.NodeFacade.getNodeById(NodeFacade.java:30)
	at org.myftp.gattserver.grass3.pages.template.ContentsTableFactory$ContentsTable.populateTable(ContentsTableFactory.java:118)
	at org.myftp.gattserver.grass3.pages.HomePage.createRecentMenus(HomePage.java:245)
	at org.myftp.gattserver.grass3.pages.HomePage.createContent(HomePage.java:99)
	at org.myftp.gattserver.grass3.pages.template.GrassPage.init(GrassPage.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:344)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:295)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:130)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1479)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:461)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:314)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1129)
	at org.myftp.gattserver.grass3.pages.factories.template.PageFactory.createPage(PageFactory.java:43)
	at org.myftp.gattserver.grass3.GrassUI.init(GrassUI.java:65)
	at com.vaadin.ui.UI.doInit(UI.java:523)
	at com.vaadin.server.AbstractCommunicationManager.getBrowserDetailsUI(AbstractCommunicationManager.java:2457)
	at com.vaadin.server.AbstractCommunicationManager.handleBrowserDetailsRequest(AbstractCommunicationManager.java:2352)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:325)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:201)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:669)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1448)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:118)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:45)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(BasicAuthenticationFilter.java:150)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:183)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:192)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:160)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1419)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:455)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:557)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1075)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:384)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1009)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:255)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:154)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)
	at org.eclipse.jetty.server.Server.handle(Server.java:368)
	at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:488)
	at org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:932)
	at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:994)
	at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:640)
	at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235)
	at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:628)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)
	at java.lang.Thread.run(Thread.java:722)

org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-168]
	at org.h2.message.DbException.get(DbException.java:169)
	at org.h2.message.DbException.get(DbException.java:146)
	at org.h2.message.DbException.get(DbException.java:135)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:172)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:119)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:92)
	at org.h2.Driver.connect(Driver.java:72)
	at java.sql.DriverManager.getConnection(DriverManager.java:579)
	at java.sql.DriverManager.getConnection(DriverManager.java:190)
	at org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl.getConnection(DriverManagerConnectionProviderImpl.java:173)
	at org.hibernate.internal.AbstractSessionImpl$NonContextualJdbcConnectionAccess.obtainConnection(AbstractSessionImpl.java:276)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:297)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.getConnection(LogicalConnectionImpl.java:169)
	at org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:67)
	at org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:160)
	at org.hibernate.internal.SessionImpl.beginTransaction(SessionImpl.java:1263)
	at org.myftp.gattserver.grass3.model.AbstractDAO.findAll(AbstractDAO.java:102)
	at org.myftp.gattserver.grass3.facades.ContentTagFacade.getAllContentTags(ContentTagFacade.java:34)
	at org.myftp.gattserver.grass3.pages.HomePage.createTagCloud(HomePage.java:117)
	at org.myftp.gattserver.grass3.pages.HomePage.createContent(HomePage.java:102)
	at org.myftp.gattserver.grass3.pages.template.GrassPage.init(GrassPage.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:344)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:295)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:130)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1479)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:461)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:314)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1129)
	at org.myftp.gattserver.grass3.pages.factories.template.PageFactory.createPage(PageFactory.java:43)
	at org.myftp.gattserver.grass3.GrassUI.init(GrassUI.java:65)
	at com.vaadin.ui.UI.doInit(UI.java:523)
	at com.vaadin.server.AbstractCommunicationManager.getBrowserDetailsUI(AbstractCommunicationManager.java:2457)
	at com.vaadin.server.AbstractCommunicationManager.handleBrowserDetailsRequest(AbstractCommunicationManager.java:2352)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:325)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:201)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:669)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1448)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:118)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:45)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(BasicAuthenticationFilter.java:150)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:183)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:192)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:160)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1419)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:455)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:557)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1075)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:384)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1009)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:255)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:154)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)
	at org.eclipse.jetty.server.Server.handle(Server.java:368)
	at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:488)
	at org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:932)
	at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:994)
	at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:640)
	at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235)
	at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:628)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)
	at java.lang.Thread.run(Thread.java:722)
Caused by: org.h2.jdbc.JdbcSQLException: The connection was not closed by the application and is garbage collected [90018-168]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:329)
	... 96 more
03-03 12:04:44 jdbc: java.lang.Exception: Open Stack Trace
	at org.h2.util.CloseWatcher.register(CloseWatcher.java:93)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:120)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:92)
	at org.h2.Driver.connect(Driver.java:72)
	at java.sql.DriverManager.getConnection(DriverManager.java:579)
	at java.sql.DriverManager.getConnection(DriverManager.java:190)
	at org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl.getConnection(DriverManagerConnectionProviderImpl.java:173)
	at org.hibernate.internal.AbstractSessionImpl$NonContextualJdbcConnectionAccess.obtainConnection(AbstractSessionImpl.java:276)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:297)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.getConnection(LogicalConnectionImpl.java:169)
	at org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:67)
	at org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:160)
	at org.hibernate.internal.SessionImpl.beginTransaction(SessionImpl.java:1263)
	at org.myftp.gattserver.grass3.model.AbstractDAO.findByID(AbstractDAO.java:133)
	at org.myftp.gattserver.grass3.facades.NodeFacade.getNodeById(NodeFacade.java:30)
	at org.myftp.gattserver.grass3.pages.template.ContentsTableFactory$ContentsTable.populateTable(ContentsTableFactory.java:118)
	at org.myftp.gattserver.grass3.pages.HomePage.createRecentMenus(HomePage.java:244)
	at org.myftp.gattserver.grass3.pages.HomePage.createContent(HomePage.java:99)
	at org.myftp.gattserver.grass3.pages.template.GrassPage.init(GrassPage.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:344)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:295)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:130)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1479)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:461)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:314)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1129)
	at org.myftp.gattserver.grass3.pages.factories.template.PageFactory.createPage(PageFactory.java:43)
	at org.myftp.gattserver.grass3.GrassUI.init(GrassUI.java:65)
	at com.vaadin.ui.UI.doInit(UI.java:523)
	at com.vaadin.server.AbstractCommunicationManager.getBrowserDetailsUI(AbstractCommunicationManager.java:2457)
	at com.vaadin.server.AbstractCommunicationManager.handleBrowserDetailsRequest(AbstractCommunicationManager.java:2352)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:325)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:201)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:669)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1448)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:118)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:45)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(BasicAuthenticationFilter.java:150)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:183)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:192)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:160)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1419)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:455)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:557)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1075)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:384)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1009)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:255)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:154)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)
	at org.eclipse.jetty.server.Server.handle(Server.java:368)
	at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:488)
	at org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:932)
	at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:994)
	at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:640)
	at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235)
	at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:628)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)
	at java.lang.Thread.run(Thread.java:722)

org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-168]
	at org.h2.message.DbException.get(DbException.java:169)
	at org.h2.message.DbException.get(DbException.java:146)
	at org.h2.message.DbException.get(DbException.java:135)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:172)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:119)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:92)
	at org.h2.Driver.connect(Driver.java:72)
	at java.sql.DriverManager.getConnection(DriverManager.java:579)
	at java.sql.DriverManager.getConnection(DriverManager.java:190)
	at org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl.getConnection(DriverManagerConnectionProviderImpl.java:173)
	at org.hibernate.internal.AbstractSessionImpl$NonContextualJdbcConnectionAccess.obtainConnection(AbstractSessionImpl.java:276)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:297)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.getConnection(LogicalConnectionImpl.java:169)
	at org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:67)
	at org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:160)
	at org.hibernate.internal.SessionImpl.beginTransaction(SessionImpl.java:1263)
	at org.myftp.gattserver.grass3.model.AbstractDAO.findAll(AbstractDAO.java:102)
	at org.myftp.gattserver.grass3.facades.ContentTagFacade.getAllContentTags(ContentTagFacade.java:34)
	at org.myftp.gattserver.grass3.pages.HomePage.createTagCloud(HomePage.java:117)
	at org.myftp.gattserver.grass3.pages.HomePage.createContent(HomePage.java:102)
	at org.myftp.gattserver.grass3.pages.template.GrassPage.init(GrassPage.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:344)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:295)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:130)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1479)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:461)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:314)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1129)
	at org.myftp.gattserver.grass3.pages.factories.template.PageFactory.createPage(PageFactory.java:43)
	at org.myftp.gattserver.grass3.GrassUI.init(GrassUI.java:65)
	at com.vaadin.ui.UI.doInit(UI.java:523)
	at com.vaadin.server.AbstractCommunicationManager.getBrowserDetailsUI(AbstractCommunicationManager.java:2457)
	at com.vaadin.server.AbstractCommunicationManager.handleBrowserDetailsRequest(AbstractCommunicationManager.java:2352)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:325)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:201)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:669)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1448)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:118)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:45)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(BasicAuthenticationFilter.java:150)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:183)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:192)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:160)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1419)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:455)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:557)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1075)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:384)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1009)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:255)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:154)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)
	at org.eclipse.jetty.server.Server.handle(Server.java:368)
	at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:488)
	at org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:932)
	at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:994)
	at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:640)
	at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235)
	at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:628)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)
	at java.lang.Thread.run(Thread.java:722)
Caused by: org.h2.jdbc.JdbcSQLException: The connection was not closed by the application and is garbage collected [90018-168]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:329)
	... 96 more
03-03 12:04:44 jdbc: java.lang.Exception: Open Stack Trace
	at org.h2.util.CloseWatcher.register(CloseWatcher.java:93)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:120)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:92)
	at org.h2.Driver.connect(Driver.java:72)
	at java.sql.DriverManager.getConnection(DriverManager.java:579)
	at java.sql.DriverManager.getConnection(DriverManager.java:190)
	at org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl.getConnection(DriverManagerConnectionProviderImpl.java:173)
	at org.hibernate.internal.AbstractSessionImpl$NonContextualJdbcConnectionAccess.obtainConnection(AbstractSessionImpl.java:276)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:297)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.getConnection(LogicalConnectionImpl.java:169)
	at org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:67)
	at org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:160)
	at org.hibernate.internal.SessionImpl.beginTransaction(SessionImpl.java:1263)
	at org.myftp.gattserver.grass3.model.AbstractDAO.findByID(AbstractDAO.java:133)
	at org.myftp.gattserver.grass3.facades.NodeFacade.getNodeById(NodeFacade.java:30)
	at org.myftp.gattserver.grass3.pages.template.ContentsTableFactory$ContentsTable.populateTable(ContentsTableFactory.java:118)
	at org.myftp.gattserver.grass3.pages.HomePage.createRecentMenus(HomePage.java:245)
	at org.myftp.gattserver.grass3.pages.HomePage.createContent(HomePage.java:99)
	at org.myftp.gattserver.grass3.pages.template.GrassPage.init(GrassPage.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:344)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:295)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:130)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1479)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:461)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:314)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1129)
	at org.myftp.gattserver.grass3.pages.factories.template.PageFactory.createPage(PageFactory.java:43)
	at org.myftp.gattserver.grass3.GrassUI.init(GrassUI.java:65)
	at com.vaadin.ui.UI.doInit(UI.java:523)
	at com.vaadin.server.AbstractCommunicationManager.getBrowserDetailsUI(AbstractCommunicationManager.java:2457)
	at com.vaadin.server.AbstractCommunicationManager.handleBrowserDetailsRequest(AbstractCommunicationManager.java:2352)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:325)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:201)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:669)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1448)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:118)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:45)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(BasicAuthenticationFilter.java:150)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:183)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:192)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:160)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1419)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:455)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:557)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1075)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:384)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1009)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:255)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:154)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)
	at org.eclipse.jetty.server.Server.handle(Server.java:368)
	at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:488)
	at org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:932)
	at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:994)
	at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:640)
	at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235)
	at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:628)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)
	at java.lang.Thread.run(Thread.java:722)

org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-168]
	at org.h2.message.DbException.get(DbException.java:169)
	at org.h2.message.DbException.get(DbException.java:146)
	at org.h2.message.DbException.get(DbException.java:135)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:172)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:119)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:92)
	at org.h2.Driver.connect(Driver.java:72)
	at java.sql.DriverManager.getConnection(DriverManager.java:579)
	at java.sql.DriverManager.getConnection(DriverManager.java:190)
	at org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl.getConnection(DriverManagerConnectionProviderImpl.java:173)
	at org.hibernate.internal.AbstractSessionImpl$NonContextualJdbcConnectionAccess.obtainConnection(AbstractSessionImpl.java:276)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:297)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.getConnection(LogicalConnectionImpl.java:169)
	at org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:67)
	at org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:160)
	at org.hibernate.internal.SessionImpl.beginTransaction(SessionImpl.java:1263)
	at org.myftp.gattserver.grass3.model.AbstractDAO.findAll(AbstractDAO.java:102)
	at org.myftp.gattserver.grass3.facades.ContentTagFacade.getAllContentTags(ContentTagFacade.java:34)
	at org.myftp.gattserver.grass3.pages.HomePage.createTagCloud(HomePage.java:117)
	at org.myftp.gattserver.grass3.pages.HomePage.createContent(HomePage.java:102)
	at org.myftp.gattserver.grass3.pages.template.GrassPage.init(GrassPage.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:344)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:295)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:130)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1479)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:461)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:314)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1129)
	at org.myftp.gattserver.grass3.pages.factories.template.PageFactory.createPage(PageFactory.java:43)
	at org.myftp.gattserver.grass3.GrassUI.init(GrassUI.java:65)
	at com.vaadin.ui.UI.doInit(UI.java:523)
	at com.vaadin.server.AbstractCommunicationManager.getBrowserDetailsUI(AbstractCommunicationManager.java:2457)
	at com.vaadin.server.AbstractCommunicationManager.handleBrowserDetailsRequest(AbstractCommunicationManager.java:2352)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:325)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:201)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:669)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1448)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:118)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:45)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(BasicAuthenticationFilter.java:150)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:183)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:192)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:160)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1419)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:455)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:557)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1075)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:384)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1009)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:255)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:154)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)
	at org.eclipse.jetty.server.Server.handle(Server.java:368)
	at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:488)
	at org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:932)
	at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:994)
	at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:640)
	at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235)
	at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:628)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)
	at java.lang.Thread.run(Thread.java:722)
Caused by: org.h2.jdbc.JdbcSQLException: The connection was not closed by the application and is garbage collected [90018-168]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:329)
	... 96 more
03-03 12:04:44 jdbc: java.lang.Exception: Open Stack Trace
	at org.h2.util.CloseWatcher.register(CloseWatcher.java:93)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:120)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:92)
	at org.h2.Driver.connect(Driver.java:72)
	at java.sql.DriverManager.getConnection(DriverManager.java:579)
	at java.sql.DriverManager.getConnection(DriverManager.java:190)
	at org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl.getConnection(DriverManagerConnectionProviderImpl.java:173)
	at org.hibernate.internal.AbstractSessionImpl$NonContextualJdbcConnectionAccess.obtainConnection(AbstractSessionImpl.java:276)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:297)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.getConnection(LogicalConnectionImpl.java:169)
	at org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:67)
	at org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:160)
	at org.hibernate.internal.SessionImpl.beginTransaction(SessionImpl.java:1263)
	at org.myftp.gattserver.grass3.model.AbstractDAO.findByID(AbstractDAO.java:133)
	at org.myftp.gattserver.grass3.facades.NodeFacade.getNodeById(NodeFacade.java:30)
	at org.myftp.gattserver.grass3.pages.template.ContentsTableFactory$ContentsTable.populateTable(ContentsTableFactory.java:118)
	at org.myftp.gattserver.grass3.pages.HomePage.createRecentMenus(HomePage.java:245)
	at org.myftp.gattserver.grass3.pages.HomePage.createContent(HomePage.java:99)
	at org.myftp.gattserver.grass3.pages.template.GrassPage.init(GrassPage.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:344)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:295)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:130)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1479)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:461)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:314)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1129)
	at org.myftp.gattserver.grass3.pages.factories.template.PageFactory.createPage(PageFactory.java:43)
	at org.myftp.gattserver.grass3.GrassUI.init(GrassUI.java:65)
	at com.vaadin.ui.UI.doInit(UI.java:523)
	at com.vaadin.server.AbstractCommunicationManager.getBrowserDetailsUI(AbstractCommunicationManager.java:2457)
	at com.vaadin.server.AbstractCommunicationManager.handleBrowserDetailsRequest(AbstractCommunicationManager.java:2352)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:325)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:201)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:669)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1448)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:118)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:45)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(BasicAuthenticationFilter.java:150)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:183)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:192)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:160)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1419)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:455)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:557)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1075)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:384)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1009)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:255)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:154)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)
	at org.eclipse.jetty.server.Server.handle(Server.java:368)
	at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:488)
	at org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:932)
	at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:994)
	at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:640)
	at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235)
	at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:628)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)
	at java.lang.Thread.run(Thread.java:722)

org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-168]
	at org.h2.message.DbException.get(DbException.java:169)
	at org.h2.message.DbException.get(DbException.java:146)
	at org.h2.message.DbException.get(DbException.java:135)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:172)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:119)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:92)
	at org.h2.Driver.connect(Driver.java:72)
	at java.sql.DriverManager.getConnection(DriverManager.java:579)
	at java.sql.DriverManager.getConnection(DriverManager.java:190)
	at org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl.getConnection(DriverManagerConnectionProviderImpl.java:173)
	at org.hibernate.internal.AbstractSessionImpl$NonContextualJdbcConnectionAccess.obtainConnection(AbstractSessionImpl.java:276)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:297)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.getConnection(LogicalConnectionImpl.java:169)
	at org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:67)
	at org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:160)
	at org.hibernate.internal.SessionImpl.beginTransaction(SessionImpl.java:1263)
	at org.myftp.gattserver.grass3.model.AbstractDAO.findAll(AbstractDAO.java:102)
	at org.myftp.gattserver.grass3.facades.ContentTagFacade.getAllContentTags(ContentTagFacade.java:34)
	at org.myftp.gattserver.grass3.pages.HomePage.createTagCloud(HomePage.java:117)
	at org.myftp.gattserver.grass3.pages.HomePage.createContent(HomePage.java:102)
	at org.myftp.gattserver.grass3.pages.template.GrassPage.init(GrassPage.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:344)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:295)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:130)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1479)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:461)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:314)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1129)
	at org.myftp.gattserver.grass3.pages.factories.template.PageFactory.createPage(PageFactory.java:43)
	at org.myftp.gattserver.grass3.GrassUI.init(GrassUI.java:65)
	at com.vaadin.ui.UI.doInit(UI.java:523)
	at com.vaadin.server.AbstractCommunicationManager.getBrowserDetailsUI(AbstractCommunicationManager.java:2457)
	at com.vaadin.server.AbstractCommunicationManager.handleBrowserDetailsRequest(AbstractCommunicationManager.java:2352)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:325)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:201)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:669)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1448)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:118)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:45)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(BasicAuthenticationFilter.java:150)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:183)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:192)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:160)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1419)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:455)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:557)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1075)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:384)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1009)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:255)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:154)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)
	at org.eclipse.jetty.server.Server.handle(Server.java:368)
	at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:488)
	at org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:932)
	at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:994)
	at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:640)
	at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235)
	at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:628)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)
	at java.lang.Thread.run(Thread.java:722)
Caused by: org.h2.jdbc.JdbcSQLException: The connection was not closed by the application and is garbage collected [90018-168]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:329)
	... 96 more
03-03 12:04:44 jdbc: java.lang.Exception: Open Stack Trace
	at org.h2.util.CloseWatcher.register(CloseWatcher.java:93)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:120)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:92)
	at org.h2.Driver.connect(Driver.java:72)
	at java.sql.DriverManager.getConnection(DriverManager.java:579)
	at java.sql.DriverManager.getConnection(DriverManager.java:190)
	at org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl.getConnection(DriverManagerConnectionProviderImpl.java:173)
	at org.hibernate.internal.AbstractSessionImpl$NonContextualJdbcConnectionAccess.obtainConnection(AbstractSessionImpl.java:276)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:297)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.getConnection(LogicalConnectionImpl.java:169)
	at org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:67)
	at org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:160)
	at org.hibernate.internal.SessionImpl.beginTransaction(SessionImpl.java:1263)
	at org.myftp.gattserver.grass3.model.AbstractDAO.findByID(AbstractDAO.java:133)
	at org.myftp.gattserver.grass3.facades.NodeFacade.getNodeById(NodeFacade.java:30)
	at org.myftp.gattserver.grass3.pages.template.ContentsTableFactory$ContentsTable.populateTable(ContentsTableFactory.java:118)
	at org.myftp.gattserver.grass3.pages.HomePage.createRecentMenus(HomePage.java:244)
	at org.myftp.gattserver.grass3.pages.HomePage.createContent(HomePage.java:99)
	at org.myftp.gattserver.grass3.pages.template.GrassPage.init(GrassPage.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:344)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:295)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:130)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1479)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:461)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:314)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1129)
	at org.myftp.gattserver.grass3.pages.factories.template.PageFactory.createPage(PageFactory.java:43)
	at org.myftp.gattserver.grass3.GrassUI.init(GrassUI.java:65)
	at com.vaadin.ui.UI.doInit(UI.java:523)
	at com.vaadin.server.AbstractCommunicationManager.getBrowserDetailsUI(AbstractCommunicationManager.java:2457)
	at com.vaadin.server.AbstractCommunicationManager.handleBrowserDetailsRequest(AbstractCommunicationManager.java:2352)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:325)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:201)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:669)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1448)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:118)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:45)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(BasicAuthenticationFilter.java:150)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:183)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:192)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:160)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1419)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:455)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:557)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1075)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:384)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1009)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:255)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:154)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)
	at org.eclipse.jetty.server.Server.handle(Server.java:368)
	at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:488)
	at org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:932)
	at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:994)
	at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:640)
	at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235)
	at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:628)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)
	at java.lang.Thread.run(Thread.java:722)

org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-168]
	at org.h2.message.DbException.get(DbException.java:169)
	at org.h2.message.DbException.get(DbException.java:146)
	at org.h2.message.DbException.get(DbException.java:135)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:172)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:119)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:92)
	at org.h2.Driver.connect(Driver.java:72)
	at java.sql.DriverManager.getConnection(DriverManager.java:579)
	at java.sql.DriverManager.getConnection(DriverManager.java:190)
	at org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl.getConnection(DriverManagerConnectionProviderImpl.java:173)
	at org.hibernate.internal.AbstractSessionImpl$NonContextualJdbcConnectionAccess.obtainConnection(AbstractSessionImpl.java:276)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:297)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.getConnection(LogicalConnectionImpl.java:169)
	at org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:67)
	at org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:160)
	at org.hibernate.internal.SessionImpl.beginTransaction(SessionImpl.java:1263)
	at org.myftp.gattserver.grass3.model.AbstractDAO.findAll(AbstractDAO.java:102)
	at org.myftp.gattserver.grass3.facades.ContentTagFacade.getAllContentTags(ContentTagFacade.java:34)
	at org.myftp.gattserver.grass3.pages.HomePage.createTagCloud(HomePage.java:117)
	at org.myftp.gattserver.grass3.pages.HomePage.createContent(HomePage.java:102)
	at org.myftp.gattserver.grass3.pages.template.GrassPage.init(GrassPage.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:344)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:295)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:130)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1479)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:461)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:314)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1129)
	at org.myftp.gattserver.grass3.pages.factories.template.PageFactory.createPage(PageFactory.java:43)
	at org.myftp.gattserver.grass3.GrassUI.init(GrassUI.java:65)
	at com.vaadin.ui.UI.doInit(UI.java:523)
	at com.vaadin.server.AbstractCommunicationManager.getBrowserDetailsUI(AbstractCommunicationManager.java:2457)
	at com.vaadin.server.AbstractCommunicationManager.handleBrowserDetailsRequest(AbstractCommunicationManager.java:2352)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:325)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:201)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:669)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1448)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:118)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:45)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(BasicAuthenticationFilter.java:150)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:183)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:192)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:160)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1419)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:455)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:557)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1075)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:384)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1009)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:255)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:154)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)
	at org.eclipse.jetty.server.Server.handle(Server.java:368)
	at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:488)
	at org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:932)
	at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:994)
	at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:640)
	at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235)
	at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:628)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)
	at java.lang.Thread.run(Thread.java:722)
Caused by: org.h2.jdbc.JdbcSQLException: The connection was not closed by the application and is garbage collected [90018-168]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:329)
	... 96 more
03-03 12:04:44 jdbc: java.lang.Exception: Open Stack Trace
	at org.h2.util.CloseWatcher.register(CloseWatcher.java:93)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:120)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:92)
	at org.h2.Driver.connect(Driver.java:72)
	at java.sql.DriverManager.getConnection(DriverManager.java:579)
	at java.sql.DriverManager.getConnection(DriverManager.java:190)
	at org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl.getConnection(DriverManagerConnectionProviderImpl.java:173)
	at org.hibernate.internal.AbstractSessionImpl$NonContextualJdbcConnectionAccess.obtainConnection(AbstractSessionImpl.java:276)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:297)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.getConnection(LogicalConnectionImpl.java:169)
	at org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:67)
	at org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:160)
	at org.hibernate.internal.SessionImpl.beginTransaction(SessionImpl.java:1263)
	at org.myftp.gattserver.grass3.model.AbstractDAO.findByID(AbstractDAO.java:133)
	at org.myftp.gattserver.grass3.facades.NodeFacade.getNodeById(NodeFacade.java:30)
	at org.myftp.gattserver.grass3.pages.template.ContentsTableFactory$ContentsTable.populateTable(ContentsTableFactory.java:118)
	at org.myftp.gattserver.grass3.pages.HomePage.createRecentMenus(HomePage.java:245)
	at org.myftp.gattserver.grass3.pages.HomePage.createContent(HomePage.java:99)
	at org.myftp.gattserver.grass3.pages.template.GrassPage.init(GrassPage.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:344)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:295)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:130)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1479)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:461)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:314)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1129)
	at org.myftp.gattserver.grass3.pages.factories.template.PageFactory.createPage(PageFactory.java:43)
	at org.myftp.gattserver.grass3.GrassUI.init(GrassUI.java:65)
	at com.vaadin.ui.UI.doInit(UI.java:523)
	at com.vaadin.server.AbstractCommunicationManager.getBrowserDetailsUI(AbstractCommunicationManager.java:2457)
	at com.vaadin.server.AbstractCommunicationManager.handleBrowserDetailsRequest(AbstractCommunicationManager.java:2352)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:325)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:201)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:669)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1448)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:118)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:45)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(BasicAuthenticationFilter.java:150)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:183)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:192)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:160)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1419)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:455)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:557)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1075)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:384)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1009)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:255)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:154)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)
	at org.eclipse.jetty.server.Server.handle(Server.java:368)
	at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:488)
	at org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:932)
	at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:994)
	at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:640)
	at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235)
	at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:628)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)
	at java.lang.Thread.run(Thread.java:722)

org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-168]
	at org.h2.message.DbException.get(DbException.java:169)
	at org.h2.message.DbException.get(DbException.java:146)
	at org.h2.message.DbException.get(DbException.java:135)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:172)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:119)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:92)
	at org.h2.Driver.connect(Driver.java:72)
	at java.sql.DriverManager.getConnection(DriverManager.java:579)
	at java.sql.DriverManager.getConnection(DriverManager.java:190)
	at org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl.getConnection(DriverManagerConnectionProviderImpl.java:173)
	at org.hibernate.internal.AbstractSessionImpl$NonContextualJdbcConnectionAccess.obtainConnection(AbstractSessionImpl.java:276)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:297)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.getConnection(LogicalConnectionImpl.java:169)
	at org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:67)
	at org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:160)
	at org.hibernate.internal.SessionImpl.beginTransaction(SessionImpl.java:1263)
	at org.myftp.gattserver.grass3.model.AbstractDAO.findAll(AbstractDAO.java:102)
	at org.myftp.gattserver.grass3.facades.ContentTagFacade.getAllContentTags(ContentTagFacade.java:34)
	at org.myftp.gattserver.grass3.pages.HomePage.createTagCloud(HomePage.java:117)
	at org.myftp.gattserver.grass3.pages.HomePage.createContent(HomePage.java:102)
	at org.myftp.gattserver.grass3.pages.template.GrassPage.init(GrassPage.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:344)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:295)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:130)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1479)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:461)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:314)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1129)
	at org.myftp.gattserver.grass3.pages.factories.template.PageFactory.createPage(PageFactory.java:43)
	at org.myftp.gattserver.grass3.GrassUI.init(GrassUI.java:65)
	at com.vaadin.ui.UI.doInit(UI.java:523)
	at com.vaadin.server.AbstractCommunicationManager.getBrowserDetailsUI(AbstractCommunicationManager.java:2457)
	at com.vaadin.server.AbstractCommunicationManager.handleBrowserDetailsRequest(AbstractCommunicationManager.java:2352)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:325)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:201)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:669)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1448)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:118)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:45)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(BasicAuthenticationFilter.java:150)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:183)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:192)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:160)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1419)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:455)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:557)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1075)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:384)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1009)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:255)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:154)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)
	at org.eclipse.jetty.server.Server.handle(Server.java:368)
	at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:488)
	at org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:932)
	at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:994)
	at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:640)
	at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235)
	at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:628)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)
	at java.lang.Thread.run(Thread.java:722)
Caused by: org.h2.jdbc.JdbcSQLException: The connection was not closed by the application and is garbage collected [90018-168]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:329)
	... 96 more
03-03 12:04:44 jdbc: java.lang.Exception: Open Stack Trace
	at org.h2.util.CloseWatcher.register(CloseWatcher.java:93)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:120)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:92)
	at org.h2.Driver.connect(Driver.java:72)
	at java.sql.DriverManager.getConnection(DriverManager.java:579)
	at java.sql.DriverManager.getConnection(DriverManager.java:190)
	at org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl.getConnection(DriverManagerConnectionProviderImpl.java:173)
	at org.hibernate.internal.AbstractSessionImpl$NonContextualJdbcConnectionAccess.obtainConnection(AbstractSessionImpl.java:276)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:297)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.getConnection(LogicalConnectionImpl.java:169)
	at org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:67)
	at org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:160)
	at org.hibernate.internal.SessionImpl.beginTransaction(SessionImpl.java:1263)
	at org.myftp.gattserver.grass3.model.AbstractDAO.findByID(AbstractDAO.java:133)
	at org.myftp.gattserver.grass3.facades.NodeFacade.getNodeById(NodeFacade.java:30)
	at org.myftp.gattserver.grass3.pages.template.ContentsTableFactory$ContentsTable.populateTable(ContentsTableFactory.java:118)
	at org.myftp.gattserver.grass3.pages.HomePage.createRecentMenus(HomePage.java:245)
	at org.myftp.gattserver.grass3.pages.HomePage.createContent(HomePage.java:99)
	at org.myftp.gattserver.grass3.pages.template.GrassPage.init(GrassPage.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:344)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:295)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:130)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1479)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:461)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:314)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1129)
	at org.myftp.gattserver.grass3.pages.factories.template.PageFactory.createPage(PageFactory.java:43)
	at org.myftp.gattserver.grass3.GrassUI.init(GrassUI.java:65)
	at com.vaadin.ui.UI.doInit(UI.java:523)
	at com.vaadin.server.AbstractCommunicationManager.getBrowserDetailsUI(AbstractCommunicationManager.java:2457)
	at com.vaadin.server.AbstractCommunicationManager.handleBrowserDetailsRequest(AbstractCommunicationManager.java:2352)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:325)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:201)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:669)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1448)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:118)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:45)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(BasicAuthenticationFilter.java:150)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:183)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:192)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:160)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1419)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:455)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:557)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1075)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:384)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1009)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:255)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:154)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)
	at org.eclipse.jetty.server.Server.handle(Server.java:368)
	at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:488)
	at org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:932)
	at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:994)
	at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:640)
	at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235)
	at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:628)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)
	at java.lang.Thread.run(Thread.java:722)

org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-168]
	at org.h2.message.DbException.get(DbException.java:169)
	at org.h2.message.DbException.get(DbException.java:146)
	at org.h2.message.DbException.get(DbException.java:135)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:172)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:119)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:92)
	at org.h2.Driver.connect(Driver.java:72)
	at java.sql.DriverManager.getConnection(DriverManager.java:579)
	at java.sql.DriverManager.getConnection(DriverManager.java:190)
	at org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl.getConnection(DriverManagerConnectionProviderImpl.java:173)
	at org.hibernate.internal.AbstractSessionImpl$NonContextualJdbcConnectionAccess.obtainConnection(AbstractSessionImpl.java:276)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:297)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.getConnection(LogicalConnectionImpl.java:169)
	at org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:67)
	at org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:160)
	at org.hibernate.internal.SessionImpl.beginTransaction(SessionImpl.java:1263)
	at org.myftp.gattserver.grass3.model.AbstractDAO.findAll(AbstractDAO.java:102)
	at org.myftp.gattserver.grass3.facades.ContentTagFacade.getAllContentTags(ContentTagFacade.java:34)
	at org.myftp.gattserver.grass3.pages.HomePage.createTagCloud(HomePage.java:117)
	at org.myftp.gattserver.grass3.pages.HomePage.createContent(HomePage.java:102)
	at org.myftp.gattserver.grass3.pages.template.GrassPage.init(GrassPage.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:344)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:295)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:130)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1479)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:461)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:314)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1129)
	at org.myftp.gattserver.grass3.pages.factories.template.PageFactory.createPage(PageFactory.java:43)
	at org.myftp.gattserver.grass3.GrassUI.init(GrassUI.java:65)
	at com.vaadin.ui.UI.doInit(UI.java:523)
	at com.vaadin.server.AbstractCommunicationManager.getBrowserDetailsUI(AbstractCommunicationManager.java:2457)
	at com.vaadin.server.AbstractCommunicationManager.handleBrowserDetailsRequest(AbstractCommunicationManager.java:2352)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:325)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:201)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:669)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1448)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:118)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:45)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(BasicAuthenticationFilter.java:150)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:183)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:192)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:160)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1419)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:455)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:557)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1075)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:384)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1009)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:255)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:154)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)
	at org.eclipse.jetty.server.Server.handle(Server.java:368)
	at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:488)
	at org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:932)
	at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:994)
	at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:640)
	at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235)
	at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:628)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)
	at java.lang.Thread.run(Thread.java:722)
Caused by: org.h2.jdbc.JdbcSQLException: The connection was not closed by the application and is garbage collected [90018-168]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:329)
	... 96 more
03-03 12:04:44 jdbc: java.lang.Exception: Open Stack Trace
	at org.h2.util.CloseWatcher.register(CloseWatcher.java:93)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:120)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:92)
	at org.h2.Driver.connect(Driver.java:72)
	at java.sql.DriverManager.getConnection(DriverManager.java:579)
	at java.sql.DriverManager.getConnection(DriverManager.java:190)
	at org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl.getConnection(DriverManagerConnectionProviderImpl.java:173)
	at org.hibernate.internal.AbstractSessionImpl$NonContextualJdbcConnectionAccess.obtainConnection(AbstractSessionImpl.java:276)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:297)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.getConnection(LogicalConnectionImpl.java:169)
	at org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:67)
	at org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:160)
	at org.hibernate.internal.SessionImpl.beginTransaction(SessionImpl.java:1263)
	at org.myftp.gattserver.grass3.model.AbstractDAO.findByID(AbstractDAO.java:133)
	at org.myftp.gattserver.grass3.facades.NodeFacade.getNodeById(NodeFacade.java:30)
	at org.myftp.gattserver.grass3.pages.template.ContentsTableFactory$ContentsTable.populateTable(ContentsTableFactory.java:118)
	at org.myftp.gattserver.grass3.pages.HomePage.createRecentMenus(HomePage.java:244)
	at org.myftp.gattserver.grass3.pages.HomePage.createContent(HomePage.java:99)
	at org.myftp.gattserver.grass3.pages.template.GrassPage.init(GrassPage.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:344)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:295)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:130)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1479)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:461)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:314)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1129)
	at org.myftp.gattserver.grass3.pages.factories.template.PageFactory.createPage(PageFactory.java:43)
	at org.myftp.gattserver.grass3.GrassUI.init(GrassUI.java:65)
	at com.vaadin.ui.UI.doInit(UI.java:523)
	at com.vaadin.server.AbstractCommunicationManager.getBrowserDetailsUI(AbstractCommunicationManager.java:2457)
	at com.vaadin.server.AbstractCommunicationManager.handleBrowserDetailsRequest(AbstractCommunicationManager.java:2352)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:325)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:201)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:669)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1448)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:118)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:45)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(BasicAuthenticationFilter.java:150)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:183)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:192)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:160)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1419)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:455)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:557)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1075)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:384)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1009)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:255)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:154)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)
	at org.eclipse.jetty.server.Server.handle(Server.java:368)
	at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:488)
	at org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:932)
	at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:994)
	at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:640)
	at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235)
	at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:628)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)
	at java.lang.Thread.run(Thread.java:722)

org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-168]
	at org.h2.message.DbException.get(DbException.java:169)
	at org.h2.message.DbException.get(DbException.java:146)
	at org.h2.message.DbException.get(DbException.java:135)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:172)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:119)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:92)
	at org.h2.Driver.connect(Driver.java:72)
	at java.sql.DriverManager.getConnection(DriverManager.java:579)
	at java.sql.DriverManager.getConnection(DriverManager.java:190)
	at org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl.getConnection(DriverManagerConnectionProviderImpl.java:173)
	at org.hibernate.internal.AbstractSessionImpl$NonContextualJdbcConnectionAccess.obtainConnection(AbstractSessionImpl.java:276)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:297)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.getConnection(LogicalConnectionImpl.java:169)
	at org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:67)
	at org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:160)
	at org.hibernate.internal.SessionImpl.beginTransaction(SessionImpl.java:1263)
	at org.myftp.gattserver.grass3.model.AbstractDAO.findAll(AbstractDAO.java:102)
	at org.myftp.gattserver.grass3.facades.ContentTagFacade.getAllContentTags(ContentTagFacade.java:34)
	at org.myftp.gattserver.grass3.pages.HomePage.createTagCloud(HomePage.java:117)
	at org.myftp.gattserver.grass3.pages.HomePage.createContent(HomePage.java:102)
	at org.myftp.gattserver.grass3.pages.template.GrassPage.init(GrassPage.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:344)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:295)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:130)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1479)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:461)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:314)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1129)
	at org.myftp.gattserver.grass3.pages.factories.template.PageFactory.createPage(PageFactory.java:43)
	at org.myftp.gattserver.grass3.GrassUI.init(GrassUI.java:65)
	at com.vaadin.ui.UI.doInit(UI.java:523)
	at com.vaadin.server.AbstractCommunicationManager.getBrowserDetailsUI(AbstractCommunicationManager.java:2457)
	at com.vaadin.server.AbstractCommunicationManager.handleBrowserDetailsRequest(AbstractCommunicationManager.java:2352)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:325)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:201)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:669)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1448)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:118)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:45)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(BasicAuthenticationFilter.java:150)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:183)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:192)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:160)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1419)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:455)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:557)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1075)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:384)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1009)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:255)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:154)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)
	at org.eclipse.jetty.server.Server.handle(Server.java:368)
	at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:488)
	at org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:932)
	at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:994)
	at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:640)
	at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235)
	at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:628)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)
	at java.lang.Thread.run(Thread.java:722)
Caused by: org.h2.jdbc.JdbcSQLException: The connection was not closed by the application and is garbage collected [90018-168]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:329)
	... 96 more
03-03 12:04:44 jdbc: java.lang.Exception: Open Stack Trace
	at org.h2.util.CloseWatcher.register(CloseWatcher.java:93)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:120)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:92)
	at org.h2.Driver.connect(Driver.java:72)
	at java.sql.DriverManager.getConnection(DriverManager.java:579)
	at java.sql.DriverManager.getConnection(DriverManager.java:190)
	at org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl.getConnection(DriverManagerConnectionProviderImpl.java:173)
	at org.hibernate.internal.AbstractSessionImpl$NonContextualJdbcConnectionAccess.obtainConnection(AbstractSessionImpl.java:276)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:297)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.getConnection(LogicalConnectionImpl.java:169)
	at org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:67)
	at org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:160)
	at org.hibernate.internal.SessionImpl.beginTransaction(SessionImpl.java:1263)
	at org.myftp.gattserver.grass3.model.AbstractDAO.findByID(AbstractDAO.java:133)
	at org.myftp.gattserver.grass3.facades.NodeFacade.getNodeById(NodeFacade.java:30)
	at org.myftp.gattserver.grass3.pages.template.ContentsTableFactory$ContentsTable.populateTable(ContentsTableFactory.java:118)
	at org.myftp.gattserver.grass3.pages.HomePage.createRecentMenus(HomePage.java:245)
	at org.myftp.gattserver.grass3.pages.HomePage.createContent(HomePage.java:99)
	at org.myftp.gattserver.grass3.pages.template.GrassPage.init(GrassPage.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:344)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:295)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:130)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1479)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:461)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:314)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1129)
	at org.myftp.gattserver.grass3.pages.factories.template.PageFactory.createPage(PageFactory.java:43)
	at org.myftp.gattserver.grass3.GrassUI.init(GrassUI.java:65)
	at com.vaadin.ui.UI.doInit(UI.java:523)
	at com.vaadin.server.AbstractCommunicationManager.getBrowserDetailsUI(AbstractCommunicationManager.java:2457)
	at com.vaadin.server.AbstractCommunicationManager.handleBrowserDetailsRequest(AbstractCommunicationManager.java:2352)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:325)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:201)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:669)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1448)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:118)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:45)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(BasicAuthenticationFilter.java:150)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:183)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:192)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:160)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1419)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:455)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:557)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1075)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:384)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1009)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:255)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:154)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)
	at org.eclipse.jetty.server.Server.handle(Server.java:368)
	at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:488)
	at org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:932)
	at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:994)
	at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:640)
	at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235)
	at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:628)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)
	at java.lang.Thread.run(Thread.java:722)

org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-168]
	at org.h2.message.DbException.get(DbException.java:169)
	at org.h2.message.DbException.get(DbException.java:146)
	at org.h2.message.DbException.get(DbException.java:135)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:172)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:119)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:92)
	at org.h2.Driver.connect(Driver.java:72)
	at java.sql.DriverManager.getConnection(DriverManager.java:579)
	at java.sql.DriverManager.getConnection(DriverManager.java:190)
	at org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl.getConnection(DriverManagerConnectionProviderImpl.java:173)
	at org.hibernate.internal.AbstractSessionImpl$NonContextualJdbcConnectionAccess.obtainConnection(AbstractSessionImpl.java:276)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:297)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.getConnection(LogicalConnectionImpl.java:169)
	at org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:67)
	at org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:160)
	at org.hibernate.internal.SessionImpl.beginTransaction(SessionImpl.java:1263)
	at org.myftp.gattserver.grass3.model.AbstractDAO.findAll(AbstractDAO.java:102)
	at org.myftp.gattserver.grass3.facades.ContentTagFacade.getAllContentTags(ContentTagFacade.java:34)
	at org.myftp.gattserver.grass3.pages.HomePage.createTagCloud(HomePage.java:117)
	at org.myftp.gattserver.grass3.pages.HomePage.createContent(HomePage.java:102)
	at org.myftp.gattserver.grass3.pages.template.GrassPage.init(GrassPage.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:344)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:295)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:130)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1479)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:461)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:314)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1129)
	at org.myftp.gattserver.grass3.pages.factories.template.PageFactory.createPage(PageFactory.java:43)
	at org.myftp.gattserver.grass3.GrassUI.init(GrassUI.java:65)
	at com.vaadin.ui.UI.doInit(UI.java:523)
	at com.vaadin.server.AbstractCommunicationManager.getBrowserDetailsUI(AbstractCommunicationManager.java:2457)
	at com.vaadin.server.AbstractCommunicationManager.handleBrowserDetailsRequest(AbstractCommunicationManager.java:2352)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:325)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:201)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:669)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1448)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:118)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:45)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(BasicAuthenticationFilter.java:150)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:183)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:192)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:160)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1419)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:455)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:557)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1075)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:384)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1009)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:255)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:154)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)
	at org.eclipse.jetty.server.Server.handle(Server.java:368)
	at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:488)
	at org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:932)
	at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:994)
	at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:640)
	at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235)
	at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:628)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)
	at java.lang.Thread.run(Thread.java:722)
Caused by: org.h2.jdbc.JdbcSQLException: The connection was not closed by the application and is garbage collected [90018-168]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:329)
	... 96 more
03-03 12:04:44 jdbc: java.lang.Exception: Open Stack Trace
	at org.h2.util.CloseWatcher.register(CloseWatcher.java:93)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:120)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:92)
	at org.h2.Driver.connect(Driver.java:72)
	at java.sql.DriverManager.getConnection(DriverManager.java:579)
	at java.sql.DriverManager.getConnection(DriverManager.java:190)
	at org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl.getConnection(DriverManagerConnectionProviderImpl.java:173)
	at org.hibernate.internal.AbstractSessionImpl$NonContextualJdbcConnectionAccess.obtainConnection(AbstractSessionImpl.java:276)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:297)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.getConnection(LogicalConnectionImpl.java:169)
	at org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:67)
	at org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:160)
	at org.hibernate.internal.SessionImpl.beginTransaction(SessionImpl.java:1263)
	at org.myftp.gattserver.grass3.model.AbstractDAO.findByID(AbstractDAO.java:133)
	at org.myftp.gattserver.grass3.facades.NodeFacade.getNodeById(NodeFacade.java:30)
	at org.myftp.gattserver.grass3.pages.template.ContentsTableFactory$ContentsTable.populateTable(ContentsTableFactory.java:118)
	at org.myftp.gattserver.grass3.pages.HomePage.createRecentMenus(HomePage.java:245)
	at org.myftp.gattserver.grass3.pages.HomePage.createContent(HomePage.java:99)
	at org.myftp.gattserver.grass3.pages.template.GrassPage.init(GrassPage.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:344)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:295)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:130)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1479)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:461)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:314)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1129)
	at org.myftp.gattserver.grass3.pages.factories.template.PageFactory.createPage(PageFactory.java:43)
	at org.myftp.gattserver.grass3.GrassUI.init(GrassUI.java:65)
	at com.vaadin.ui.UI.doInit(UI.java:523)
	at com.vaadin.server.AbstractCommunicationManager.getBrowserDetailsUI(AbstractCommunicationManager.java:2457)
	at com.vaadin.server.AbstractCommunicationManager.handleBrowserDetailsRequest(AbstractCommunicationManager.java:2352)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:325)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:201)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:669)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1448)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:118)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:45)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(BasicAuthenticationFilter.java:150)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:183)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:192)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:160)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1419)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:455)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:557)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1075)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:384)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1009)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:255)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:154)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)
	at org.eclipse.jetty.server.Server.handle(Server.java:368)
	at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:488)
	at org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:932)
	at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:994)
	at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:640)
	at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235)
	at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:628)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)
	at java.lang.Thread.run(Thread.java:722)

org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-168]
	at org.h2.message.DbException.get(DbException.java:169)
	at org.h2.message.DbException.get(DbException.java:146)
	at org.h2.message.DbException.get(DbException.java:135)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:172)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:119)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:92)
	at org.h2.Driver.connect(Driver.java:72)
	at java.sql.DriverManager.getConnection(DriverManager.java:579)
	at java.sql.DriverManager.getConnection(DriverManager.java:190)
	at org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl.getConnection(DriverManagerConnectionProviderImpl.java:173)
	at org.hibernate.internal.AbstractSessionImpl$NonContextualJdbcConnectionAccess.obtainConnection(AbstractSessionImpl.java:276)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:297)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.getConnection(LogicalConnectionImpl.java:169)
	at org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:67)
	at org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:160)
	at org.hibernate.internal.SessionImpl.beginTransaction(SessionImpl.java:1263)
	at org.myftp.gattserver.grass3.model.AbstractDAO.findAll(AbstractDAO.java:102)
	at org.myftp.gattserver.grass3.facades.ContentTagFacade.getAllContentTags(ContentTagFacade.java:34)
	at org.myftp.gattserver.grass3.pages.HomePage.createTagCloud(HomePage.java:117)
	at org.myftp.gattserver.grass3.pages.HomePage.createContent(HomePage.java:102)
	at org.myftp.gattserver.grass3.pages.template.GrassPage.init(GrassPage.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:344)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:295)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:130)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1479)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:461)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:314)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1129)
	at org.myftp.gattserver.grass3.pages.factories.template.PageFactory.createPage(PageFactory.java:43)
	at org.myftp.gattserver.grass3.GrassUI.init(GrassUI.java:65)
	at com.vaadin.ui.UI.doInit(UI.java:523)
	at com.vaadin.server.AbstractCommunicationManager.getBrowserDetailsUI(AbstractCommunicationManager.java:2457)
	at com.vaadin.server.AbstractCommunicationManager.handleBrowserDetailsRequest(AbstractCommunicationManager.java:2352)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:325)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:201)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:669)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1448)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:118)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:45)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(BasicAuthenticationFilter.java:150)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:183)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:192)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:160)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1419)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:455)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:557)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1075)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:384)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1009)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:255)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:154)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)
	at org.eclipse.jetty.server.Server.handle(Server.java:368)
	at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:488)
	at org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:932)
	at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:994)
	at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:640)
	at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235)
	at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:628)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)
	at java.lang.Thread.run(Thread.java:722)
Caused by: org.h2.jdbc.JdbcSQLException: The connection was not closed by the application and is garbage collected [90018-168]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:329)
	... 96 more
03-03 12:04:44 jdbc: 
/**/conn51.getAutoCommit();
03-03 12:04:44 jdbc: 
/**/conn51.setAutoCommit(false);
03-03 12:04:44 jdbc: SESSION_SET_AUTOCOMMIT 0
03-03 12:04:44 jdbc: 
/**/conn51.getAutoCommit();
03-03 12:04:44 jdbc: 
/**/PreparedStatement prep535 = conn51.prepareStatement("select this_.id as id2_0_, this_.name as name2_0_ from CONTENT_TAG this_");
03-03 12:04:44 jdbc: SESSION_PREPARE_READ_PARAMS 0
03-03 12:04:44 jdbc: 
/**/ResultSet rs536 = prep535.executeQuery();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 0
03-03 12:04:44 jdbc: RESULT_CLOSE 1
03-03 12:04:44 jdbc: 
/**/rs536.next();
03-03 12:04:44 jdbc: 
/**/rs536.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.getString("name2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.next();
03-03 12:04:44 jdbc: 
/**/rs536.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.getString("name2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.next();
03-03 12:04:44 jdbc: 
/**/rs536.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.getString("name2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.next();
03-03 12:04:44 jdbc: 
/**/rs536.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.getString("name2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.next();
03-03 12:04:44 jdbc: 
/**/rs536.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.getString("name2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.next();
03-03 12:04:44 jdbc: 
/**/rs536.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.getString("name2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.next();
03-03 12:04:44 jdbc: 
/**/rs536.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.getString("name2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.next();
03-03 12:04:44 jdbc: 
/**/rs536.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.getString("name2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.next();
03-03 12:04:44 jdbc: 
/**/rs536.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.getString("name2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.next();
03-03 12:04:44 jdbc: 
/**/rs536.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.getString("name2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.next();
03-03 12:04:44 jdbc: 
/**/rs536.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.getString("name2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.next();
03-03 12:04:44 jdbc: 
/**/rs536.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.getString("name2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.next();
03-03 12:04:44 jdbc: 
/**/rs536.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.getString("name2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.next();
03-03 12:04:44 jdbc: 
/**/rs536.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.getString("name2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.next();
03-03 12:04:44 jdbc: 
/**/rs536.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.getString("name2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.next();
03-03 12:04:44 jdbc: 
/**/rs536.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.getString("name2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.next();
03-03 12:04:44 jdbc: 
/**/rs536.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.getString("name2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.next();
03-03 12:04:44 jdbc: 
/**/rs536.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.getString("name2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.next();
03-03 12:04:44 jdbc: 
/**/rs536.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.getString("name2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.next();
03-03 12:04:44 jdbc: 
/**/rs536.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.getString("name2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.next();
03-03 12:04:44 jdbc: 
/**/rs536.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.getString("name2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.next();
03-03 12:04:44 jdbc: 
/**/rs536.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.getString("name2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.next();
03-03 12:04:44 jdbc: 
/**/rs536.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.getString("name2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.next();
03-03 12:04:44 jdbc: 
/**/rs536.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.getString("name2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.next();
03-03 12:04:44 jdbc: 
/**/rs536.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.getString("name2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.next();
03-03 12:04:44 jdbc: 
/**/rs536.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.getString("name2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.next();
03-03 12:04:44 jdbc: 
/**/rs536.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.getString("name2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.next();
03-03 12:04:44 jdbc: 
/**/rs536.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.getString("name2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.next();
03-03 12:04:44 jdbc: 
/**/rs536.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.getString("name2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.next();
03-03 12:04:44 jdbc: 
/**/rs536.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.getString("name2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.next();
03-03 12:04:44 jdbc: 
/**/rs536.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.getString("name2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.next();
03-03 12:04:44 jdbc: 
/**/rs536.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.getString("name2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.next();
03-03 12:04:44 jdbc: 
/**/rs536.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.getString("name2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.next();
03-03 12:04:44 jdbc: 
/**/rs536.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.getString("name2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.next();
03-03 12:04:44 jdbc: 
/**/rs536.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.getString("name2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.next();
03-03 12:04:44 jdbc: 
/**/rs536.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.getString("name2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.next();
03-03 12:04:44 jdbc: 
/**/rs536.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.getString("name2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.next();
03-03 12:04:44 jdbc: 
/**/rs536.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.getString("name2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.next();
03-03 12:04:44 jdbc: 
/**/rs536.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.getString("name2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.next();
03-03 12:04:44 jdbc: 
/**/rs536.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.getString("name2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.next();
03-03 12:04:44 jdbc: 
/**/rs536.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.getString("name2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.next();
03-03 12:04:44 jdbc: 
/**/rs536.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.getString("name2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.next();
03-03 12:04:44 jdbc: 
/**/rs536.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.getString("name2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.next();
03-03 12:04:44 jdbc: 
/**/rs536.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.getString("name2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.next();
03-03 12:04:44 jdbc: 
/**/rs536.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.getString("name2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.next();
03-03 12:04:44 jdbc: 
/**/rs536.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.getString("name2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.next();
03-03 12:04:44 jdbc: 
/**/rs536.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.getString("name2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.next();
03-03 12:04:44 jdbc: 
/**/rs536.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.getString("name2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.next();
03-03 12:04:44 jdbc: 
/**/rs536.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.getString("name2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.next();
03-03 12:04:44 jdbc: 
/**/rs536.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.getString("name2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.next();
03-03 12:04:44 jdbc: 
/**/rs536.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.getString("name2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.next();
03-03 12:04:44 jdbc: 
/**/rs536.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.getString("name2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.next();
03-03 12:04:44 jdbc: 
/**/rs536.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.getString("name2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.next();
03-03 12:04:44 jdbc: 
/**/rs536.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.getString("name2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.next();
03-03 12:04:44 jdbc: 
/**/rs536.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.getString("name2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.next();
03-03 12:04:44 jdbc: 
/**/rs536.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.getString("name2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.next();
03-03 12:04:44 jdbc: 
/**/rs536.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.getString("name2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.next();
03-03 12:04:44 jdbc: 
/**/rs536.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.getString("name2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.next();
03-03 12:04:44 jdbc: 
/**/rs536.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.getString("name2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.next();
03-03 12:04:44 jdbc: 
/**/rs536.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.getString("name2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.next();
03-03 12:04:44 jdbc: 
/**/rs536.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.getString("name2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.next();
03-03 12:04:44 jdbc: 
/**/rs536.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.getString("name2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.next();
03-03 12:04:44 jdbc: 
/**/rs536.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.getString("name2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.next();
03-03 12:04:44 jdbc: 
/**/rs536.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.getString("name2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.next();
03-03 12:04:44 jdbc: 
/**/rs536.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.getString("name2_0_");
03-03 12:04:44 jdbc: 
/**/rs536.wasNull();
03-03 12:04:44 jdbc: 
/**/rs536.next();
03-03 12:04:44 jdbc: 
/**/rs536.close();
03-03 12:04:44 jdbc: 
/**/prep535.getMaxRows();
03-03 12:04:44 jdbc: 
/**/prep535.getQueryTimeout();
03-03 12:04:44 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:44 jdbc: SESSION_PREPARE_READ_PARAMS 2
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 2
03-03 12:04:44 jdbc: RESULT_CLOSE 3
03-03 12:04:44 jdbc: 
/**/prep535.close();
03-03 12:04:44 jdbc: COMMAND_CLOSE 0
03-03 12:04:44 jdbc: 
/**/conn51.commit();
03-03 12:04:44 jdbc: SESSION_PREPARE_READ_PARAMS 4
03-03 12:04:44 jdbc: COMMAND_EXECUTE_UPDATE 4
03-03 12:04:44 jdbc: 
/**/PreparedStatement prep536 = conn51.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 12:04:44 jdbc: SESSION_PREPARE_READ_PARAMS 5
03-03 12:04:44 jdbc: 
/**/prep536.setLong(1, 9L);
03-03 12:04:44 jdbc: 
/**/ResultSet rs537 = prep536.executeQuery();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 5
03-03 12:04:44 jdbc: RESULT_CLOSE 6
03-03 12:04:44 jdbc: 
/**/rs537.next();
03-03 12:04:44 jdbc: 
/**/rs537.getLong("id1_0_");
03-03 12:04:44 jdbc: 
/**/rs537.wasNull();
03-03 12:04:44 jdbc: 
/**/rs537.getLong("id0_1_");
03-03 12:04:44 jdbc: 
/**/rs537.wasNull();
03-03 12:04:44 jdbc: 
/**/rs537.getLong("id4_2_");
03-03 12:04:44 jdbc: 
/**/rs537.wasNull();
03-03 12:04:44 jdbc: 
/**/rs537.getLong("id4_3_");
03-03 12:04:44 jdbc: 
/**/rs537.wasNull();
03-03 12:04:44 jdbc: 
/**/rs537.getLong("author8_1_0_");
03-03 12:04:44 jdbc: 
/**/rs537.wasNull();
03-03 12:04:44 jdbc: 
/**/rs537.getLong("contentId1_0_");
03-03 12:04:44 jdbc: 
/**/rs537.wasNull();
03-03 12:04:44 jdbc: 
/**/rs537.getString("contentR3_1_0_");
03-03 12:04:44 jdbc: 
/**/rs537.wasNull();
03-03 12:04:44 jdbc: 
/**/rs537.getTimestamp("creation4_1_0_");
03-03 12:04:44 jdbc: 
/**/rs537.wasNull();
03-03 12:04:44 jdbc: 
/**/rs537.getTimestamp("lastModi5_1_0_");
03-03 12:04:44 jdbc: 
/**/rs537.wasNull();
03-03 12:04:44 jdbc: 
/**/rs537.getString("name1_0_");
03-03 12:04:44 jdbc: 
/**/rs537.wasNull();
03-03 12:04:44 jdbc: 
/**/rs537.getLong("parent9_1_0_");
03-03 12:04:44 jdbc: 
/**/rs537.wasNull();
03-03 12:04:44 jdbc: 
/**/rs537.getBoolean("publicated1_0_");
03-03 12:04:44 jdbc: 
/**/rs537.wasNull();
03-03 12:04:44 jdbc: 
/**/rs537.getBoolean("confirmed0_1_");
03-03 12:04:44 jdbc: 
/**/rs537.wasNull();
03-03 12:04:44 jdbc: 
/**/rs537.getString("email0_1_");
03-03 12:04:44 jdbc: 
/**/rs537.wasNull();
03-03 12:04:44 jdbc: 
/**/rs537.getTimestamp("LAST4_0_1_");
03-03 12:04:44 jdbc: 
/**/rs537.getString("name0_1_");
03-03 12:04:44 jdbc: 
/**/rs537.wasNull();
03-03 12:04:44 jdbc: 
/**/rs537.getString("password0_1_");
03-03 12:04:44 jdbc: 
/**/rs537.wasNull();
03-03 12:04:44 jdbc: 
/**/rs537.getTimestamp("REGISTRA7_0_1_");
03-03 12:04:44 jdbc: 
/**/rs537.wasNull();
03-03 12:04:44 jdbc: 
/**/rs537.getString("name4_2_");
03-03 12:04:44 jdbc: 
/**/rs537.wasNull();
03-03 12:04:44 jdbc: 
/**/rs537.getLong("parent3_4_2_");
03-03 12:04:44 jdbc: 
/**/rs537.wasNull();
03-03 12:04:44 jdbc: 
/**/rs537.getString("name4_3_");
03-03 12:04:44 jdbc: 
/**/rs537.wasNull();
03-03 12:04:44 jdbc: 
/**/rs537.getLong("parent3_4_3_");
03-03 12:04:44 jdbc: 
/**/rs537.wasNull();
03-03 12:04:44 jdbc: 
/**/rs537.getLong("contentT2_2_4_");
03-03 12:04:44 jdbc: 
/**/rs537.wasNull();
03-03 12:04:44 jdbc: 
/**/rs537.getLong("contentN1_4_");
03-03 12:04:44 jdbc: 
/**/rs537.wasNull();
03-03 12:04:44 jdbc: 
/**/rs537.next();
03-03 12:04:44 jdbc: 
/**/rs537.close();
03-03 12:04:44 jdbc: 
/**/prep536.getMaxRows();
03-03 12:04:44 jdbc: 
/**/prep536.getQueryTimeout();
03-03 12:04:44 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 2
03-03 12:04:44 jdbc: RESULT_CLOSE 7
03-03 12:04:44 jdbc: 
/**/prep536.close();
03-03 12:04:44 jdbc: COMMAND_CLOSE 5
03-03 12:04:44 jdbc: 
/**/PreparedStatement prep537 = conn51.prepareStatement("select node0_.id as id4_1_, node0_.name as name4_1_, node0_.parent_id as parent3_4_1_, node1_.id as id4_0_, node1_.name as name4_0_, node1_.parent_id as parent3_4_0_ from NODE node0_ left outer join NODE node1_ on node0_.parent_id=node1_.id where node0_.id=?");
03-03 12:04:44 jdbc: SESSION_PREPARE_READ_PARAMS 8
03-03 12:04:44 jdbc: 
/**/prep537.setLong(1, 1L);
03-03 12:04:44 jdbc: 
/**/ResultSet rs538 = prep537.executeQuery();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 8
03-03 12:04:44 jdbc: RESULT_CLOSE 9
03-03 12:04:44 jdbc: 
/**/rs538.next();
03-03 12:04:44 jdbc: 
/**/rs538.getLong("id4_0_");
03-03 12:04:44 jdbc: 
/**/rs538.wasNull();
03-03 12:04:44 jdbc: 
/**/rs538.getString("name4_1_");
03-03 12:04:44 jdbc: 
/**/rs538.wasNull();
03-03 12:04:44 jdbc: 
/**/rs538.getLong("parent3_4_1_");
03-03 12:04:44 jdbc: 
/**/rs538.wasNull();
03-03 12:04:44 jdbc: 
/**/rs538.next();
03-03 12:04:44 jdbc: 
/**/rs538.close();
03-03 12:04:44 jdbc: 
/**/prep537.getMaxRows();
03-03 12:04:44 jdbc: 
/**/prep537.getQueryTimeout();
03-03 12:04:44 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 2
03-03 12:04:44 jdbc: RESULT_CLOSE 10
03-03 12:04:44 jdbc: 
/**/prep537.close();
03-03 12:04:44 jdbc: COMMAND_CLOSE 8
03-03 12:04:44 jdbc: 
/**/PreparedStatement prep538 = conn51.prepareStatement("select roles0_.User_id as User1_0_0_, roles0_.roles as roles0_ from User_roles roles0_ where roles0_.User_id=?");
03-03 12:04:44 jdbc: SESSION_PREPARE_READ_PARAMS 11
03-03 12:04:44 jdbc: 
/**/prep538.setLong(1, 1L);
03-03 12:04:44 jdbc: 
/**/ResultSet rs539 = prep538.executeQuery();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 11
03-03 12:04:44 jdbc: RESULT_CLOSE 12
03-03 12:04:44 jdbc: 
/**/rs539.next();
03-03 12:04:44 jdbc: 
/**/rs539.getLong("User1_0_0_");
03-03 12:04:44 jdbc: 
/**/rs539.wasNull();
03-03 12:04:44 jdbc: 
/**/rs539.getObject("roles0_");
03-03 12:04:44 jdbc: 
/**/rs539.wasNull();
03-03 12:04:44 jdbc: 
/**/rs539.next();
03-03 12:04:44 jdbc: 
/**/rs539.getLong("User1_0_0_");
03-03 12:04:44 jdbc: 
/**/rs539.wasNull();
03-03 12:04:44 jdbc: 
/**/rs539.getObject("roles0_");
03-03 12:04:44 jdbc: 
/**/rs539.wasNull();
03-03 12:04:44 jdbc: 
/**/rs539.next();
03-03 12:04:44 jdbc: 
/**/rs539.getLong("User1_0_0_");
03-03 12:04:44 jdbc: 
/**/rs539.wasNull();
03-03 12:04:44 jdbc: 
/**/rs539.getObject("roles0_");
03-03 12:04:44 jdbc: 
/**/rs539.wasNull();
03-03 12:04:44 jdbc: 
/**/rs539.next();
03-03 12:04:44 jdbc: 
/**/rs539.getLong("User1_0_0_");
03-03 12:04:44 jdbc: 
/**/rs539.wasNull();
03-03 12:04:44 jdbc: 
/**/rs539.getObject("roles0_");
03-03 12:04:44 jdbc: 
/**/rs539.wasNull();
03-03 12:04:44 jdbc: 
/**/rs539.next();
03-03 12:04:44 jdbc: 
/**/rs539.getLong("User1_0_0_");
03-03 12:04:44 jdbc: 
/**/rs539.wasNull();
03-03 12:04:44 jdbc: 
/**/rs539.getObject("roles0_");
03-03 12:04:44 jdbc: 
/**/rs539.wasNull();
03-03 12:04:44 jdbc: 
/**/rs539.next();
03-03 12:04:44 jdbc: 
/**/rs539.close();
03-03 12:04:44 jdbc: 
/**/prep538.getMaxRows();
03-03 12:04:44 jdbc: 
/**/prep538.getQueryTimeout();
03-03 12:04:44 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 2
03-03 12:04:44 jdbc: RESULT_CLOSE 13
03-03 12:04:44 jdbc: 
/**/prep538.close();
03-03 12:04:44 jdbc: COMMAND_CLOSE 11
03-03 12:04:44 jdbc: 
/**/PreparedStatement prep539 = conn51.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 12:04:44 jdbc: SESSION_PREPARE_READ_PARAMS 14
03-03 12:04:44 jdbc: 
/**/prep539.setLong(1, 4L);
03-03 12:04:44 jdbc: 
/**/ResultSet rs540 = prep539.executeQuery();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 14
03-03 12:04:44 jdbc: RESULT_CLOSE 15
03-03 12:04:44 jdbc: 
/**/rs540.next();
03-03 12:04:44 jdbc: 
/**/rs540.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs540.wasNull();
03-03 12:04:44 jdbc: 
/**/rs540.getLong("contentN1_1_1_");
03-03 12:04:44 jdbc: 
/**/rs540.wasNull();
03-03 12:04:44 jdbc: 
/**/rs540.getLong("contentT2_1_");
03-03 12:04:44 jdbc: 
/**/rs540.wasNull();
03-03 12:04:44 jdbc: 
/**/rs540.next();
03-03 12:04:44 jdbc: 
/**/rs540.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs540.wasNull();
03-03 12:04:44 jdbc: 
/**/rs540.getLong("contentN1_1_1_");
03-03 12:04:44 jdbc: 
/**/rs540.wasNull();
03-03 12:04:44 jdbc: 
/**/rs540.getLong("contentT2_1_");
03-03 12:04:44 jdbc: 
/**/rs540.wasNull();
03-03 12:04:44 jdbc: 
/**/rs540.next();
03-03 12:04:44 jdbc: 
/**/rs540.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs540.wasNull();
03-03 12:04:44 jdbc: 
/**/rs540.getLong("contentN1_1_1_");
03-03 12:04:44 jdbc: 
/**/rs540.wasNull();
03-03 12:04:44 jdbc: 
/**/rs540.getLong("contentT2_1_");
03-03 12:04:44 jdbc: 
/**/rs540.wasNull();
03-03 12:04:44 jdbc: 
/**/rs540.next();
03-03 12:04:44 jdbc: 
/**/rs540.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs540.wasNull();
03-03 12:04:44 jdbc: 
/**/rs540.getLong("contentN1_1_1_");
03-03 12:04:44 jdbc: 
/**/rs540.wasNull();
03-03 12:04:44 jdbc: 
/**/rs540.getLong("contentT2_1_");
03-03 12:04:44 jdbc: 
/**/rs540.wasNull();
03-03 12:04:44 jdbc: 
/**/rs540.next();
03-03 12:04:44 jdbc: 
/**/rs540.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs540.wasNull();
03-03 12:04:44 jdbc: 
/**/rs540.getLong("contentN1_1_1_");
03-03 12:04:44 jdbc: 
/**/rs540.wasNull();
03-03 12:04:44 jdbc: 
/**/rs540.getLong("contentT2_1_");
03-03 12:04:44 jdbc: 
/**/rs540.wasNull();
03-03 12:04:44 jdbc: 
/**/rs540.next();
03-03 12:04:44 jdbc: 
/**/rs540.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs540.wasNull();
03-03 12:04:44 jdbc: 
/**/rs540.getLong("contentN1_1_1_");
03-03 12:04:44 jdbc: 
/**/rs540.wasNull();
03-03 12:04:44 jdbc: 
/**/rs540.getLong("contentT2_1_");
03-03 12:04:44 jdbc: 
/**/rs540.wasNull();
03-03 12:04:44 jdbc: 
/**/rs540.next();
03-03 12:04:44 jdbc: 
/**/rs540.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs540.wasNull();
03-03 12:04:44 jdbc: 
/**/rs540.getLong("contentN1_1_1_");
03-03 12:04:44 jdbc: 
/**/rs540.wasNull();
03-03 12:04:44 jdbc: 
/**/rs540.getLong("contentT2_1_");
03-03 12:04:44 jdbc: 
/**/rs540.wasNull();
03-03 12:04:44 jdbc: 
/**/rs540.next();
03-03 12:04:44 jdbc: 
/**/rs540.close();
03-03 12:04:44 jdbc: 
/**/prep539.getMaxRows();
03-03 12:04:44 jdbc: 
/**/prep539.getQueryTimeout();
03-03 12:04:44 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 2
03-03 12:04:44 jdbc: RESULT_CLOSE 16
03-03 12:04:44 jdbc: 
/**/prep539.close();
03-03 12:04:44 jdbc: COMMAND_CLOSE 14
03-03 12:04:44 jdbc: 
/**/PreparedStatement prep540 = conn51.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 12:04:44 jdbc: SESSION_PREPARE_READ_PARAMS 17
03-03 12:04:44 jdbc: 
/**/prep540.setLong(1, 10L);
03-03 12:04:44 jdbc: 
/**/ResultSet rs541 = prep540.executeQuery();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 17
03-03 12:04:44 jdbc: RESULT_CLOSE 18
03-03 12:04:44 jdbc: 
/**/rs541.next();
03-03 12:04:44 jdbc: 
/**/rs541.getLong("id1_0_");
03-03 12:04:44 jdbc: 
/**/rs541.wasNull();
03-03 12:04:44 jdbc: 
/**/rs541.getLong("id0_1_");
03-03 12:04:44 jdbc: 
/**/rs541.wasNull();
03-03 12:04:44 jdbc: 
/**/rs541.getLong("id4_2_");
03-03 12:04:44 jdbc: 
/**/rs541.wasNull();
03-03 12:04:44 jdbc: 
/**/rs541.getLong("id4_3_");
03-03 12:04:44 jdbc: 
/**/rs541.wasNull();
03-03 12:04:44 jdbc: 
/**/rs541.getLong("contentT2_2_4_");
03-03 12:04:44 jdbc: 
/**/rs541.wasNull();
03-03 12:04:44 jdbc: 
/**/rs541.getLong("contentN1_4_");
03-03 12:04:44 jdbc: 
/**/rs541.wasNull();
03-03 12:04:44 jdbc: 
/**/rs541.next();
03-03 12:04:44 jdbc: 
/**/rs541.close();
03-03 12:04:44 jdbc: 
/**/prep540.getMaxRows();
03-03 12:04:44 jdbc: 
/**/prep540.getQueryTimeout();
03-03 12:04:44 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 2
03-03 12:04:44 jdbc: RESULT_CLOSE 19
03-03 12:04:44 jdbc: 
/**/prep540.close();
03-03 12:04:44 jdbc: COMMAND_CLOSE 17
03-03 12:04:44 jdbc: 
/**/PreparedStatement prep541 = conn51.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 12:04:44 jdbc: SESSION_PREPARE_READ_PARAMS 20
03-03 12:04:44 jdbc: 
/**/prep541.setLong(1, 11L);
03-03 12:04:44 jdbc: 
/**/ResultSet rs542 = prep541.executeQuery();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 20
03-03 12:04:44 jdbc: RESULT_CLOSE 21
03-03 12:04:44 jdbc: 
/**/rs542.next();
03-03 12:04:44 jdbc: 
/**/rs542.getLong("id1_0_");
03-03 12:04:44 jdbc: 
/**/rs542.wasNull();
03-03 12:04:44 jdbc: 
/**/rs542.getLong("id0_1_");
03-03 12:04:44 jdbc: 
/**/rs542.wasNull();
03-03 12:04:44 jdbc: 
/**/rs542.getLong("id4_2_");
03-03 12:04:44 jdbc: 
/**/rs542.wasNull();
03-03 12:04:44 jdbc: 
/**/rs542.getLong("id4_3_");
03-03 12:04:44 jdbc: 
/**/rs542.wasNull();
03-03 12:04:44 jdbc: 
/**/rs542.getLong("contentT2_2_4_");
03-03 12:04:44 jdbc: 
/**/rs542.wasNull();
03-03 12:04:44 jdbc: 
/**/rs542.getLong("contentN1_4_");
03-03 12:04:44 jdbc: 
/**/rs542.wasNull();
03-03 12:04:44 jdbc: 
/**/rs542.next();
03-03 12:04:44 jdbc: 
/**/rs542.close();
03-03 12:04:44 jdbc: 
/**/prep541.getMaxRows();
03-03 12:04:44 jdbc: 
/**/prep541.getQueryTimeout();
03-03 12:04:44 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 2
03-03 12:04:44 jdbc: RESULT_CLOSE 22
03-03 12:04:44 jdbc: 
/**/prep541.close();
03-03 12:04:44 jdbc: COMMAND_CLOSE 20
03-03 12:04:44 jdbc: 
/**/PreparedStatement prep542 = conn51.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 12:04:44 jdbc: SESSION_PREPARE_READ_PARAMS 23
03-03 12:04:44 jdbc: 
/**/prep542.setLong(1, 12L);
03-03 12:04:44 jdbc: 
/**/ResultSet rs543 = prep542.executeQuery();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 23
03-03 12:04:44 jdbc: RESULT_CLOSE 24
03-03 12:04:44 jdbc: 
/**/rs543.next();
03-03 12:04:44 jdbc: 
/**/rs543.getLong("id1_0_");
03-03 12:04:44 jdbc: 
/**/rs543.wasNull();
03-03 12:04:44 jdbc: 
/**/rs543.getLong("id0_1_");
03-03 12:04:44 jdbc: 
/**/rs543.wasNull();
03-03 12:04:44 jdbc: 
/**/rs543.getLong("id4_2_");
03-03 12:04:44 jdbc: 
/**/rs543.wasNull();
03-03 12:04:44 jdbc: 
/**/rs543.getLong("id4_3_");
03-03 12:04:44 jdbc: 
/**/rs543.wasNull();
03-03 12:04:44 jdbc: 
/**/rs543.getLong("contentT2_2_4_");
03-03 12:04:44 jdbc: 
/**/rs543.wasNull();
03-03 12:04:44 jdbc: 
/**/rs543.getLong("contentN1_4_");
03-03 12:04:44 jdbc: 
/**/rs543.wasNull();
03-03 12:04:44 jdbc: 
/**/rs543.next();
03-03 12:04:44 jdbc: 
/**/rs543.close();
03-03 12:04:44 jdbc: 
/**/prep542.getMaxRows();
03-03 12:04:44 jdbc: 
/**/prep542.getQueryTimeout();
03-03 12:04:44 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 2
03-03 12:04:44 jdbc: RESULT_CLOSE 25
03-03 12:04:44 jdbc: 
/**/prep542.close();
03-03 12:04:44 jdbc: COMMAND_CLOSE 23
03-03 12:04:44 jdbc: 
/**/PreparedStatement prep543 = conn51.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 12:04:44 jdbc: SESSION_PREPARE_READ_PARAMS 26
03-03 12:04:44 jdbc: 
/**/prep543.setLong(1, 13L);
03-03 12:04:44 jdbc: 
/**/ResultSet rs544 = prep543.executeQuery();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 26
03-03 12:04:44 jdbc: RESULT_CLOSE 27
03-03 12:04:44 jdbc: 
/**/rs544.next();
03-03 12:04:44 jdbc: 
/**/rs544.getLong("id1_0_");
03-03 12:04:44 jdbc: 
/**/rs544.wasNull();
03-03 12:04:44 jdbc: 
/**/rs544.getLong("id0_1_");
03-03 12:04:44 jdbc: 
/**/rs544.wasNull();
03-03 12:04:44 jdbc: 
/**/rs544.getLong("id4_2_");
03-03 12:04:44 jdbc: 
/**/rs544.wasNull();
03-03 12:04:44 jdbc: 
/**/rs544.getLong("id4_3_");
03-03 12:04:44 jdbc: 
/**/rs544.wasNull();
03-03 12:04:44 jdbc: 
/**/rs544.getLong("contentT2_2_4_");
03-03 12:04:44 jdbc: 
/**/rs544.wasNull();
03-03 12:04:44 jdbc: 
/**/rs544.getLong("contentN1_4_");
03-03 12:04:44 jdbc: 
/**/rs544.wasNull();
03-03 12:04:44 jdbc: 
/**/rs544.next();
03-03 12:04:44 jdbc: 
/**/rs544.close();
03-03 12:04:44 jdbc: 
/**/prep543.getMaxRows();
03-03 12:04:44 jdbc: 
/**/prep543.getQueryTimeout();
03-03 12:04:44 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 2
03-03 12:04:44 jdbc: RESULT_CLOSE 28
03-03 12:04:44 jdbc: 
/**/prep543.close();
03-03 12:04:44 jdbc: COMMAND_CLOSE 26
03-03 12:04:44 jdbc: 
/**/PreparedStatement prep544 = conn51.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 12:04:44 jdbc: SESSION_PREPARE_READ_PARAMS 29
03-03 12:04:44 jdbc: 
/**/prep544.setLong(1, 15L);
03-03 12:04:44 jdbc: 
/**/ResultSet rs545 = prep544.executeQuery();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 29
03-03 12:04:44 jdbc: RESULT_CLOSE 30
03-03 12:04:44 jdbc: 
/**/rs545.next();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("id1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("id0_1_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("id4_2_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("id4_3_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("contentT2_2_4_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("contentN1_4_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.next();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("id1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("id0_1_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("id4_2_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("id4_3_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("author8_1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("contentId1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getString("contentR3_1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getTimestamp("creation4_1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getTimestamp("lastModi5_1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getString("name1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("parent9_1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getBoolean("publicated1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("contentT2_2_4_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("contentN1_4_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.next();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("id1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("id0_1_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("id4_2_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("id4_3_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("author8_1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("contentId1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getString("contentR3_1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getTimestamp("creation4_1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getTimestamp("lastModi5_1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getString("name1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("parent9_1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getBoolean("publicated1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("contentT2_2_4_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("contentN1_4_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.next();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("id1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("id0_1_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("id4_2_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("id4_3_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("author8_1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("contentId1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getString("contentR3_1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getTimestamp("creation4_1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getTimestamp("lastModi5_1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getString("name1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("parent9_1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getBoolean("publicated1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("contentT2_2_4_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("contentN1_4_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.next();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("id1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("id0_1_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("id4_2_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("id4_3_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("author8_1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("contentId1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getString("contentR3_1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getTimestamp("creation4_1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getTimestamp("lastModi5_1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getString("name1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("parent9_1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getBoolean("publicated1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("contentT2_2_4_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("contentN1_4_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.next();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("id1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("id0_1_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("id4_2_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("id4_3_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("author8_1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("contentId1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getString("contentR3_1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getTimestamp("creation4_1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getTimestamp("lastModi5_1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getString("name1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("parent9_1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getBoolean("publicated1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("contentT2_2_4_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("contentN1_4_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.next();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("id1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("id0_1_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("id4_2_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("id4_3_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("author8_1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("contentId1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getString("contentR3_1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getTimestamp("creation4_1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getTimestamp("lastModi5_1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getString("name1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("parent9_1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getBoolean("publicated1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("contentT2_2_4_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("contentN1_4_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.next();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("id1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("id0_1_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("id4_2_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("id4_3_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("author8_1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("contentId1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getString("contentR3_1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getTimestamp("creation4_1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getTimestamp("lastModi5_1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getString("name1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("parent9_1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getBoolean("publicated1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("contentT2_2_4_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("contentN1_4_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.next();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("id1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("id0_1_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("id4_2_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("id4_3_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("author8_1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("contentId1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getString("contentR3_1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getTimestamp("creation4_1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getTimestamp("lastModi5_1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getString("name1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("parent9_1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getBoolean("publicated1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("contentT2_2_4_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("contentN1_4_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.next();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("id1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("id0_1_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("id4_2_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("id4_3_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("author8_1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("contentId1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getString("contentR3_1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getTimestamp("creation4_1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getTimestamp("lastModi5_1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getString("name1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("parent9_1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getBoolean("publicated1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("contentT2_2_4_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("contentN1_4_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.next();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("id1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("id0_1_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("id4_2_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("id4_3_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("author8_1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("contentId1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getString("contentR3_1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getTimestamp("creation4_1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getTimestamp("lastModi5_1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getString("name1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("parent9_1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getBoolean("publicated1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("contentT2_2_4_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("contentN1_4_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.next();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("id1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("id0_1_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("id4_2_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("id4_3_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("author8_1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("contentId1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getString("contentR3_1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getTimestamp("creation4_1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getTimestamp("lastModi5_1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getString("name1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("parent9_1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getBoolean("publicated1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("contentT2_2_4_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("contentN1_4_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.next();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("id1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("id0_1_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("id4_2_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("id4_3_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("author8_1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("contentId1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getString("contentR3_1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getTimestamp("creation4_1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getTimestamp("lastModi5_1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getString("name1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("parent9_1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getBoolean("publicated1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("contentT2_2_4_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("contentN1_4_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.next();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("id1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("id0_1_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("id4_2_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("id4_3_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("author8_1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("contentId1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getString("contentR3_1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getTimestamp("creation4_1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getTimestamp("lastModi5_1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getString("name1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("parent9_1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getBoolean("publicated1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("contentT2_2_4_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("contentN1_4_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.next();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("id1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("id0_1_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("id4_2_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("id4_3_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("author8_1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("contentId1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getString("contentR3_1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getTimestamp("creation4_1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getTimestamp("lastModi5_1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getString("name1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("parent9_1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getBoolean("publicated1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("contentT2_2_4_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("contentN1_4_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.next();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("id1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("id0_1_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("id4_2_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("id4_3_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("author8_1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("contentId1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getString("contentR3_1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getTimestamp("creation4_1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getTimestamp("lastModi5_1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getString("name1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("parent9_1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getBoolean("publicated1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("contentT2_2_4_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("contentN1_4_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.next();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("id1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("id0_1_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("id4_2_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("id4_3_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("author8_1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("contentId1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getString("contentR3_1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getTimestamp("creation4_1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getTimestamp("lastModi5_1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getString("name1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("parent9_1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getBoolean("publicated1_0_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("contentT2_2_4_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.getLong("contentN1_4_");
03-03 12:04:44 jdbc: 
/**/rs545.wasNull();
03-03 12:04:44 jdbc: 
/**/rs545.next();
03-03 12:04:44 jdbc: 
/**/rs545.close();
03-03 12:04:44 jdbc: 
/**/prep544.getMaxRows();
03-03 12:04:44 jdbc: 
/**/prep544.getQueryTimeout();
03-03 12:04:44 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 2
03-03 12:04:44 jdbc: RESULT_CLOSE 31
03-03 12:04:44 jdbc: 
/**/prep544.close();
03-03 12:04:44 jdbc: COMMAND_CLOSE 29
03-03 12:04:44 jdbc: 
/**/PreparedStatement prep545 = conn51.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 12:04:44 jdbc: SESSION_PREPARE_READ_PARAMS 32
03-03 12:04:44 jdbc: 
/**/prep545.setLong(1, 6L);
03-03 12:04:44 jdbc: 
/**/ResultSet rs546 = prep545.executeQuery();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 32
03-03 12:04:44 jdbc: RESULT_CLOSE 33
03-03 12:04:44 jdbc: 
/**/rs546.next();
03-03 12:04:44 jdbc: 
/**/rs546.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs546.wasNull();
03-03 12:04:44 jdbc: 
/**/rs546.getLong("contentN1_1_1_");
03-03 12:04:44 jdbc: 
/**/rs546.wasNull();
03-03 12:04:44 jdbc: 
/**/rs546.getLong("contentT2_1_");
03-03 12:04:44 jdbc: 
/**/rs546.wasNull();
03-03 12:04:44 jdbc: 
/**/rs546.next();
03-03 12:04:44 jdbc: 
/**/rs546.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs546.wasNull();
03-03 12:04:44 jdbc: 
/**/rs546.getLong("contentN1_1_1_");
03-03 12:04:44 jdbc: 
/**/rs546.wasNull();
03-03 12:04:44 jdbc: 
/**/rs546.getLong("contentT2_1_");
03-03 12:04:44 jdbc: 
/**/rs546.wasNull();
03-03 12:04:44 jdbc: 
/**/rs546.next();
03-03 12:04:44 jdbc: 
/**/rs546.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs546.wasNull();
03-03 12:04:44 jdbc: 
/**/rs546.getLong("contentN1_1_1_");
03-03 12:04:44 jdbc: 
/**/rs546.wasNull();
03-03 12:04:44 jdbc: 
/**/rs546.getLong("contentT2_1_");
03-03 12:04:44 jdbc: 
/**/rs546.wasNull();
03-03 12:04:44 jdbc: 
/**/rs546.next();
03-03 12:04:44 jdbc: 
/**/rs546.close();
03-03 12:04:44 jdbc: 
/**/prep545.getMaxRows();
03-03 12:04:44 jdbc: 
/**/prep545.getQueryTimeout();
03-03 12:04:44 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 2
03-03 12:04:44 jdbc: RESULT_CLOSE 34
03-03 12:04:44 jdbc: 
/**/prep545.close();
03-03 12:04:44 jdbc: COMMAND_CLOSE 32
03-03 12:04:44 jdbc: 
/**/PreparedStatement prep546 = conn51.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 12:04:44 jdbc: SESSION_PREPARE_READ_PARAMS 35
03-03 12:04:44 jdbc: 
/**/prep546.setLong(1, 7L);
03-03 12:04:44 jdbc: 
/**/ResultSet rs547 = prep546.executeQuery();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 35
03-03 12:04:44 jdbc: RESULT_CLOSE 36
03-03 12:04:44 jdbc: 
/**/rs547.next();
03-03 12:04:44 jdbc: 
/**/rs547.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs547.wasNull();
03-03 12:04:44 jdbc: 
/**/rs547.getLong("contentN1_1_1_");
03-03 12:04:44 jdbc: 
/**/rs547.wasNull();
03-03 12:04:44 jdbc: 
/**/rs547.getLong("contentT2_1_");
03-03 12:04:44 jdbc: 
/**/rs547.wasNull();
03-03 12:04:44 jdbc: 
/**/rs547.next();
03-03 12:04:44 jdbc: 
/**/rs547.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs547.wasNull();
03-03 12:04:44 jdbc: 
/**/rs547.getLong("contentN1_1_1_");
03-03 12:04:44 jdbc: 
/**/rs547.wasNull();
03-03 12:04:44 jdbc: 
/**/rs547.getLong("contentT2_1_");
03-03 12:04:44 jdbc: 
/**/rs547.wasNull();
03-03 12:04:44 jdbc: 
/**/rs547.next();
03-03 12:04:44 jdbc: 
/**/rs547.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs547.wasNull();
03-03 12:04:44 jdbc: 
/**/rs547.getLong("contentN1_1_1_");
03-03 12:04:44 jdbc: 
/**/rs547.wasNull();
03-03 12:04:44 jdbc: 
/**/rs547.getLong("contentT2_1_");
03-03 12:04:44 jdbc: 
/**/rs547.wasNull();
03-03 12:04:44 jdbc: 
/**/rs547.next();
03-03 12:04:44 jdbc: 
/**/rs547.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs547.wasNull();
03-03 12:04:44 jdbc: 
/**/rs547.getLong("contentN1_1_1_");
03-03 12:04:44 jdbc: 
/**/rs547.wasNull();
03-03 12:04:44 jdbc: 
/**/rs547.getLong("contentT2_1_");
03-03 12:04:44 jdbc: 
/**/rs547.wasNull();
03-03 12:04:44 jdbc: 
/**/rs547.next();
03-03 12:04:44 jdbc: 
/**/rs547.close();
03-03 12:04:44 jdbc: 
/**/prep546.getMaxRows();
03-03 12:04:44 jdbc: 
/**/prep546.getQueryTimeout();
03-03 12:04:44 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 2
03-03 12:04:44 jdbc: RESULT_CLOSE 37
03-03 12:04:44 jdbc: 
/**/prep546.close();
03-03 12:04:44 jdbc: COMMAND_CLOSE 35
03-03 12:04:44 jdbc: 
/**/PreparedStatement prep547 = conn51.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 12:04:44 jdbc: SESSION_PREPARE_READ_PARAMS 38
03-03 12:04:44 jdbc: 
/**/prep547.setLong(1, 11L);
03-03 12:04:44 jdbc: 
/**/ResultSet rs548 = prep547.executeQuery();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 38
03-03 12:04:44 jdbc: RESULT_CLOSE 39
03-03 12:04:44 jdbc: 
/**/rs548.next();
03-03 12:04:44 jdbc: 
/**/rs548.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs548.wasNull();
03-03 12:04:44 jdbc: 
/**/rs548.getLong("contentN1_1_1_");
03-03 12:04:44 jdbc: 
/**/rs548.wasNull();
03-03 12:04:44 jdbc: 
/**/rs548.getLong("contentT2_1_");
03-03 12:04:44 jdbc: 
/**/rs548.wasNull();
03-03 12:04:44 jdbc: 
/**/rs548.next();
03-03 12:04:44 jdbc: 
/**/rs548.close();
03-03 12:04:44 jdbc: 
/**/prep547.getMaxRows();
03-03 12:04:44 jdbc: 
/**/prep547.getQueryTimeout();
03-03 12:04:44 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 2
03-03 12:04:44 jdbc: RESULT_CLOSE 40
03-03 12:04:44 jdbc: 
/**/prep547.close();
03-03 12:04:44 jdbc: COMMAND_CLOSE 38
03-03 12:04:44 jdbc: 
/**/PreparedStatement prep548 = conn51.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 12:04:44 jdbc: SESSION_PREPARE_READ_PARAMS 41
03-03 12:04:44 jdbc: 
/**/prep548.setLong(1, 12L);
03-03 12:04:44 jdbc: 
/**/ResultSet rs549 = prep548.executeQuery();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 41
03-03 12:04:44 jdbc: RESULT_CLOSE 42
03-03 12:04:44 jdbc: 
/**/rs549.next();
03-03 12:04:44 jdbc: 
/**/rs549.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs549.wasNull();
03-03 12:04:44 jdbc: 
/**/rs549.getLong("contentN1_1_1_");
03-03 12:04:44 jdbc: 
/**/rs549.wasNull();
03-03 12:04:44 jdbc: 
/**/rs549.getLong("contentT2_1_");
03-03 12:04:44 jdbc: 
/**/rs549.wasNull();
03-03 12:04:44 jdbc: 
/**/rs549.next();
03-03 12:04:44 jdbc: 
/**/rs549.close();
03-03 12:04:44 jdbc: 
/**/prep548.getMaxRows();
03-03 12:04:44 jdbc: 
/**/prep548.getQueryTimeout();
03-03 12:04:44 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 2
03-03 12:04:44 jdbc: RESULT_CLOSE 43
03-03 12:04:44 jdbc: 
/**/prep548.close();
03-03 12:04:44 jdbc: COMMAND_CLOSE 41
03-03 12:04:44 jdbc: 
/**/PreparedStatement prep549 = conn51.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 12:04:44 jdbc: SESSION_PREPARE_READ_PARAMS 44
03-03 12:04:44 jdbc: 
/**/prep549.setLong(1, 13L);
03-03 12:04:44 jdbc: 
/**/ResultSet rs550 = prep549.executeQuery();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 44
03-03 12:04:44 jdbc: RESULT_CLOSE 45
03-03 12:04:44 jdbc: 
/**/rs550.next();
03-03 12:04:44 jdbc: 
/**/rs550.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs550.wasNull();
03-03 12:04:44 jdbc: 
/**/rs550.getLong("contentN1_1_1_");
03-03 12:04:44 jdbc: 
/**/rs550.wasNull();
03-03 12:04:44 jdbc: 
/**/rs550.getLong("contentT2_1_");
03-03 12:04:44 jdbc: 
/**/rs550.wasNull();
03-03 12:04:44 jdbc: 
/**/rs550.next();
03-03 12:04:44 jdbc: 
/**/rs550.close();
03-03 12:04:44 jdbc: 
/**/prep549.getMaxRows();
03-03 12:04:44 jdbc: 
/**/prep549.getQueryTimeout();
03-03 12:04:44 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 2
03-03 12:04:44 jdbc: RESULT_CLOSE 46
03-03 12:04:44 jdbc: 
/**/prep549.close();
03-03 12:04:44 jdbc: COMMAND_CLOSE 44
03-03 12:04:44 jdbc: 
/**/PreparedStatement prep550 = conn51.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 12:04:44 jdbc: SESSION_PREPARE_READ_PARAMS 47
03-03 12:04:44 jdbc: 
/**/prep550.setLong(1, 14L);
03-03 12:04:44 jdbc: 
/**/ResultSet rs551 = prep550.executeQuery();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 47
03-03 12:04:44 jdbc: RESULT_CLOSE 48
03-03 12:04:44 jdbc: 
/**/rs551.next();
03-03 12:04:44 jdbc: 
/**/rs551.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs551.wasNull();
03-03 12:04:44 jdbc: 
/**/rs551.getLong("contentN1_1_1_");
03-03 12:04:44 jdbc: 
/**/rs551.wasNull();
03-03 12:04:44 jdbc: 
/**/rs551.getLong("contentT2_1_");
03-03 12:04:44 jdbc: 
/**/rs551.wasNull();
03-03 12:04:44 jdbc: 
/**/rs551.next();
03-03 12:04:44 jdbc: 
/**/rs551.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs551.wasNull();
03-03 12:04:44 jdbc: 
/**/rs551.getLong("contentN1_1_1_");
03-03 12:04:44 jdbc: 
/**/rs551.wasNull();
03-03 12:04:44 jdbc: 
/**/rs551.getLong("contentT2_1_");
03-03 12:04:44 jdbc: 
/**/rs551.wasNull();
03-03 12:04:44 jdbc: 
/**/rs551.next();
03-03 12:04:44 jdbc: 
/**/rs551.close();
03-03 12:04:44 jdbc: 
/**/prep550.getMaxRows();
03-03 12:04:44 jdbc: 
/**/prep550.getQueryTimeout();
03-03 12:04:44 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 2
03-03 12:04:44 jdbc: RESULT_CLOSE 49
03-03 12:04:44 jdbc: 
/**/prep550.close();
03-03 12:04:44 jdbc: COMMAND_CLOSE 47
03-03 12:04:44 jdbc: 
/**/PreparedStatement prep551 = conn51.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 12:04:44 jdbc: SESSION_PREPARE_READ_PARAMS 50
03-03 12:04:44 jdbc: 
/**/prep551.setLong(1, 15L);
03-03 12:04:44 jdbc: 
/**/ResultSet rs552 = prep551.executeQuery();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 50
03-03 12:04:44 jdbc: RESULT_CLOSE 51
03-03 12:04:44 jdbc: 
/**/rs552.next();
03-03 12:04:44 jdbc: 
/**/rs552.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs552.wasNull();
03-03 12:04:44 jdbc: 
/**/rs552.getLong("contentN1_1_1_");
03-03 12:04:44 jdbc: 
/**/rs552.wasNull();
03-03 12:04:44 jdbc: 
/**/rs552.getLong("contentT2_1_");
03-03 12:04:44 jdbc: 
/**/rs552.wasNull();
03-03 12:04:44 jdbc: 
/**/rs552.next();
03-03 12:04:44 jdbc: 
/**/rs552.close();
03-03 12:04:44 jdbc: 
/**/prep551.getMaxRows();
03-03 12:04:44 jdbc: 
/**/prep551.getQueryTimeout();
03-03 12:04:44 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 2
03-03 12:04:44 jdbc: RESULT_CLOSE 52
03-03 12:04:44 jdbc: 
/**/prep551.close();
03-03 12:04:44 jdbc: COMMAND_CLOSE 50
03-03 12:04:44 jdbc: 
/**/PreparedStatement prep552 = conn51.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 12:04:44 jdbc: SESSION_PREPARE_READ_PARAMS 53
03-03 12:04:44 jdbc: 
/**/prep552.setLong(1, 17L);
03-03 12:04:44 jdbc: 
/**/ResultSet rs553 = prep552.executeQuery();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 53
03-03 12:04:44 jdbc: RESULT_CLOSE 54
03-03 12:04:44 jdbc: 
/**/rs553.next();
03-03 12:04:44 jdbc: 
/**/rs553.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs553.wasNull();
03-03 12:04:44 jdbc: 
/**/rs553.getLong("contentN1_1_1_");
03-03 12:04:44 jdbc: 
/**/rs553.wasNull();
03-03 12:04:44 jdbc: 
/**/rs553.getLong("contentT2_1_");
03-03 12:04:44 jdbc: 
/**/rs553.wasNull();
03-03 12:04:44 jdbc: 
/**/rs553.next();
03-03 12:04:44 jdbc: 
/**/rs553.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs553.wasNull();
03-03 12:04:44 jdbc: 
/**/rs553.getLong("contentN1_1_1_");
03-03 12:04:44 jdbc: 
/**/rs553.wasNull();
03-03 12:04:44 jdbc: 
/**/rs553.getLong("contentT2_1_");
03-03 12:04:44 jdbc: 
/**/rs553.wasNull();
03-03 12:04:44 jdbc: 
/**/rs553.next();
03-03 12:04:44 jdbc: 
/**/rs553.close();
03-03 12:04:44 jdbc: 
/**/prep552.getMaxRows();
03-03 12:04:44 jdbc: 
/**/prep552.getQueryTimeout();
03-03 12:04:44 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 2
03-03 12:04:44 jdbc: RESULT_CLOSE 55
03-03 12:04:44 jdbc: 
/**/prep552.close();
03-03 12:04:44 jdbc: COMMAND_CLOSE 53
03-03 12:04:44 jdbc: 
/**/PreparedStatement prep553 = conn51.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 12:04:44 jdbc: SESSION_PREPARE_READ_PARAMS 56
03-03 12:04:44 jdbc: 
/**/prep553.setLong(1, 16L);
03-03 12:04:44 jdbc: 
/**/ResultSet rs554 = prep553.executeQuery();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 56
03-03 12:04:44 jdbc: RESULT_CLOSE 57
03-03 12:04:44 jdbc: 
/**/rs554.next();
03-03 12:04:44 jdbc: 
/**/rs554.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs554.wasNull();
03-03 12:04:44 jdbc: 
/**/rs554.getLong("contentN1_1_1_");
03-03 12:04:44 jdbc: 
/**/rs554.wasNull();
03-03 12:04:44 jdbc: 
/**/rs554.getLong("contentT2_1_");
03-03 12:04:44 jdbc: 
/**/rs554.wasNull();
03-03 12:04:44 jdbc: 
/**/rs554.next();
03-03 12:04:44 jdbc: 
/**/rs554.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs554.wasNull();
03-03 12:04:44 jdbc: 
/**/rs554.getLong("contentN1_1_1_");
03-03 12:04:44 jdbc: 
/**/rs554.wasNull();
03-03 12:04:44 jdbc: 
/**/rs554.getLong("contentT2_1_");
03-03 12:04:44 jdbc: 
/**/rs554.wasNull();
03-03 12:04:44 jdbc: 
/**/rs554.next();
03-03 12:04:44 jdbc: 
/**/rs554.close();
03-03 12:04:44 jdbc: 
/**/prep553.getMaxRows();
03-03 12:04:44 jdbc: 
/**/prep553.getQueryTimeout();
03-03 12:04:44 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 2
03-03 12:04:44 jdbc: RESULT_CLOSE 58
03-03 12:04:44 jdbc: 
/**/prep553.close();
03-03 12:04:44 jdbc: COMMAND_CLOSE 56
03-03 12:04:44 jdbc: 
/**/PreparedStatement prep554 = conn51.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 12:04:44 jdbc: SESSION_PREPARE_READ_PARAMS 59
03-03 12:04:44 jdbc: 
/**/prep554.setLong(1, 19L);
03-03 12:04:44 jdbc: 
/**/ResultSet rs555 = prep554.executeQuery();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 59
03-03 12:04:44 jdbc: RESULT_CLOSE 60
03-03 12:04:44 jdbc: 
/**/rs555.next();
03-03 12:04:44 jdbc: 
/**/rs555.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs555.wasNull();
03-03 12:04:44 jdbc: 
/**/rs555.getLong("contentN1_1_1_");
03-03 12:04:44 jdbc: 
/**/rs555.wasNull();
03-03 12:04:44 jdbc: 
/**/rs555.getLong("contentT2_1_");
03-03 12:04:44 jdbc: 
/**/rs555.wasNull();
03-03 12:04:44 jdbc: 
/**/rs555.next();
03-03 12:04:44 jdbc: 
/**/rs555.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs555.wasNull();
03-03 12:04:44 jdbc: 
/**/rs555.getLong("contentN1_1_1_");
03-03 12:04:44 jdbc: 
/**/rs555.wasNull();
03-03 12:04:44 jdbc: 
/**/rs555.getLong("contentT2_1_");
03-03 12:04:44 jdbc: 
/**/rs555.wasNull();
03-03 12:04:44 jdbc: 
/**/rs555.next();
03-03 12:04:44 jdbc: 
/**/rs555.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs555.wasNull();
03-03 12:04:44 jdbc: 
/**/rs555.getLong("contentN1_1_1_");
03-03 12:04:44 jdbc: 
/**/rs555.wasNull();
03-03 12:04:44 jdbc: 
/**/rs555.getLong("contentT2_1_");
03-03 12:04:44 jdbc: 
/**/rs555.wasNull();
03-03 12:04:44 jdbc: 
/**/rs555.next();
03-03 12:04:44 jdbc: 
/**/rs555.close();
03-03 12:04:44 jdbc: 
/**/prep554.getMaxRows();
03-03 12:04:44 jdbc: 
/**/prep554.getQueryTimeout();
03-03 12:04:44 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 2
03-03 12:04:44 jdbc: RESULT_CLOSE 61
03-03 12:04:44 jdbc: 
/**/prep554.close();
03-03 12:04:44 jdbc: COMMAND_CLOSE 59
03-03 12:04:44 jdbc: 
/**/PreparedStatement prep555 = conn51.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 12:04:44 jdbc: SESSION_PREPARE_READ_PARAMS 62
03-03 12:04:44 jdbc: 
/**/prep555.setLong(1, 18L);
03-03 12:04:44 jdbc: 
/**/ResultSet rs556 = prep555.executeQuery();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 62
03-03 12:04:44 jdbc: RESULT_CLOSE 63
03-03 12:04:44 jdbc: 
/**/rs556.next();
03-03 12:04:44 jdbc: 
/**/rs556.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs556.wasNull();
03-03 12:04:44 jdbc: 
/**/rs556.getLong("contentN1_1_1_");
03-03 12:04:44 jdbc: 
/**/rs556.wasNull();
03-03 12:04:44 jdbc: 
/**/rs556.getLong("contentT2_1_");
03-03 12:04:44 jdbc: 
/**/rs556.wasNull();
03-03 12:04:44 jdbc: 
/**/rs556.next();
03-03 12:04:44 jdbc: 
/**/rs556.close();
03-03 12:04:44 jdbc: 
/**/prep555.getMaxRows();
03-03 12:04:44 jdbc: 
/**/prep555.getQueryTimeout();
03-03 12:04:44 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 2
03-03 12:04:44 jdbc: RESULT_CLOSE 64
03-03 12:04:44 jdbc: 
/**/prep555.close();
03-03 12:04:44 jdbc: COMMAND_CLOSE 62
03-03 12:04:44 jdbc: 
/**/PreparedStatement prep556 = conn51.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 12:04:44 jdbc: SESSION_PREPARE_READ_PARAMS 65
03-03 12:04:44 jdbc: 
/**/prep556.setLong(1, 21L);
03-03 12:04:44 jdbc: 
/**/ResultSet rs557 = prep556.executeQuery();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 65
03-03 12:04:44 jdbc: RESULT_CLOSE 66
03-03 12:04:44 jdbc: 
/**/rs557.next();
03-03 12:04:44 jdbc: 
/**/rs557.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs557.wasNull();
03-03 12:04:44 jdbc: 
/**/rs557.getLong("contentN1_1_1_");
03-03 12:04:44 jdbc: 
/**/rs557.wasNull();
03-03 12:04:44 jdbc: 
/**/rs557.getLong("contentT2_1_");
03-03 12:04:44 jdbc: 
/**/rs557.wasNull();
03-03 12:04:44 jdbc: 
/**/rs557.next();
03-03 12:04:44 jdbc: 
/**/rs557.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs557.wasNull();
03-03 12:04:44 jdbc: 
/**/rs557.getLong("contentN1_1_1_");
03-03 12:04:44 jdbc: 
/**/rs557.wasNull();
03-03 12:04:44 jdbc: 
/**/rs557.getLong("contentT2_1_");
03-03 12:04:44 jdbc: 
/**/rs557.wasNull();
03-03 12:04:44 jdbc: 
/**/rs557.next();
03-03 12:04:44 jdbc: 
/**/rs557.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs557.wasNull();
03-03 12:04:44 jdbc: 
/**/rs557.getLong("contentN1_1_1_");
03-03 12:04:44 jdbc: 
/**/rs557.wasNull();
03-03 12:04:44 jdbc: 
/**/rs557.getLong("contentT2_1_");
03-03 12:04:44 jdbc: 
/**/rs557.wasNull();
03-03 12:04:44 jdbc: 
/**/rs557.next();
03-03 12:04:44 jdbc: 
/**/rs557.close();
03-03 12:04:44 jdbc: 
/**/prep556.getMaxRows();
03-03 12:04:44 jdbc: 
/**/prep556.getQueryTimeout();
03-03 12:04:44 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:44 jdbc: SESSION_PREPARE 68
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 68
03-03 12:04:44 jdbc: RESULT_CLOSE 67
03-03 12:04:44 jdbc: 
/**/prep556.close();
03-03 12:04:44 jdbc: COMMAND_CLOSE 65
03-03 12:04:44 jdbc: 
/**/PreparedStatement prep557 = conn51.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 12:04:44 jdbc: SESSION_PREPARE_READ_PARAMS 69
03-03 12:04:44 jdbc: 
/**/prep557.setLong(1, 20L);
03-03 12:04:44 jdbc: 
/**/ResultSet rs558 = prep557.executeQuery();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 69
03-03 12:04:44 jdbc: RESULT_CLOSE 70
03-03 12:04:44 jdbc: 
/**/rs558.next();
03-03 12:04:44 jdbc: 
/**/rs558.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs558.wasNull();
03-03 12:04:44 jdbc: 
/**/rs558.getLong("contentN1_1_1_");
03-03 12:04:44 jdbc: 
/**/rs558.wasNull();
03-03 12:04:44 jdbc: 
/**/rs558.getLong("contentT2_1_");
03-03 12:04:44 jdbc: 
/**/rs558.wasNull();
03-03 12:04:44 jdbc: 
/**/rs558.next();
03-03 12:04:44 jdbc: 
/**/rs558.close();
03-03 12:04:44 jdbc: 
/**/prep557.getMaxRows();
03-03 12:04:44 jdbc: 
/**/prep557.getQueryTimeout();
03-03 12:04:44 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 68
03-03 12:04:44 jdbc: RESULT_CLOSE 71
03-03 12:04:44 jdbc: 
/**/prep557.close();
03-03 12:04:44 jdbc: COMMAND_CLOSE 69
03-03 12:04:44 jdbc: 
/**/PreparedStatement prep558 = conn51.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 12:04:44 jdbc: SESSION_PREPARE_READ_PARAMS 72
03-03 12:04:44 jdbc: 
/**/prep558.setLong(1, 23L);
03-03 12:04:44 jdbc: 
/**/ResultSet rs559 = prep558.executeQuery();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 72
03-03 12:04:44 jdbc: RESULT_CLOSE 73
03-03 12:04:44 jdbc: 
/**/rs559.next();
03-03 12:04:44 jdbc: 
/**/rs559.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs559.wasNull();
03-03 12:04:44 jdbc: 
/**/rs559.getLong("contentN1_1_1_");
03-03 12:04:44 jdbc: 
/**/rs559.wasNull();
03-03 12:04:44 jdbc: 
/**/rs559.getLong("contentT2_1_");
03-03 12:04:44 jdbc: 
/**/rs559.wasNull();
03-03 12:04:44 jdbc: 
/**/rs559.next();
03-03 12:04:44 jdbc: 
/**/rs559.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs559.wasNull();
03-03 12:04:44 jdbc: 
/**/rs559.getLong("contentN1_1_1_");
03-03 12:04:44 jdbc: 
/**/rs559.wasNull();
03-03 12:04:44 jdbc: 
/**/rs559.getLong("contentT2_1_");
03-03 12:04:44 jdbc: 
/**/rs559.wasNull();
03-03 12:04:44 jdbc: 
/**/rs559.next();
03-03 12:04:44 jdbc: 
/**/rs559.close();
03-03 12:04:44 jdbc: 
/**/prep558.getMaxRows();
03-03 12:04:44 jdbc: 
/**/prep558.getQueryTimeout();
03-03 12:04:44 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 68
03-03 12:04:44 jdbc: RESULT_CLOSE 74
03-03 12:04:44 jdbc: 
/**/prep558.close();
03-03 12:04:44 jdbc: COMMAND_CLOSE 72
03-03 12:04:44 jdbc: 
/**/PreparedStatement prep559 = conn51.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 12:04:44 jdbc: SESSION_PREPARE_READ_PARAMS 75
03-03 12:04:44 jdbc: 
/**/prep559.setLong(1, 22L);
03-03 12:04:44 jdbc: 
/**/ResultSet rs560 = prep559.executeQuery();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 75
03-03 12:04:44 jdbc: RESULT_CLOSE 76
03-03 12:04:44 jdbc: 
/**/rs560.next();
03-03 12:04:44 jdbc: 
/**/rs560.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs560.wasNull();
03-03 12:04:44 jdbc: 
/**/rs560.getLong("contentN1_1_1_");
03-03 12:04:44 jdbc: 
/**/rs560.wasNull();
03-03 12:04:44 jdbc: 
/**/rs560.getLong("contentT2_1_");
03-03 12:04:44 jdbc: 
/**/rs560.wasNull();
03-03 12:04:44 jdbc: 
/**/rs560.next();
03-03 12:04:44 jdbc: 
/**/rs560.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs560.wasNull();
03-03 12:04:44 jdbc: 
/**/rs560.getLong("contentN1_1_1_");
03-03 12:04:44 jdbc: 
/**/rs560.wasNull();
03-03 12:04:44 jdbc: 
/**/rs560.getLong("contentT2_1_");
03-03 12:04:44 jdbc: 
/**/rs560.wasNull();
03-03 12:04:44 jdbc: 
/**/rs560.next();
03-03 12:04:44 jdbc: 
/**/rs560.close();
03-03 12:04:44 jdbc: 
/**/prep559.getMaxRows();
03-03 12:04:44 jdbc: 
/**/prep559.getQueryTimeout();
03-03 12:04:44 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 68
03-03 12:04:44 jdbc: RESULT_CLOSE 77
03-03 12:04:44 jdbc: 
/**/prep559.close();
03-03 12:04:44 jdbc: COMMAND_CLOSE 75
03-03 12:04:44 jdbc: 
/**/PreparedStatement prep560 = conn51.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 12:04:44 jdbc: SESSION_PREPARE_READ_PARAMS 78
03-03 12:04:44 jdbc: 
/**/prep560.setLong(1, 24L);
03-03 12:04:44 jdbc: 
/**/ResultSet rs561 = prep560.executeQuery();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 78
03-03 12:04:44 jdbc: RESULT_CLOSE 79
03-03 12:04:44 jdbc: 
/**/rs561.next();
03-03 12:04:44 jdbc: 
/**/rs561.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs561.wasNull();
03-03 12:04:44 jdbc: 
/**/rs561.getLong("contentN1_1_1_");
03-03 12:04:44 jdbc: 
/**/rs561.wasNull();
03-03 12:04:44 jdbc: 
/**/rs561.getLong("contentT2_1_");
03-03 12:04:44 jdbc: 
/**/rs561.wasNull();
03-03 12:04:44 jdbc: 
/**/rs561.next();
03-03 12:04:44 jdbc: 
/**/rs561.close();
03-03 12:04:44 jdbc: 
/**/prep560.getMaxRows();
03-03 12:04:44 jdbc: 
/**/prep560.getQueryTimeout();
03-03 12:04:44 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 68
03-03 12:04:44 jdbc: RESULT_CLOSE 80
03-03 12:04:44 jdbc: 
/**/prep560.close();
03-03 12:04:44 jdbc: COMMAND_CLOSE 78
03-03 12:04:44 jdbc: 
/**/PreparedStatement prep561 = conn51.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 12:04:44 jdbc: SESSION_PREPARE_READ_PARAMS 81
03-03 12:04:44 jdbc: 
/**/prep561.setLong(1, 16L);
03-03 12:04:44 jdbc: 
/**/ResultSet rs562 = prep561.executeQuery();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 81
03-03 12:04:44 jdbc: RESULT_CLOSE 82
03-03 12:04:44 jdbc: 
/**/rs562.next();
03-03 12:04:44 jdbc: 
/**/rs562.getLong("id1_0_");
03-03 12:04:44 jdbc: 
/**/rs562.wasNull();
03-03 12:04:44 jdbc: 
/**/rs562.getLong("id0_1_");
03-03 12:04:44 jdbc: 
/**/rs562.wasNull();
03-03 12:04:44 jdbc: 
/**/rs562.getLong("id4_2_");
03-03 12:04:44 jdbc: 
/**/rs562.wasNull();
03-03 12:04:44 jdbc: 
/**/rs562.getLong("id4_3_");
03-03 12:04:44 jdbc: 
/**/rs562.wasNull();
03-03 12:04:44 jdbc: 
/**/rs562.getLong("contentT2_2_4_");
03-03 12:04:44 jdbc: 
/**/rs562.wasNull();
03-03 12:04:44 jdbc: 
/**/rs562.getLong("contentN1_4_");
03-03 12:04:44 jdbc: 
/**/rs562.wasNull();
03-03 12:04:44 jdbc: 
/**/rs562.next();
03-03 12:04:44 jdbc: 
/**/rs562.close();
03-03 12:04:44 jdbc: 
/**/prep561.getMaxRows();
03-03 12:04:44 jdbc: 
/**/prep561.getQueryTimeout();
03-03 12:04:44 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 68
03-03 12:04:44 jdbc: RESULT_CLOSE 83
03-03 12:04:44 jdbc: 
/**/prep561.close();
03-03 12:04:44 jdbc: COMMAND_CLOSE 81
03-03 12:04:44 jdbc: 
/**/PreparedStatement prep562 = conn51.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 12:04:44 jdbc: SESSION_PREPARE_READ_PARAMS 84
03-03 12:04:44 jdbc: 
/**/prep562.setLong(1, 17L);
03-03 12:04:44 jdbc: 
/**/ResultSet rs563 = prep562.executeQuery();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 84
03-03 12:04:44 jdbc: RESULT_CLOSE 85
03-03 12:04:44 jdbc: 
/**/rs563.next();
03-03 12:04:44 jdbc: 
/**/rs563.getLong("id1_0_");
03-03 12:04:44 jdbc: 
/**/rs563.wasNull();
03-03 12:04:44 jdbc: 
/**/rs563.getLong("id0_1_");
03-03 12:04:44 jdbc: 
/**/rs563.wasNull();
03-03 12:04:44 jdbc: 
/**/rs563.getLong("id4_2_");
03-03 12:04:44 jdbc: 
/**/rs563.wasNull();
03-03 12:04:44 jdbc: 
/**/rs563.getLong("id4_3_");
03-03 12:04:44 jdbc: 
/**/rs563.wasNull();
03-03 12:04:44 jdbc: 
/**/rs563.getLong("contentT2_2_4_");
03-03 12:04:44 jdbc: 
/**/rs563.wasNull();
03-03 12:04:44 jdbc: 
/**/rs563.getLong("contentN1_4_");
03-03 12:04:44 jdbc: 
/**/rs563.wasNull();
03-03 12:04:44 jdbc: 
/**/rs563.next();
03-03 12:04:44 jdbc: 
/**/rs563.close();
03-03 12:04:44 jdbc: 
/**/prep562.getMaxRows();
03-03 12:04:44 jdbc: 
/**/prep562.getQueryTimeout();
03-03 12:04:44 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 68
03-03 12:04:44 jdbc: RESULT_CLOSE 86
03-03 12:04:44 jdbc: 
/**/prep562.close();
03-03 12:04:44 jdbc: COMMAND_CLOSE 84
03-03 12:04:44 jdbc: 
/**/PreparedStatement prep563 = conn51.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 12:04:44 jdbc: SESSION_PREPARE_READ_PARAMS 87
03-03 12:04:44 jdbc: 
/**/prep563.setLong(1, 19L);
03-03 12:04:44 jdbc: 
/**/ResultSet rs564 = prep563.executeQuery();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 87
03-03 12:04:44 jdbc: RESULT_CLOSE 88
03-03 12:04:44 jdbc: 
/**/rs564.next();
03-03 12:04:44 jdbc: 
/**/rs564.getLong("id1_0_");
03-03 12:04:44 jdbc: 
/**/rs564.wasNull();
03-03 12:04:44 jdbc: 
/**/rs564.getLong("id0_1_");
03-03 12:04:44 jdbc: 
/**/rs564.wasNull();
03-03 12:04:44 jdbc: 
/**/rs564.getLong("id4_2_");
03-03 12:04:44 jdbc: 
/**/rs564.wasNull();
03-03 12:04:44 jdbc: 
/**/rs564.getLong("id4_3_");
03-03 12:04:44 jdbc: 
/**/rs564.wasNull();
03-03 12:04:44 jdbc: 
/**/rs564.getLong("contentT2_2_4_");
03-03 12:04:44 jdbc: 
/**/rs564.wasNull();
03-03 12:04:44 jdbc: 
/**/rs564.getLong("contentN1_4_");
03-03 12:04:44 jdbc: 
/**/rs564.wasNull();
03-03 12:04:44 jdbc: 
/**/rs564.next();
03-03 12:04:44 jdbc: 
/**/rs564.close();
03-03 12:04:44 jdbc: 
/**/prep563.getMaxRows();
03-03 12:04:44 jdbc: 
/**/prep563.getQueryTimeout();
03-03 12:04:44 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 68
03-03 12:04:44 jdbc: RESULT_CLOSE 89
03-03 12:04:44 jdbc: 
/**/prep563.close();
03-03 12:04:44 jdbc: COMMAND_CLOSE 87
03-03 12:04:44 jdbc: 
/**/PreparedStatement prep564 = conn51.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 12:04:44 jdbc: SESSION_PREPARE_READ_PARAMS 90
03-03 12:04:44 jdbc: 
/**/prep564.setLong(1, 20L);
03-03 12:04:44 jdbc: 
/**/ResultSet rs565 = prep564.executeQuery();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 90
03-03 12:04:44 jdbc: RESULT_CLOSE 91
03-03 12:04:44 jdbc: 
/**/rs565.next();
03-03 12:04:44 jdbc: 
/**/rs565.getLong("id1_0_");
03-03 12:04:44 jdbc: 
/**/rs565.wasNull();
03-03 12:04:44 jdbc: 
/**/rs565.getLong("id0_1_");
03-03 12:04:44 jdbc: 
/**/rs565.wasNull();
03-03 12:04:44 jdbc: 
/**/rs565.getLong("id4_2_");
03-03 12:04:44 jdbc: 
/**/rs565.wasNull();
03-03 12:04:44 jdbc: 
/**/rs565.getLong("id4_3_");
03-03 12:04:44 jdbc: 
/**/rs565.wasNull();
03-03 12:04:44 jdbc: 
/**/rs565.getLong("contentT2_2_4_");
03-03 12:04:44 jdbc: 
/**/rs565.wasNull();
03-03 12:04:44 jdbc: 
/**/rs565.getLong("contentN1_4_");
03-03 12:04:44 jdbc: 
/**/rs565.wasNull();
03-03 12:04:44 jdbc: 
/**/rs565.next();
03-03 12:04:44 jdbc: 
/**/rs565.close();
03-03 12:04:44 jdbc: 
/**/prep564.getMaxRows();
03-03 12:04:44 jdbc: 
/**/prep564.getQueryTimeout();
03-03 12:04:44 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 68
03-03 12:04:44 jdbc: RESULT_CLOSE 92
03-03 12:04:44 jdbc: 
/**/prep564.close();
03-03 12:04:44 jdbc: COMMAND_CLOSE 90
03-03 12:04:44 jdbc: 
/**/PreparedStatement prep565 = conn51.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 12:04:44 jdbc: SESSION_PREPARE_READ_PARAMS 93
03-03 12:04:44 jdbc: 
/**/prep565.setLong(1, 22L);
03-03 12:04:44 jdbc: 
/**/ResultSet rs566 = prep565.executeQuery();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 93
03-03 12:04:44 jdbc: RESULT_CLOSE 94
03-03 12:04:44 jdbc: 
/**/rs566.next();
03-03 12:04:44 jdbc: 
/**/rs566.getLong("id1_0_");
03-03 12:04:44 jdbc: 
/**/rs566.wasNull();
03-03 12:04:44 jdbc: 
/**/rs566.getLong("id0_1_");
03-03 12:04:44 jdbc: 
/**/rs566.wasNull();
03-03 12:04:44 jdbc: 
/**/rs566.getLong("id4_2_");
03-03 12:04:44 jdbc: 
/**/rs566.wasNull();
03-03 12:04:44 jdbc: 
/**/rs566.getLong("id4_3_");
03-03 12:04:44 jdbc: 
/**/rs566.wasNull();
03-03 12:04:44 jdbc: 
/**/rs566.getLong("contentT2_2_4_");
03-03 12:04:44 jdbc: 
/**/rs566.wasNull();
03-03 12:04:44 jdbc: 
/**/rs566.getLong("contentN1_4_");
03-03 12:04:44 jdbc: 
/**/rs566.wasNull();
03-03 12:04:44 jdbc: 
/**/rs566.next();
03-03 12:04:44 jdbc: 
/**/rs566.close();
03-03 12:04:44 jdbc: 
/**/prep565.getMaxRows();
03-03 12:04:44 jdbc: 
/**/prep565.getQueryTimeout();
03-03 12:04:44 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 68
03-03 12:04:44 jdbc: RESULT_CLOSE 95
03-03 12:04:44 jdbc: 
/**/prep565.close();
03-03 12:04:44 jdbc: COMMAND_CLOSE 93
03-03 12:04:44 jdbc: 
/**/PreparedStatement prep566 = conn51.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 12:04:44 jdbc: SESSION_PREPARE_READ_PARAMS 96
03-03 12:04:44 jdbc: 
/**/prep566.setLong(1, 24L);
03-03 12:04:44 jdbc: 
/**/ResultSet rs567 = prep566.executeQuery();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 96
03-03 12:04:44 jdbc: RESULT_CLOSE 97
03-03 12:04:44 jdbc: 
/**/rs567.next();
03-03 12:04:44 jdbc: 
/**/rs567.getLong("id1_0_");
03-03 12:04:44 jdbc: 
/**/rs567.wasNull();
03-03 12:04:44 jdbc: 
/**/rs567.getLong("id0_1_");
03-03 12:04:44 jdbc: 
/**/rs567.wasNull();
03-03 12:04:44 jdbc: 
/**/rs567.getLong("id4_2_");
03-03 12:04:44 jdbc: 
/**/rs567.wasNull();
03-03 12:04:44 jdbc: 
/**/rs567.getLong("id4_3_");
03-03 12:04:44 jdbc: 
/**/rs567.wasNull();
03-03 12:04:44 jdbc: 
/**/rs567.getLong("author8_1_0_");
03-03 12:04:44 jdbc: 
/**/rs567.wasNull();
03-03 12:04:44 jdbc: 
/**/rs567.getLong("contentId1_0_");
03-03 12:04:44 jdbc: 
/**/rs567.wasNull();
03-03 12:04:44 jdbc: 
/**/rs567.getString("contentR3_1_0_");
03-03 12:04:44 jdbc: 
/**/rs567.wasNull();
03-03 12:04:44 jdbc: 
/**/rs567.getTimestamp("creation4_1_0_");
03-03 12:04:44 jdbc: 
/**/rs567.wasNull();
03-03 12:04:44 jdbc: 
/**/rs567.getTimestamp("lastModi5_1_0_");
03-03 12:04:44 jdbc: 
/**/rs567.wasNull();
03-03 12:04:44 jdbc: 
/**/rs567.getString("name1_0_");
03-03 12:04:44 jdbc: 
/**/rs567.wasNull();
03-03 12:04:44 jdbc: 
/**/rs567.getLong("parent9_1_0_");
03-03 12:04:44 jdbc: 
/**/rs567.wasNull();
03-03 12:04:44 jdbc: 
/**/rs567.getBoolean("publicated1_0_");
03-03 12:04:44 jdbc: 
/**/rs567.wasNull();
03-03 12:04:44 jdbc: 
/**/rs567.getString("name4_2_");
03-03 12:04:44 jdbc: 
/**/rs567.wasNull();
03-03 12:04:44 jdbc: 
/**/rs567.getLong("parent3_4_2_");
03-03 12:04:44 jdbc: 
/**/rs567.wasNull();
03-03 12:04:44 jdbc: 
/**/rs567.getLong("contentT2_2_4_");
03-03 12:04:44 jdbc: 
/**/rs567.wasNull();
03-03 12:04:44 jdbc: 
/**/rs567.getLong("contentN1_4_");
03-03 12:04:44 jdbc: 
/**/rs567.wasNull();
03-03 12:04:44 jdbc: 
/**/rs567.next();
03-03 12:04:44 jdbc: 
/**/rs567.close();
03-03 12:04:44 jdbc: 
/**/prep566.getMaxRows();
03-03 12:04:44 jdbc: 
/**/prep566.getQueryTimeout();
03-03 12:04:44 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 68
03-03 12:04:44 jdbc: RESULT_CLOSE 98
03-03 12:04:44 jdbc: 
/**/prep566.close();
03-03 12:04:44 jdbc: COMMAND_CLOSE 96
03-03 12:04:44 jdbc: 
/**/PreparedStatement prep567 = conn51.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 12:04:44 jdbc: SESSION_PREPARE_READ_PARAMS 99
03-03 12:04:44 jdbc: 
/**/prep567.setLong(1, 9L);
03-03 12:04:44 jdbc: 
/**/ResultSet rs568 = prep567.executeQuery();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 99
03-03 12:04:44 jdbc: RESULT_CLOSE 100
03-03 12:04:44 jdbc: 
/**/rs568.next();
03-03 12:04:44 jdbc: 
/**/rs568.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs568.wasNull();
03-03 12:04:44 jdbc: 
/**/rs568.getLong("contentN1_1_1_");
03-03 12:04:44 jdbc: 
/**/rs568.wasNull();
03-03 12:04:44 jdbc: 
/**/rs568.getLong("contentT2_1_");
03-03 12:04:44 jdbc: 
/**/rs568.wasNull();
03-03 12:04:44 jdbc: 
/**/rs568.next();
03-03 12:04:44 jdbc: 
/**/rs568.close();
03-03 12:04:44 jdbc: 
/**/prep567.getMaxRows();
03-03 12:04:44 jdbc: 
/**/prep567.getQueryTimeout();
03-03 12:04:44 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 68
03-03 12:04:44 jdbc: RESULT_CLOSE 101
03-03 12:04:44 jdbc: 
/**/prep567.close();
03-03 12:04:44 jdbc: COMMAND_CLOSE 99
03-03 12:04:44 jdbc: 
/**/PreparedStatement prep568 = conn51.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 12:04:44 jdbc: SESSION_PREPARE_READ_PARAMS 102
03-03 12:04:44 jdbc: 
/**/prep568.setLong(1, 26L);
03-03 12:04:44 jdbc: 
/**/ResultSet rs569 = prep568.executeQuery();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 102
03-03 12:04:44 jdbc: RESULT_CLOSE 103
03-03 12:04:44 jdbc: 
/**/rs569.next();
03-03 12:04:44 jdbc: 
/**/rs569.getLong("id1_0_");
03-03 12:04:44 jdbc: 
/**/rs569.wasNull();
03-03 12:04:44 jdbc: 
/**/rs569.getLong("id0_1_");
03-03 12:04:44 jdbc: 
/**/rs569.wasNull();
03-03 12:04:44 jdbc: 
/**/rs569.getLong("id4_2_");
03-03 12:04:44 jdbc: 
/**/rs569.wasNull();
03-03 12:04:44 jdbc: 
/**/rs569.getLong("id4_3_");
03-03 12:04:44 jdbc: 
/**/rs569.wasNull();
03-03 12:04:44 jdbc: 
/**/rs569.getLong("contentT2_2_4_");
03-03 12:04:44 jdbc: 
/**/rs569.wasNull();
03-03 12:04:44 jdbc: 
/**/rs569.getLong("contentN1_4_");
03-03 12:04:44 jdbc: 
/**/rs569.wasNull();
03-03 12:04:44 jdbc: 
/**/rs569.next();
03-03 12:04:44 jdbc: 
/**/rs569.close();
03-03 12:04:44 jdbc: 
/**/prep568.getMaxRows();
03-03 12:04:44 jdbc: 
/**/prep568.getQueryTimeout();
03-03 12:04:44 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 68
03-03 12:04:44 jdbc: RESULT_CLOSE 104
03-03 12:04:44 jdbc: 
/**/prep568.close();
03-03 12:04:44 jdbc: COMMAND_CLOSE 102
03-03 12:04:44 jdbc: 
/**/PreparedStatement prep569 = conn51.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 12:04:44 jdbc: SESSION_PREPARE_READ_PARAMS 105
03-03 12:04:44 jdbc: 
/**/prep569.setLong(1, 34L);
03-03 12:04:44 jdbc: 
/**/ResultSet rs570 = prep569.executeQuery();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 105
03-03 12:04:44 jdbc: RESULT_CLOSE 106
03-03 12:04:44 jdbc: 
/**/rs570.next();
03-03 12:04:44 jdbc: 
/**/rs570.getLong("id1_0_");
03-03 12:04:44 jdbc: 
/**/rs570.wasNull();
03-03 12:04:44 jdbc: 
/**/rs570.getLong("id0_1_");
03-03 12:04:44 jdbc: 
/**/rs570.wasNull();
03-03 12:04:44 jdbc: 
/**/rs570.getLong("id4_2_");
03-03 12:04:44 jdbc: 
/**/rs570.wasNull();
03-03 12:04:44 jdbc: 
/**/rs570.getLong("id4_3_");
03-03 12:04:44 jdbc: 
/**/rs570.wasNull();
03-03 12:04:44 jdbc: 
/**/rs570.getLong("contentT2_2_4_");
03-03 12:04:44 jdbc: 
/**/rs570.wasNull();
03-03 12:04:44 jdbc: 
/**/rs570.getLong("contentN1_4_");
03-03 12:04:44 jdbc: 
/**/rs570.wasNull();
03-03 12:04:44 jdbc: 
/**/rs570.next();
03-03 12:04:44 jdbc: 
/**/rs570.close();
03-03 12:04:44 jdbc: 
/**/prep569.getMaxRows();
03-03 12:04:44 jdbc: 
/**/prep569.getQueryTimeout();
03-03 12:04:44 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 68
03-03 12:04:44 jdbc: RESULT_CLOSE 107
03-03 12:04:44 jdbc: 
/**/prep569.close();
03-03 12:04:44 jdbc: COMMAND_CLOSE 105
03-03 12:04:44 jdbc: 
/**/PreparedStatement prep570 = conn51.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 12:04:44 jdbc: SESSION_PREPARE_READ_PARAMS 108
03-03 12:04:44 jdbc: 
/**/prep570.setLong(1, 51L);
03-03 12:04:44 jdbc: 
/**/ResultSet rs571 = prep570.executeQuery();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 108
03-03 12:04:44 jdbc: RESULT_CLOSE 109
03-03 12:04:44 jdbc: 
/**/rs571.next();
03-03 12:04:44 jdbc: 
/**/rs571.getLong("id1_0_");
03-03 12:04:44 jdbc: 
/**/rs571.wasNull();
03-03 12:04:44 jdbc: 
/**/rs571.getLong("id0_1_");
03-03 12:04:44 jdbc: 
/**/rs571.wasNull();
03-03 12:04:44 jdbc: 
/**/rs571.getLong("id4_2_");
03-03 12:04:44 jdbc: 
/**/rs571.wasNull();
03-03 12:04:44 jdbc: 
/**/rs571.getLong("id4_3_");
03-03 12:04:44 jdbc: 
/**/rs571.wasNull();
03-03 12:04:44 jdbc: 
/**/rs571.getLong("contentT2_2_4_");
03-03 12:04:44 jdbc: 
/**/rs571.wasNull();
03-03 12:04:44 jdbc: 
/**/rs571.getLong("contentN1_4_");
03-03 12:04:44 jdbc: 
/**/rs571.wasNull();
03-03 12:04:44 jdbc: 
/**/rs571.next();
03-03 12:04:44 jdbc: 
/**/rs571.close();
03-03 12:04:44 jdbc: 
/**/prep570.getMaxRows();
03-03 12:04:44 jdbc: 
/**/prep570.getQueryTimeout();
03-03 12:04:44 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 68
03-03 12:04:44 jdbc: RESULT_CLOSE 110
03-03 12:04:44 jdbc: 
/**/prep570.close();
03-03 12:04:44 jdbc: COMMAND_CLOSE 108
03-03 12:04:44 jdbc: 
/**/PreparedStatement prep571 = conn51.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 12:04:44 jdbc: SESSION_PREPARE_READ_PARAMS 111
03-03 12:04:44 jdbc: 
/**/prep571.setLong(1, 58L);
03-03 12:04:44 jdbc: 
/**/ResultSet rs572 = prep571.executeQuery();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 111
03-03 12:04:44 jdbc: RESULT_CLOSE 112
03-03 12:04:44 jdbc: 
/**/rs572.next();
03-03 12:04:44 jdbc: 
/**/rs572.getLong("id1_0_");
03-03 12:04:44 jdbc: 
/**/rs572.wasNull();
03-03 12:04:44 jdbc: 
/**/rs572.getLong("id0_1_");
03-03 12:04:44 jdbc: 
/**/rs572.wasNull();
03-03 12:04:44 jdbc: 
/**/rs572.getLong("id4_2_");
03-03 12:04:44 jdbc: 
/**/rs572.wasNull();
03-03 12:04:44 jdbc: 
/**/rs572.getLong("id4_3_");
03-03 12:04:44 jdbc: 
/**/rs572.wasNull();
03-03 12:04:44 jdbc: 
/**/rs572.getLong("contentT2_2_4_");
03-03 12:04:44 jdbc: 
/**/rs572.wasNull();
03-03 12:04:44 jdbc: 
/**/rs572.getLong("contentN1_4_");
03-03 12:04:44 jdbc: 
/**/rs572.wasNull();
03-03 12:04:44 jdbc: 
/**/rs572.next();
03-03 12:04:44 jdbc: 
/**/rs572.close();
03-03 12:04:44 jdbc: 
/**/prep571.getMaxRows();
03-03 12:04:44 jdbc: 
/**/prep571.getQueryTimeout();
03-03 12:04:44 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 68
03-03 12:04:44 jdbc: RESULT_CLOSE 113
03-03 12:04:44 jdbc: 
/**/prep571.close();
03-03 12:04:44 jdbc: COMMAND_CLOSE 111
03-03 12:04:44 jdbc: 
/**/PreparedStatement prep572 = conn51.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 12:04:44 jdbc: SESSION_PREPARE_READ_PARAMS 114
03-03 12:04:44 jdbc: 
/**/prep572.setLong(1, 79L);
03-03 12:04:44 jdbc: 
/**/ResultSet rs573 = prep572.executeQuery();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 114
03-03 12:04:44 jdbc: RESULT_CLOSE 115
03-03 12:04:44 jdbc: 
/**/rs573.next();
03-03 12:04:44 jdbc: 
/**/rs573.getLong("id1_0_");
03-03 12:04:44 jdbc: 
/**/rs573.wasNull();
03-03 12:04:44 jdbc: 
/**/rs573.getLong("id0_1_");
03-03 12:04:44 jdbc: 
/**/rs573.wasNull();
03-03 12:04:44 jdbc: 
/**/rs573.getLong("id4_2_");
03-03 12:04:44 jdbc: 
/**/rs573.wasNull();
03-03 12:04:44 jdbc: 
/**/rs573.getLong("id4_3_");
03-03 12:04:44 jdbc: 
/**/rs573.wasNull();
03-03 12:04:44 jdbc: 
/**/rs573.getLong("contentT2_2_4_");
03-03 12:04:44 jdbc: 
/**/rs573.wasNull();
03-03 12:04:44 jdbc: 
/**/rs573.getLong("contentN1_4_");
03-03 12:04:44 jdbc: 
/**/rs573.wasNull();
03-03 12:04:44 jdbc: 
/**/rs573.next();
03-03 12:04:44 jdbc: 
/**/rs573.getLong("id1_0_");
03-03 12:04:44 jdbc: 
/**/rs573.wasNull();
03-03 12:04:44 jdbc: 
/**/rs573.getLong("id0_1_");
03-03 12:04:44 jdbc: 
/**/rs573.wasNull();
03-03 12:04:44 jdbc: 
/**/rs573.getLong("id4_2_");
03-03 12:04:44 jdbc: 
/**/rs573.wasNull();
03-03 12:04:44 jdbc: 
/**/rs573.getLong("id4_3_");
03-03 12:04:44 jdbc: 
/**/rs573.wasNull();
03-03 12:04:44 jdbc: 
/**/rs573.getLong("author8_1_0_");
03-03 12:04:44 jdbc: 
/**/rs573.wasNull();
03-03 12:04:44 jdbc: 
/**/rs573.getLong("contentId1_0_");
03-03 12:04:44 jdbc: 
/**/rs573.wasNull();
03-03 12:04:44 jdbc: 
/**/rs573.getString("contentR3_1_0_");
03-03 12:04:44 jdbc: 
/**/rs573.wasNull();
03-03 12:04:44 jdbc: 
/**/rs573.getTimestamp("creation4_1_0_");
03-03 12:04:44 jdbc: 
/**/rs573.wasNull();
03-03 12:04:44 jdbc: 
/**/rs573.getTimestamp("lastModi5_1_0_");
03-03 12:04:44 jdbc: 
/**/rs573.wasNull();
03-03 12:04:44 jdbc: 
/**/rs573.getString("name1_0_");
03-03 12:04:44 jdbc: 
/**/rs573.wasNull();
03-03 12:04:44 jdbc: 
/**/rs573.getLong("parent9_1_0_");
03-03 12:04:44 jdbc: 
/**/rs573.wasNull();
03-03 12:04:44 jdbc: 
/**/rs573.getBoolean("publicated1_0_");
03-03 12:04:44 jdbc: 
/**/rs573.wasNull();
03-03 12:04:44 jdbc: 
/**/rs573.getString("name4_2_");
03-03 12:04:44 jdbc: 
/**/rs573.wasNull();
03-03 12:04:44 jdbc: 
/**/rs573.getLong("parent3_4_2_");
03-03 12:04:44 jdbc: 
/**/rs573.wasNull();
03-03 12:04:44 jdbc: 
/**/rs573.getLong("contentT2_2_4_");
03-03 12:04:44 jdbc: 
/**/rs573.wasNull();
03-03 12:04:44 jdbc: 
/**/rs573.getLong("contentN1_4_");
03-03 12:04:44 jdbc: 
/**/rs573.wasNull();
03-03 12:04:44 jdbc: 
/**/rs573.next();
03-03 12:04:44 jdbc: 
/**/rs573.close();
03-03 12:04:44 jdbc: 
/**/prep572.getMaxRows();
03-03 12:04:44 jdbc: 
/**/prep572.getQueryTimeout();
03-03 12:04:44 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 68
03-03 12:04:44 jdbc: RESULT_CLOSE 116
03-03 12:04:44 jdbc: 
/**/prep572.close();
03-03 12:04:44 jdbc: COMMAND_CLOSE 114
03-03 12:04:44 jdbc: 
/**/PreparedStatement prep573 = conn51.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 12:04:44 jdbc: SESSION_PREPARE_READ_PARAMS 117
03-03 12:04:44 jdbc: 
/**/prep573.setLong(1, 50L);
03-03 12:04:44 jdbc: 
/**/ResultSet rs574 = prep573.executeQuery();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 117
03-03 12:04:44 jdbc: RESULT_CLOSE 118
03-03 12:04:44 jdbc: 
/**/rs574.next();
03-03 12:04:44 jdbc: 
/**/rs574.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs574.wasNull();
03-03 12:04:44 jdbc: 
/**/rs574.getLong("contentN1_1_1_");
03-03 12:04:44 jdbc: 
/**/rs574.wasNull();
03-03 12:04:44 jdbc: 
/**/rs574.getLong("contentT2_1_");
03-03 12:04:44 jdbc: 
/**/rs574.wasNull();
03-03 12:04:44 jdbc: 
/**/rs574.next();
03-03 12:04:44 jdbc: 
/**/rs574.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs574.wasNull();
03-03 12:04:44 jdbc: 
/**/rs574.getLong("contentN1_1_1_");
03-03 12:04:44 jdbc: 
/**/rs574.wasNull();
03-03 12:04:44 jdbc: 
/**/rs574.getLong("contentT2_1_");
03-03 12:04:44 jdbc: 
/**/rs574.wasNull();
03-03 12:04:44 jdbc: 
/**/rs574.next();
03-03 12:04:44 jdbc: 
/**/rs574.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs574.wasNull();
03-03 12:04:44 jdbc: 
/**/rs574.getLong("contentN1_1_1_");
03-03 12:04:44 jdbc: 
/**/rs574.wasNull();
03-03 12:04:44 jdbc: 
/**/rs574.getLong("contentT2_1_");
03-03 12:04:44 jdbc: 
/**/rs574.wasNull();
03-03 12:04:44 jdbc: 
/**/rs574.next();
03-03 12:04:44 jdbc: 
/**/rs574.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs574.wasNull();
03-03 12:04:44 jdbc: 
/**/rs574.getLong("contentN1_1_1_");
03-03 12:04:44 jdbc: 
/**/rs574.wasNull();
03-03 12:04:44 jdbc: 
/**/rs574.getLong("contentT2_1_");
03-03 12:04:44 jdbc: 
/**/rs574.wasNull();
03-03 12:04:44 jdbc: 
/**/rs574.next();
03-03 12:04:44 jdbc: 
/**/rs574.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs574.wasNull();
03-03 12:04:44 jdbc: 
/**/rs574.getLong("contentN1_1_1_");
03-03 12:04:44 jdbc: 
/**/rs574.wasNull();
03-03 12:04:44 jdbc: 
/**/rs574.getLong("contentT2_1_");
03-03 12:04:44 jdbc: 
/**/rs574.wasNull();
03-03 12:04:44 jdbc: 
/**/rs574.next();
03-03 12:04:44 jdbc: 
/**/rs574.close();
03-03 12:04:44 jdbc: 
/**/prep573.getMaxRows();
03-03 12:04:44 jdbc: 
/**/prep573.getQueryTimeout();
03-03 12:04:44 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 68
03-03 12:04:44 jdbc: RESULT_CLOSE 119
03-03 12:04:44 jdbc: 
/**/prep573.close();
03-03 12:04:44 jdbc: COMMAND_CLOSE 117
03-03 12:04:44 jdbc: 
/**/PreparedStatement prep574 = conn51.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 12:04:44 jdbc: SESSION_PREPARE_READ_PARAMS 120
03-03 12:04:44 jdbc: 
/**/prep574.setLong(1, 108L);
03-03 12:04:44 jdbc: 
/**/ResultSet rs575 = prep574.executeQuery();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 120
03-03 12:04:44 jdbc: RESULT_CLOSE 121
03-03 12:04:44 jdbc: 
/**/rs575.next();
03-03 12:04:44 jdbc: 
/**/rs575.getLong("id1_0_");
03-03 12:04:44 jdbc: 
/**/rs575.wasNull();
03-03 12:04:44 jdbc: 
/**/rs575.getLong("id0_1_");
03-03 12:04:44 jdbc: 
/**/rs575.wasNull();
03-03 12:04:44 jdbc: 
/**/rs575.getLong("id4_2_");
03-03 12:04:44 jdbc: 
/**/rs575.wasNull();
03-03 12:04:44 jdbc: 
/**/rs575.getLong("id4_3_");
03-03 12:04:44 jdbc: 
/**/rs575.wasNull();
03-03 12:04:44 jdbc: 
/**/rs575.getLong("contentT2_2_4_");
03-03 12:04:44 jdbc: 
/**/rs575.wasNull();
03-03 12:04:44 jdbc: 
/**/rs575.getLong("contentN1_4_");
03-03 12:04:44 jdbc: 
/**/rs575.wasNull();
03-03 12:04:44 jdbc: 
/**/rs575.next();
03-03 12:04:44 jdbc: 
/**/rs575.close();
03-03 12:04:44 jdbc: 
/**/prep574.getMaxRows();
03-03 12:04:44 jdbc: 
/**/prep574.getQueryTimeout();
03-03 12:04:44 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 68
03-03 12:04:44 jdbc: RESULT_CLOSE 122
03-03 12:04:44 jdbc: 
/**/prep574.close();
03-03 12:04:44 jdbc: COMMAND_CLOSE 120
03-03 12:04:44 jdbc: 
/**/PreparedStatement prep575 = conn51.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 12:04:44 jdbc: SESSION_PREPARE_READ_PARAMS 123
03-03 12:04:44 jdbc: 
/**/prep575.setLong(1, 112L);
03-03 12:04:44 jdbc: 
/**/ResultSet rs576 = prep575.executeQuery();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 123
03-03 12:04:44 jdbc: RESULT_CLOSE 124
03-03 12:04:44 jdbc: 
/**/rs576.next();
03-03 12:04:44 jdbc: 
/**/rs576.getLong("id1_0_");
03-03 12:04:44 jdbc: 
/**/rs576.wasNull();
03-03 12:04:44 jdbc: 
/**/rs576.getLong("id0_1_");
03-03 12:04:44 jdbc: 
/**/rs576.wasNull();
03-03 12:04:44 jdbc: 
/**/rs576.getLong("id4_2_");
03-03 12:04:44 jdbc: 
/**/rs576.wasNull();
03-03 12:04:44 jdbc: 
/**/rs576.getLong("id4_3_");
03-03 12:04:44 jdbc: 
/**/rs576.wasNull();
03-03 12:04:44 jdbc: 
/**/rs576.getLong("contentT2_2_4_");
03-03 12:04:44 jdbc: 
/**/rs576.wasNull();
03-03 12:04:44 jdbc: 
/**/rs576.getLong("contentN1_4_");
03-03 12:04:44 jdbc: 
/**/rs576.wasNull();
03-03 12:04:44 jdbc: 
/**/rs576.next();
03-03 12:04:44 jdbc: 
/**/rs576.getLong("id1_0_");
03-03 12:04:44 jdbc: 
/**/rs576.wasNull();
03-03 12:04:44 jdbc: 
/**/rs576.getLong("id0_1_");
03-03 12:04:44 jdbc: 
/**/rs576.wasNull();
03-03 12:04:44 jdbc: 
/**/rs576.getLong("id4_2_");
03-03 12:04:44 jdbc: 
/**/rs576.wasNull();
03-03 12:04:44 jdbc: 
/**/rs576.getLong("id4_3_");
03-03 12:04:44 jdbc: 
/**/rs576.wasNull();
03-03 12:04:44 jdbc: 
/**/rs576.getLong("contentT2_2_4_");
03-03 12:04:44 jdbc: 
/**/rs576.wasNull();
03-03 12:04:44 jdbc: 
/**/rs576.getLong("contentN1_4_");
03-03 12:04:44 jdbc: 
/**/rs576.wasNull();
03-03 12:04:44 jdbc: 
/**/rs576.next();
03-03 12:04:44 jdbc: 
/**/rs576.close();
03-03 12:04:44 jdbc: 
/**/prep575.getMaxRows();
03-03 12:04:44 jdbc: 
/**/prep575.getQueryTimeout();
03-03 12:04:44 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 68
03-03 12:04:44 jdbc: RESULT_CLOSE 125
03-03 12:04:44 jdbc: 
/**/prep575.close();
03-03 12:04:44 jdbc: COMMAND_CLOSE 123
03-03 12:04:44 jdbc: 
/**/PreparedStatement prep576 = conn51.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 12:04:44 jdbc: SESSION_PREPARE_READ_PARAMS 126
03-03 12:04:44 jdbc: 
/**/prep576.setLong(1, 122L);
03-03 12:04:44 jdbc: 
/**/ResultSet rs577 = prep576.executeQuery();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 126
03-03 12:04:44 jdbc: RESULT_CLOSE 127
03-03 12:04:44 jdbc: 
/**/rs577.next();
03-03 12:04:44 jdbc: 
/**/rs577.getLong("id1_0_");
03-03 12:04:44 jdbc: 
/**/rs577.wasNull();
03-03 12:04:44 jdbc: 
/**/rs577.getLong("id0_1_");
03-03 12:04:44 jdbc: 
/**/rs577.wasNull();
03-03 12:04:44 jdbc: 
/**/rs577.getLong("id4_2_");
03-03 12:04:44 jdbc: 
/**/rs577.wasNull();
03-03 12:04:44 jdbc: 
/**/rs577.getLong("id4_3_");
03-03 12:04:44 jdbc: 
/**/rs577.wasNull();
03-03 12:04:44 jdbc: 
/**/rs577.getLong("author8_1_0_");
03-03 12:04:44 jdbc: 
/**/rs577.wasNull();
03-03 12:04:44 jdbc: 
/**/rs577.getLong("contentId1_0_");
03-03 12:04:44 jdbc: 
/**/rs577.wasNull();
03-03 12:04:44 jdbc: 
/**/rs577.getString("contentR3_1_0_");
03-03 12:04:44 jdbc: 
/**/rs577.wasNull();
03-03 12:04:44 jdbc: 
/**/rs577.getTimestamp("creation4_1_0_");
03-03 12:04:44 jdbc: 
/**/rs577.wasNull();
03-03 12:04:44 jdbc: 
/**/rs577.getTimestamp("lastModi5_1_0_");
03-03 12:04:44 jdbc: 
/**/rs577.wasNull();
03-03 12:04:44 jdbc: 
/**/rs577.getString("name1_0_");
03-03 12:04:44 jdbc: 
/**/rs577.wasNull();
03-03 12:04:44 jdbc: 
/**/rs577.getLong("parent9_1_0_");
03-03 12:04:44 jdbc: 
/**/rs577.wasNull();
03-03 12:04:44 jdbc: 
/**/rs577.getBoolean("publicated1_0_");
03-03 12:04:44 jdbc: 
/**/rs577.wasNull();
03-03 12:04:44 jdbc: 
/**/rs577.getString("name4_2_");
03-03 12:04:44 jdbc: 
/**/rs577.wasNull();
03-03 12:04:44 jdbc: 
/**/rs577.getLong("parent3_4_2_");
03-03 12:04:44 jdbc: 
/**/rs577.wasNull();
03-03 12:04:44 jdbc: 
/**/rs577.getLong("contentT2_2_4_");
03-03 12:04:44 jdbc: 
/**/rs577.wasNull();
03-03 12:04:44 jdbc: 
/**/rs577.getLong("contentN1_4_");
03-03 12:04:44 jdbc: 
/**/rs577.wasNull();
03-03 12:04:44 jdbc: 
/**/rs577.next();
03-03 12:04:44 jdbc: 
/**/rs577.close();
03-03 12:04:44 jdbc: 
/**/prep576.getMaxRows();
03-03 12:04:44 jdbc: 
/**/prep576.getQueryTimeout();
03-03 12:04:44 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 68
03-03 12:04:44 jdbc: RESULT_CLOSE 128
03-03 12:04:44 jdbc: 
/**/prep576.close();
03-03 12:04:44 jdbc: COMMAND_CLOSE 126
03-03 12:04:44 jdbc: 
/**/PreparedStatement prep577 = conn51.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 12:04:44 jdbc: SESSION_PREPARE_READ_PARAMS 129
03-03 12:04:44 jdbc: 
/**/prep577.setLong(1, 25L);
03-03 12:04:44 jdbc: 
/**/ResultSet rs578 = prep577.executeQuery();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 129
03-03 12:04:44 jdbc: RESULT_CLOSE 130
03-03 12:04:44 jdbc: 
/**/rs578.next();
03-03 12:04:44 jdbc: 
/**/rs578.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs578.wasNull();
03-03 12:04:44 jdbc: 
/**/rs578.getLong("contentN1_1_1_");
03-03 12:04:44 jdbc: 
/**/rs578.wasNull();
03-03 12:04:44 jdbc: 
/**/rs578.getLong("contentT2_1_");
03-03 12:04:44 jdbc: 
/**/rs578.wasNull();
03-03 12:04:44 jdbc: 
/**/rs578.next();
03-03 12:04:44 jdbc: 
/**/rs578.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs578.wasNull();
03-03 12:04:44 jdbc: 
/**/rs578.getLong("contentN1_1_1_");
03-03 12:04:44 jdbc: 
/**/rs578.wasNull();
03-03 12:04:44 jdbc: 
/**/rs578.getLong("contentT2_1_");
03-03 12:04:44 jdbc: 
/**/rs578.wasNull();
03-03 12:04:44 jdbc: 
/**/rs578.next();
03-03 12:04:44 jdbc: 
/**/rs578.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs578.wasNull();
03-03 12:04:44 jdbc: 
/**/rs578.getLong("contentN1_1_1_");
03-03 12:04:44 jdbc: 
/**/rs578.wasNull();
03-03 12:04:44 jdbc: 
/**/rs578.getLong("contentT2_1_");
03-03 12:04:44 jdbc: 
/**/rs578.wasNull();
03-03 12:04:44 jdbc: 
/**/rs578.next();
03-03 12:04:44 jdbc: 
/**/rs578.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs578.wasNull();
03-03 12:04:44 jdbc: 
/**/rs578.getLong("contentN1_1_1_");
03-03 12:04:44 jdbc: 
/**/rs578.wasNull();
03-03 12:04:44 jdbc: 
/**/rs578.getLong("contentT2_1_");
03-03 12:04:44 jdbc: 
/**/rs578.wasNull();
03-03 12:04:44 jdbc: 
/**/rs578.next();
03-03 12:04:44 jdbc: 
/**/rs578.close();
03-03 12:04:44 jdbc: 
/**/prep577.getMaxRows();
03-03 12:04:44 jdbc: 
/**/prep577.getQueryTimeout();
03-03 12:04:44 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:44 jdbc: SESSION_PREPARE 132
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 132
03-03 12:04:44 jdbc: RESULT_CLOSE 131
03-03 12:04:44 jdbc: 
/**/prep577.close();
03-03 12:04:44 jdbc: COMMAND_CLOSE 129
03-03 12:04:44 jdbc: 
/**/PreparedStatement prep578 = conn51.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 12:04:44 jdbc: SESSION_PREPARE_READ_PARAMS 133
03-03 12:04:44 jdbc: 
/**/prep578.setLong(1, 123L);
03-03 12:04:44 jdbc: 
/**/ResultSet rs579 = prep578.executeQuery();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 133
03-03 12:04:44 jdbc: RESULT_CLOSE 134
03-03 12:04:44 jdbc: 
/**/rs579.next();
03-03 12:04:44 jdbc: 
/**/rs579.getLong("id1_0_");
03-03 12:04:44 jdbc: 
/**/rs579.wasNull();
03-03 12:04:44 jdbc: 
/**/rs579.getLong("id0_1_");
03-03 12:04:44 jdbc: 
/**/rs579.wasNull();
03-03 12:04:44 jdbc: 
/**/rs579.getLong("id4_2_");
03-03 12:04:44 jdbc: 
/**/rs579.wasNull();
03-03 12:04:44 jdbc: 
/**/rs579.getLong("id4_3_");
03-03 12:04:44 jdbc: 
/**/rs579.wasNull();
03-03 12:04:44 jdbc: 
/**/rs579.getLong("contentT2_2_4_");
03-03 12:04:44 jdbc: 
/**/rs579.wasNull();
03-03 12:04:44 jdbc: 
/**/rs579.getLong("contentN1_4_");
03-03 12:04:44 jdbc: 
/**/rs579.wasNull();
03-03 12:04:44 jdbc: 
/**/rs579.next();
03-03 12:04:44 jdbc: 
/**/rs579.close();
03-03 12:04:44 jdbc: 
/**/prep578.getMaxRows();
03-03 12:04:44 jdbc: 
/**/prep578.getQueryTimeout();
03-03 12:04:44 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 132
03-03 12:04:44 jdbc: RESULT_CLOSE 135
03-03 12:04:44 jdbc: 
/**/prep578.close();
03-03 12:04:44 jdbc: COMMAND_CLOSE 133
03-03 12:04:44 jdbc: 
/**/PreparedStatement prep579 = conn51.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 12:04:44 jdbc: SESSION_PREPARE_READ_PARAMS 136
03-03 12:04:44 jdbc: 
/**/prep579.setLong(1, 125L);
03-03 12:04:44 jdbc: 
/**/ResultSet rs580 = prep579.executeQuery();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 136
03-03 12:04:44 jdbc: RESULT_CLOSE 137
03-03 12:04:44 jdbc: 
/**/rs580.next();
03-03 12:04:44 jdbc: 
/**/rs580.getLong("id1_0_");
03-03 12:04:44 jdbc: 
/**/rs580.wasNull();
03-03 12:04:44 jdbc: 
/**/rs580.getLong("id0_1_");
03-03 12:04:44 jdbc: 
/**/rs580.wasNull();
03-03 12:04:44 jdbc: 
/**/rs580.getLong("id4_2_");
03-03 12:04:44 jdbc: 
/**/rs580.wasNull();
03-03 12:04:44 jdbc: 
/**/rs580.getLong("id4_3_");
03-03 12:04:44 jdbc: 
/**/rs580.wasNull();
03-03 12:04:44 jdbc: 
/**/rs580.getLong("contentT2_2_4_");
03-03 12:04:44 jdbc: 
/**/rs580.wasNull();
03-03 12:04:44 jdbc: 
/**/rs580.getLong("contentN1_4_");
03-03 12:04:44 jdbc: 
/**/rs580.wasNull();
03-03 12:04:44 jdbc: 
/**/rs580.next();
03-03 12:04:44 jdbc: 
/**/rs580.close();
03-03 12:04:44 jdbc: 
/**/prep579.getMaxRows();
03-03 12:04:44 jdbc: 
/**/prep579.getQueryTimeout();
03-03 12:04:44 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 132
03-03 12:04:44 jdbc: RESULT_CLOSE 138
03-03 12:04:44 jdbc: 
/**/prep579.close();
03-03 12:04:44 jdbc: COMMAND_CLOSE 136
03-03 12:04:44 jdbc: 
/**/PreparedStatement prep580 = conn51.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 12:04:44 jdbc: SESSION_PREPARE_READ_PARAMS 139
03-03 12:04:44 jdbc: 
/**/prep580.setLong(1, 126L);
03-03 12:04:44 jdbc: 
/**/ResultSet rs581 = prep580.executeQuery();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 139
03-03 12:04:44 jdbc: RESULT_CLOSE 140
03-03 12:04:44 jdbc: 
/**/rs581.next();
03-03 12:04:44 jdbc: 
/**/rs581.getLong("id1_0_");
03-03 12:04:44 jdbc: 
/**/rs581.wasNull();
03-03 12:04:44 jdbc: 
/**/rs581.getLong("id0_1_");
03-03 12:04:44 jdbc: 
/**/rs581.wasNull();
03-03 12:04:44 jdbc: 
/**/rs581.getLong("id4_2_");
03-03 12:04:44 jdbc: 
/**/rs581.wasNull();
03-03 12:04:44 jdbc: 
/**/rs581.getLong("id4_3_");
03-03 12:04:44 jdbc: 
/**/rs581.wasNull();
03-03 12:04:44 jdbc: 
/**/rs581.getLong("author8_1_0_");
03-03 12:04:44 jdbc: 
/**/rs581.wasNull();
03-03 12:04:44 jdbc: 
/**/rs581.getLong("contentId1_0_");
03-03 12:04:44 jdbc: 
/**/rs581.wasNull();
03-03 12:04:44 jdbc: 
/**/rs581.getString("contentR3_1_0_");
03-03 12:04:44 jdbc: 
/**/rs581.wasNull();
03-03 12:04:44 jdbc: 
/**/rs581.getTimestamp("creation4_1_0_");
03-03 12:04:44 jdbc: 
/**/rs581.wasNull();
03-03 12:04:44 jdbc: 
/**/rs581.getTimestamp("lastModi5_1_0_");
03-03 12:04:44 jdbc: 
/**/rs581.wasNull();
03-03 12:04:44 jdbc: 
/**/rs581.getString("name1_0_");
03-03 12:04:44 jdbc: 
/**/rs581.wasNull();
03-03 12:04:44 jdbc: 
/**/rs581.getLong("parent9_1_0_");
03-03 12:04:44 jdbc: 
/**/rs581.wasNull();
03-03 12:04:44 jdbc: 
/**/rs581.getBoolean("publicated1_0_");
03-03 12:04:44 jdbc: 
/**/rs581.wasNull();
03-03 12:04:44 jdbc: 
/**/rs581.getLong("contentT2_2_4_");
03-03 12:04:44 jdbc: 
/**/rs581.wasNull();
03-03 12:04:44 jdbc: 
/**/rs581.getLong("contentN1_4_");
03-03 12:04:44 jdbc: 
/**/rs581.wasNull();
03-03 12:04:44 jdbc: 
/**/rs581.next();
03-03 12:04:44 jdbc: 
/**/rs581.close();
03-03 12:04:44 jdbc: 
/**/prep580.getMaxRows();
03-03 12:04:44 jdbc: 
/**/prep580.getQueryTimeout();
03-03 12:04:44 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 132
03-03 12:04:44 jdbc: RESULT_CLOSE 141
03-03 12:04:44 jdbc: 
/**/prep580.close();
03-03 12:04:44 jdbc: COMMAND_CLOSE 139
03-03 12:04:44 jdbc: 
/**/PreparedStatement prep581 = conn51.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 12:04:44 jdbc: SESSION_PREPARE_READ_PARAMS 142
03-03 12:04:44 jdbc: 
/**/prep581.setLong(1, 26L);
03-03 12:04:44 jdbc: 
/**/ResultSet rs582 = prep581.executeQuery();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 142
03-03 12:04:44 jdbc: RESULT_CLOSE 143
03-03 12:04:44 jdbc: 
/**/rs582.next();
03-03 12:04:44 jdbc: 
/**/rs582.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs582.wasNull();
03-03 12:04:44 jdbc: 
/**/rs582.getLong("contentN1_1_1_");
03-03 12:04:44 jdbc: 
/**/rs582.wasNull();
03-03 12:04:44 jdbc: 
/**/rs582.getLong("contentT2_1_");
03-03 12:04:44 jdbc: 
/**/rs582.wasNull();
03-03 12:04:44 jdbc: 
/**/rs582.next();
03-03 12:04:44 jdbc: 
/**/rs582.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs582.wasNull();
03-03 12:04:44 jdbc: 
/**/rs582.getLong("contentN1_1_1_");
03-03 12:04:44 jdbc: 
/**/rs582.wasNull();
03-03 12:04:44 jdbc: 
/**/rs582.getLong("contentT2_1_");
03-03 12:04:44 jdbc: 
/**/rs582.wasNull();
03-03 12:04:44 jdbc: 
/**/rs582.next();
03-03 12:04:44 jdbc: 
/**/rs582.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs582.wasNull();
03-03 12:04:44 jdbc: 
/**/rs582.getLong("contentN1_1_1_");
03-03 12:04:44 jdbc: 
/**/rs582.wasNull();
03-03 12:04:44 jdbc: 
/**/rs582.getLong("contentT2_1_");
03-03 12:04:44 jdbc: 
/**/rs582.wasNull();
03-03 12:04:44 jdbc: 
/**/rs582.next();
03-03 12:04:44 jdbc: 
/**/rs582.close();
03-03 12:04:44 jdbc: 
/**/prep581.getMaxRows();
03-03 12:04:44 jdbc: 
/**/prep581.getQueryTimeout();
03-03 12:04:44 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 132
03-03 12:04:44 jdbc: RESULT_CLOSE 144
03-03 12:04:44 jdbc: 
/**/prep581.close();
03-03 12:04:44 jdbc: COMMAND_CLOSE 142
03-03 12:04:44 jdbc: 
/**/PreparedStatement prep582 = conn51.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 12:04:44 jdbc: SESSION_PREPARE_READ_PARAMS 145
03-03 12:04:44 jdbc: 
/**/prep582.setLong(1, 128L);
03-03 12:04:44 jdbc: 
/**/ResultSet rs583 = prep582.executeQuery();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 145
03-03 12:04:44 jdbc: RESULT_CLOSE 146
03-03 12:04:44 jdbc: 
/**/rs583.next();
03-03 12:04:44 jdbc: 
/**/rs583.getLong("id1_0_");
03-03 12:04:44 jdbc: 
/**/rs583.wasNull();
03-03 12:04:44 jdbc: 
/**/rs583.getLong("id0_1_");
03-03 12:04:44 jdbc: 
/**/rs583.wasNull();
03-03 12:04:44 jdbc: 
/**/rs583.getLong("id4_2_");
03-03 12:04:44 jdbc: 
/**/rs583.wasNull();
03-03 12:04:44 jdbc: 
/**/rs583.getLong("id4_3_");
03-03 12:04:44 jdbc: 
/**/rs583.wasNull();
03-03 12:04:44 jdbc: 
/**/rs583.getLong("contentT2_2_4_");
03-03 12:04:44 jdbc: 
/**/rs583.wasNull();
03-03 12:04:44 jdbc: 
/**/rs583.getLong("contentN1_4_");
03-03 12:04:44 jdbc: 
/**/rs583.wasNull();
03-03 12:04:44 jdbc: 
/**/rs583.next();
03-03 12:04:44 jdbc: 
/**/rs583.getLong("id1_0_");
03-03 12:04:44 jdbc: 
/**/rs583.wasNull();
03-03 12:04:44 jdbc: 
/**/rs583.getLong("id0_1_");
03-03 12:04:44 jdbc: 
/**/rs583.wasNull();
03-03 12:04:44 jdbc: 
/**/rs583.getLong("id4_2_");
03-03 12:04:44 jdbc: 
/**/rs583.wasNull();
03-03 12:04:44 jdbc: 
/**/rs583.getLong("id4_3_");
03-03 12:04:44 jdbc: 
/**/rs583.wasNull();
03-03 12:04:44 jdbc: 
/**/rs583.getLong("author8_1_0_");
03-03 12:04:44 jdbc: 
/**/rs583.wasNull();
03-03 12:04:44 jdbc: 
/**/rs583.getLong("contentId1_0_");
03-03 12:04:44 jdbc: 
/**/rs583.wasNull();
03-03 12:04:44 jdbc: 
/**/rs583.getString("contentR3_1_0_");
03-03 12:04:44 jdbc: 
/**/rs583.wasNull();
03-03 12:04:44 jdbc: 
/**/rs583.getTimestamp("creation4_1_0_");
03-03 12:04:44 jdbc: 
/**/rs583.wasNull();
03-03 12:04:44 jdbc: 
/**/rs583.getTimestamp("lastModi5_1_0_");
03-03 12:04:44 jdbc: 
/**/rs583.wasNull();
03-03 12:04:44 jdbc: 
/**/rs583.getString("name1_0_");
03-03 12:04:44 jdbc: 
/**/rs583.wasNull();
03-03 12:04:44 jdbc: 
/**/rs583.getLong("parent9_1_0_");
03-03 12:04:44 jdbc: 
/**/rs583.wasNull();
03-03 12:04:44 jdbc: 
/**/rs583.getBoolean("publicated1_0_");
03-03 12:04:44 jdbc: 
/**/rs583.wasNull();
03-03 12:04:44 jdbc: 
/**/rs583.getString("name4_2_");
03-03 12:04:44 jdbc: 
/**/rs583.wasNull();
03-03 12:04:44 jdbc: 
/**/rs583.getLong("parent3_4_2_");
03-03 12:04:44 jdbc: 
/**/rs583.wasNull();
03-03 12:04:44 jdbc: 
/**/rs583.getLong("contentT2_2_4_");
03-03 12:04:44 jdbc: 
/**/rs583.wasNull();
03-03 12:04:44 jdbc: 
/**/rs583.getLong("contentN1_4_");
03-03 12:04:44 jdbc: 
/**/rs583.wasNull();
03-03 12:04:44 jdbc: 
/**/rs583.next();
03-03 12:04:44 jdbc: 
/**/rs583.close();
03-03 12:04:44 jdbc: 
/**/prep582.getMaxRows();
03-03 12:04:44 jdbc: 
/**/prep582.getQueryTimeout();
03-03 12:04:44 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 132
03-03 12:04:44 jdbc: RESULT_CLOSE 147
03-03 12:04:44 jdbc: 
/**/prep582.close();
03-03 12:04:44 jdbc: COMMAND_CLOSE 145
03-03 12:04:44 jdbc: 
/**/PreparedStatement prep583 = conn51.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 12:04:44 jdbc: SESSION_PREPARE_READ_PARAMS 148
03-03 12:04:44 jdbc: 
/**/prep583.setLong(1, 30L);
03-03 12:04:44 jdbc: 
/**/ResultSet rs584 = prep583.executeQuery();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 148
03-03 12:04:44 jdbc: RESULT_CLOSE 149
03-03 12:04:44 jdbc: 
/**/rs584.next();
03-03 12:04:44 jdbc: 
/**/rs584.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs584.wasNull();
03-03 12:04:44 jdbc: 
/**/rs584.getLong("contentN1_1_1_");
03-03 12:04:44 jdbc: 
/**/rs584.wasNull();
03-03 12:04:44 jdbc: 
/**/rs584.getLong("contentT2_1_");
03-03 12:04:44 jdbc: 
/**/rs584.wasNull();
03-03 12:04:44 jdbc: 
/**/rs584.next();
03-03 12:04:44 jdbc: 
/**/rs584.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs584.wasNull();
03-03 12:04:44 jdbc: 
/**/rs584.getLong("contentN1_1_1_");
03-03 12:04:44 jdbc: 
/**/rs584.wasNull();
03-03 12:04:44 jdbc: 
/**/rs584.getLong("contentT2_1_");
03-03 12:04:44 jdbc: 
/**/rs584.wasNull();
03-03 12:04:44 jdbc: 
/**/rs584.next();
03-03 12:04:44 jdbc: 
/**/rs584.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs584.wasNull();
03-03 12:04:44 jdbc: 
/**/rs584.getLong("contentN1_1_1_");
03-03 12:04:44 jdbc: 
/**/rs584.wasNull();
03-03 12:04:44 jdbc: 
/**/rs584.getLong("contentT2_1_");
03-03 12:04:44 jdbc: 
/**/rs584.wasNull();
03-03 12:04:44 jdbc: 
/**/rs584.next();
03-03 12:04:44 jdbc: 
/**/rs584.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs584.wasNull();
03-03 12:04:44 jdbc: 
/**/rs584.getLong("contentN1_1_1_");
03-03 12:04:44 jdbc: 
/**/rs584.wasNull();
03-03 12:04:44 jdbc: 
/**/rs584.getLong("contentT2_1_");
03-03 12:04:44 jdbc: 
/**/rs584.wasNull();
03-03 12:04:44 jdbc: 
/**/rs584.next();
03-03 12:04:44 jdbc: 
/**/rs584.close();
03-03 12:04:44 jdbc: 
/**/prep583.getMaxRows();
03-03 12:04:44 jdbc: 
/**/prep583.getQueryTimeout();
03-03 12:04:44 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 132
03-03 12:04:44 jdbc: RESULT_CLOSE 150
03-03 12:04:44 jdbc: 
/**/prep583.close();
03-03 12:04:44 jdbc: COMMAND_CLOSE 148
03-03 12:04:44 jdbc: 
/**/PreparedStatement prep584 = conn51.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 12:04:44 jdbc: SESSION_PREPARE_READ_PARAMS 151
03-03 12:04:44 jdbc: 
/**/prep584.setLong(1, 130L);
03-03 12:04:44 jdbc: 
/**/ResultSet rs585 = prep584.executeQuery();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 151
03-03 12:04:44 jdbc: RESULT_CLOSE 152
03-03 12:04:44 jdbc: 
/**/rs585.next();
03-03 12:04:44 jdbc: 
/**/rs585.getLong("id1_0_");
03-03 12:04:44 jdbc: 
/**/rs585.wasNull();
03-03 12:04:44 jdbc: 
/**/rs585.getLong("id0_1_");
03-03 12:04:44 jdbc: 
/**/rs585.wasNull();
03-03 12:04:44 jdbc: 
/**/rs585.getLong("id4_2_");
03-03 12:04:44 jdbc: 
/**/rs585.wasNull();
03-03 12:04:44 jdbc: 
/**/rs585.getLong("id4_3_");
03-03 12:04:44 jdbc: 
/**/rs585.wasNull();
03-03 12:04:44 jdbc: 
/**/rs585.getLong("author8_1_0_");
03-03 12:04:44 jdbc: 
/**/rs585.wasNull();
03-03 12:04:44 jdbc: 
/**/rs585.getLong("contentId1_0_");
03-03 12:04:44 jdbc: 
/**/rs585.wasNull();
03-03 12:04:44 jdbc: 
/**/rs585.getString("contentR3_1_0_");
03-03 12:04:44 jdbc: 
/**/rs585.wasNull();
03-03 12:04:44 jdbc: 
/**/rs585.getTimestamp("creation4_1_0_");
03-03 12:04:44 jdbc: 
/**/rs585.wasNull();
03-03 12:04:44 jdbc: 
/**/rs585.getTimestamp("lastModi5_1_0_");
03-03 12:04:44 jdbc: 
/**/rs585.wasNull();
03-03 12:04:44 jdbc: 
/**/rs585.getString("name1_0_");
03-03 12:04:44 jdbc: 
/**/rs585.wasNull();
03-03 12:04:44 jdbc: 
/**/rs585.getLong("parent9_1_0_");
03-03 12:04:44 jdbc: 
/**/rs585.wasNull();
03-03 12:04:44 jdbc: 
/**/rs585.getBoolean("publicated1_0_");
03-03 12:04:44 jdbc: 
/**/rs585.wasNull();
03-03 12:04:44 jdbc: 
/**/rs585.getLong("contentT2_2_4_");
03-03 12:04:44 jdbc: 
/**/rs585.wasNull();
03-03 12:04:44 jdbc: 
/**/rs585.getLong("contentN1_4_");
03-03 12:04:44 jdbc: 
/**/rs585.wasNull();
03-03 12:04:44 jdbc: 
/**/rs585.next();
03-03 12:04:44 jdbc: 
/**/rs585.close();
03-03 12:04:44 jdbc: 
/**/prep584.getMaxRows();
03-03 12:04:44 jdbc: 
/**/prep584.getQueryTimeout();
03-03 12:04:44 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 132
03-03 12:04:44 jdbc: RESULT_CLOSE 153
03-03 12:04:44 jdbc: 
/**/prep584.close();
03-03 12:04:44 jdbc: COMMAND_CLOSE 151
03-03 12:04:44 jdbc: 
/**/PreparedStatement prep585 = conn51.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 12:04:44 jdbc: SESSION_PREPARE_READ_PARAMS 154
03-03 12:04:44 jdbc: 
/**/prep585.setLong(1, 28L);
03-03 12:04:44 jdbc: 
/**/ResultSet rs586 = prep585.executeQuery();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 154
03-03 12:04:44 jdbc: RESULT_CLOSE 155
03-03 12:04:44 jdbc: 
/**/rs586.next();
03-03 12:04:44 jdbc: 
/**/rs586.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs586.wasNull();
03-03 12:04:44 jdbc: 
/**/rs586.getLong("contentN1_1_1_");
03-03 12:04:44 jdbc: 
/**/rs586.wasNull();
03-03 12:04:44 jdbc: 
/**/rs586.getLong("contentT2_1_");
03-03 12:04:44 jdbc: 
/**/rs586.wasNull();
03-03 12:04:44 jdbc: 
/**/rs586.next();
03-03 12:04:44 jdbc: 
/**/rs586.close();
03-03 12:04:44 jdbc: 
/**/prep585.getMaxRows();
03-03 12:04:44 jdbc: 
/**/prep585.getQueryTimeout();
03-03 12:04:44 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 132
03-03 12:04:44 jdbc: RESULT_CLOSE 156
03-03 12:04:44 jdbc: 
/**/prep585.close();
03-03 12:04:44 jdbc: COMMAND_CLOSE 154
03-03 12:04:44 jdbc: 
/**/PreparedStatement prep586 = conn51.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 12:04:44 jdbc: SESSION_PREPARE_READ_PARAMS 157
03-03 12:04:44 jdbc: 
/**/prep586.setLong(1, 132L);
03-03 12:04:44 jdbc: 
/**/ResultSet rs587 = prep586.executeQuery();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 157
03-03 12:04:44 jdbc: RESULT_CLOSE 158
03-03 12:04:44 jdbc: 
/**/rs587.next();
03-03 12:04:44 jdbc: 
/**/rs587.getLong("id1_0_");
03-03 12:04:44 jdbc: 
/**/rs587.wasNull();
03-03 12:04:44 jdbc: 
/**/rs587.getLong("id0_1_");
03-03 12:04:44 jdbc: 
/**/rs587.wasNull();
03-03 12:04:44 jdbc: 
/**/rs587.getLong("id4_2_");
03-03 12:04:44 jdbc: 
/**/rs587.wasNull();
03-03 12:04:44 jdbc: 
/**/rs587.getLong("id4_3_");
03-03 12:04:44 jdbc: 
/**/rs587.wasNull();
03-03 12:04:44 jdbc: 
/**/rs587.getLong("author8_1_0_");
03-03 12:04:44 jdbc: 
/**/rs587.wasNull();
03-03 12:04:44 jdbc: 
/**/rs587.getLong("contentId1_0_");
03-03 12:04:44 jdbc: 
/**/rs587.wasNull();
03-03 12:04:44 jdbc: 
/**/rs587.getString("contentR3_1_0_");
03-03 12:04:44 jdbc: 
/**/rs587.wasNull();
03-03 12:04:44 jdbc: 
/**/rs587.getTimestamp("creation4_1_0_");
03-03 12:04:44 jdbc: 
/**/rs587.wasNull();
03-03 12:04:44 jdbc: 
/**/rs587.getTimestamp("lastModi5_1_0_");
03-03 12:04:44 jdbc: 
/**/rs587.wasNull();
03-03 12:04:44 jdbc: 
/**/rs587.getString("name1_0_");
03-03 12:04:44 jdbc: 
/**/rs587.wasNull();
03-03 12:04:44 jdbc: 
/**/rs587.getLong("parent9_1_0_");
03-03 12:04:44 jdbc: 
/**/rs587.wasNull();
03-03 12:04:44 jdbc: 
/**/rs587.getBoolean("publicated1_0_");
03-03 12:04:44 jdbc: 
/**/rs587.wasNull();
03-03 12:04:44 jdbc: 
/**/rs587.getLong("contentT2_2_4_");
03-03 12:04:44 jdbc: 
/**/rs587.wasNull();
03-03 12:04:44 jdbc: 
/**/rs587.getLong("contentN1_4_");
03-03 12:04:44 jdbc: 
/**/rs587.wasNull();
03-03 12:04:44 jdbc: 
/**/rs587.next();
03-03 12:04:44 jdbc: 
/**/rs587.close();
03-03 12:04:44 jdbc: 
/**/prep586.getMaxRows();
03-03 12:04:44 jdbc: 
/**/prep586.getQueryTimeout();
03-03 12:04:44 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 132
03-03 12:04:44 jdbc: RESULT_CLOSE 159
03-03 12:04:44 jdbc: 
/**/prep586.close();
03-03 12:04:44 jdbc: COMMAND_CLOSE 157
03-03 12:04:44 jdbc: 
/**/PreparedStatement prep587 = conn51.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 12:04:44 jdbc: SESSION_PREPARE_READ_PARAMS 160
03-03 12:04:44 jdbc: 
/**/prep587.setLong(1, 29L);
03-03 12:04:44 jdbc: 
/**/ResultSet rs588 = prep587.executeQuery();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 160
03-03 12:04:44 jdbc: RESULT_CLOSE 161
03-03 12:04:44 jdbc: 
/**/rs588.next();
03-03 12:04:44 jdbc: 
/**/rs588.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs588.wasNull();
03-03 12:04:44 jdbc: 
/**/rs588.getLong("contentN1_1_1_");
03-03 12:04:44 jdbc: 
/**/rs588.wasNull();
03-03 12:04:44 jdbc: 
/**/rs588.getLong("contentT2_1_");
03-03 12:04:44 jdbc: 
/**/rs588.wasNull();
03-03 12:04:44 jdbc: 
/**/rs588.next();
03-03 12:04:44 jdbc: 
/**/rs588.close();
03-03 12:04:44 jdbc: 
/**/prep587.getMaxRows();
03-03 12:04:44 jdbc: 
/**/prep587.getQueryTimeout();
03-03 12:04:44 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 132
03-03 12:04:44 jdbc: RESULT_CLOSE 162
03-03 12:04:44 jdbc: 
/**/prep587.close();
03-03 12:04:44 jdbc: COMMAND_CLOSE 160
03-03 12:04:44 jdbc: 
/**/PreparedStatement prep588 = conn51.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 12:04:44 jdbc: SESSION_PREPARE_READ_PARAMS 163
03-03 12:04:44 jdbc: 
/**/prep588.setLong(1, 133L);
03-03 12:04:44 jdbc: 
/**/ResultSet rs589 = prep588.executeQuery();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 163
03-03 12:04:44 jdbc: RESULT_CLOSE 164
03-03 12:04:44 jdbc: 
/**/rs589.next();
03-03 12:04:44 jdbc: 
/**/rs589.getLong("id1_0_");
03-03 12:04:44 jdbc: 
/**/rs589.wasNull();
03-03 12:04:44 jdbc: 
/**/rs589.getLong("id0_1_");
03-03 12:04:44 jdbc: 
/**/rs589.wasNull();
03-03 12:04:44 jdbc: 
/**/rs589.getLong("id4_2_");
03-03 12:04:44 jdbc: 
/**/rs589.wasNull();
03-03 12:04:44 jdbc: 
/**/rs589.getLong("id4_3_");
03-03 12:04:44 jdbc: 
/**/rs589.wasNull();
03-03 12:04:44 jdbc: 
/**/rs589.getLong("contentT2_2_4_");
03-03 12:04:44 jdbc: 
/**/rs589.wasNull();
03-03 12:04:44 jdbc: 
/**/rs589.getLong("contentN1_4_");
03-03 12:04:44 jdbc: 
/**/rs589.wasNull();
03-03 12:04:44 jdbc: 
/**/rs589.next();
03-03 12:04:44 jdbc: 
/**/rs589.close();
03-03 12:04:44 jdbc: 
/**/prep588.getMaxRows();
03-03 12:04:44 jdbc: 
/**/prep588.getQueryTimeout();
03-03 12:04:44 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 132
03-03 12:04:44 jdbc: RESULT_CLOSE 165
03-03 12:04:44 jdbc: 
/**/prep588.close();
03-03 12:04:44 jdbc: COMMAND_CLOSE 163
03-03 12:04:44 jdbc: 
/**/PreparedStatement prep589 = conn51.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 12:04:44 jdbc: SESSION_PREPARE_READ_PARAMS 166
03-03 12:04:44 jdbc: 
/**/prep589.setLong(1, 135L);
03-03 12:04:44 jdbc: 
/**/ResultSet rs590 = prep589.executeQuery();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 166
03-03 12:04:44 jdbc: RESULT_CLOSE 167
03-03 12:04:44 jdbc: 
/**/rs590.next();
03-03 12:04:44 jdbc: 
/**/rs590.getLong("id1_0_");
03-03 12:04:44 jdbc: 
/**/rs590.wasNull();
03-03 12:04:44 jdbc: 
/**/rs590.getLong("id0_1_");
03-03 12:04:44 jdbc: 
/**/rs590.wasNull();
03-03 12:04:44 jdbc: 
/**/rs590.getLong("id4_2_");
03-03 12:04:44 jdbc: 
/**/rs590.wasNull();
03-03 12:04:44 jdbc: 
/**/rs590.getLong("id4_3_");
03-03 12:04:44 jdbc: 
/**/rs590.wasNull();
03-03 12:04:44 jdbc: 
/**/rs590.getLong("contentT2_2_4_");
03-03 12:04:44 jdbc: 
/**/rs590.wasNull();
03-03 12:04:44 jdbc: 
/**/rs590.getLong("contentN1_4_");
03-03 12:04:44 jdbc: 
/**/rs590.wasNull();
03-03 12:04:44 jdbc: 
/**/rs590.next();
03-03 12:04:44 jdbc: 
/**/rs590.close();
03-03 12:04:44 jdbc: 
/**/prep589.getMaxRows();
03-03 12:04:44 jdbc: 
/**/prep589.getQueryTimeout();
03-03 12:04:44 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 132
03-03 12:04:44 jdbc: RESULT_CLOSE 168
03-03 12:04:44 jdbc: 
/**/prep589.close();
03-03 12:04:44 jdbc: COMMAND_CLOSE 166
03-03 12:04:44 jdbc: 
/**/PreparedStatement prep590 = conn51.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 12:04:44 jdbc: SESSION_PREPARE_READ_PARAMS 169
03-03 12:04:44 jdbc: 
/**/prep590.setLong(1, 138L);
03-03 12:04:44 jdbc: 
/**/ResultSet rs591 = prep590.executeQuery();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 169
03-03 12:04:44 jdbc: RESULT_CLOSE 170
03-03 12:04:44 jdbc: 
/**/rs591.next();
03-03 12:04:44 jdbc: 
/**/rs591.getLong("id1_0_");
03-03 12:04:44 jdbc: 
/**/rs591.wasNull();
03-03 12:04:44 jdbc: 
/**/rs591.getLong("id0_1_");
03-03 12:04:44 jdbc: 
/**/rs591.wasNull();
03-03 12:04:44 jdbc: 
/**/rs591.getLong("id4_2_");
03-03 12:04:44 jdbc: 
/**/rs591.wasNull();
03-03 12:04:44 jdbc: 
/**/rs591.getLong("id4_3_");
03-03 12:04:44 jdbc: 
/**/rs591.wasNull();
03-03 12:04:44 jdbc: 
/**/rs591.getLong("author8_1_0_");
03-03 12:04:44 jdbc: 
/**/rs591.wasNull();
03-03 12:04:44 jdbc: 
/**/rs591.getLong("contentId1_0_");
03-03 12:04:44 jdbc: 
/**/rs591.wasNull();
03-03 12:04:44 jdbc: 
/**/rs591.getString("contentR3_1_0_");
03-03 12:04:44 jdbc: 
/**/rs591.wasNull();
03-03 12:04:44 jdbc: 
/**/rs591.getTimestamp("creation4_1_0_");
03-03 12:04:44 jdbc: 
/**/rs591.wasNull();
03-03 12:04:44 jdbc: 
/**/rs591.getTimestamp("lastModi5_1_0_");
03-03 12:04:44 jdbc: 
/**/rs591.wasNull();
03-03 12:04:44 jdbc: 
/**/rs591.getString("name1_0_");
03-03 12:04:44 jdbc: 
/**/rs591.wasNull();
03-03 12:04:44 jdbc: 
/**/rs591.getLong("parent9_1_0_");
03-03 12:04:44 jdbc: 
/**/rs591.wasNull();
03-03 12:04:44 jdbc: 
/**/rs591.getBoolean("publicated1_0_");
03-03 12:04:44 jdbc: 
/**/rs591.wasNull();
03-03 12:04:44 jdbc: 
/**/rs591.getLong("contentT2_2_4_");
03-03 12:04:44 jdbc: 
/**/rs591.wasNull();
03-03 12:04:44 jdbc: 
/**/rs591.getLong("contentN1_4_");
03-03 12:04:44 jdbc: 
/**/rs591.wasNull();
03-03 12:04:44 jdbc: 
/**/rs591.next();
03-03 12:04:44 jdbc: 
/**/rs591.close();
03-03 12:04:44 jdbc: 
/**/prep590.getMaxRows();
03-03 12:04:44 jdbc: 
/**/prep590.getQueryTimeout();
03-03 12:04:44 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 132
03-03 12:04:44 jdbc: RESULT_CLOSE 171
03-03 12:04:44 jdbc: 
/**/prep590.close();
03-03 12:04:44 jdbc: COMMAND_CLOSE 169
03-03 12:04:44 jdbc: 
/**/PreparedStatement prep591 = conn51.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 12:04:44 jdbc: SESSION_PREPARE_READ_PARAMS 172
03-03 12:04:44 jdbc: 
/**/prep591.setLong(1, 32L);
03-03 12:04:44 jdbc: 
/**/ResultSet rs592 = prep591.executeQuery();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 172
03-03 12:04:44 jdbc: RESULT_CLOSE 173
03-03 12:04:44 jdbc: 
/**/rs592.next();
03-03 12:04:44 jdbc: 
/**/rs592.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs592.wasNull();
03-03 12:04:44 jdbc: 
/**/rs592.getLong("contentN1_1_1_");
03-03 12:04:44 jdbc: 
/**/rs592.wasNull();
03-03 12:04:44 jdbc: 
/**/rs592.getLong("contentT2_1_");
03-03 12:04:44 jdbc: 
/**/rs592.wasNull();
03-03 12:04:44 jdbc: 
/**/rs592.next();
03-03 12:04:44 jdbc: 
/**/rs592.close();
03-03 12:04:44 jdbc: 
/**/prep591.getMaxRows();
03-03 12:04:44 jdbc: 
/**/prep591.getQueryTimeout();
03-03 12:04:44 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 132
03-03 12:04:44 jdbc: RESULT_CLOSE 174
03-03 12:04:44 jdbc: 
/**/prep591.close();
03-03 12:04:44 jdbc: COMMAND_CLOSE 172
03-03 12:04:44 jdbc: 
/**/PreparedStatement prep592 = conn51.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 12:04:44 jdbc: SESSION_PREPARE_READ_PARAMS 175
03-03 12:04:44 jdbc: 
/**/prep592.setLong(1, 140L);
03-03 12:04:44 jdbc: 
/**/ResultSet rs593 = prep592.executeQuery();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 175
03-03 12:04:44 jdbc: RESULT_CLOSE 176
03-03 12:04:44 jdbc: 
/**/rs593.next();
03-03 12:04:44 jdbc: 
/**/rs593.getLong("id1_0_");
03-03 12:04:44 jdbc: 
/**/rs593.wasNull();
03-03 12:04:44 jdbc: 
/**/rs593.getLong("id0_1_");
03-03 12:04:44 jdbc: 
/**/rs593.wasNull();
03-03 12:04:44 jdbc: 
/**/rs593.getLong("id4_2_");
03-03 12:04:44 jdbc: 
/**/rs593.wasNull();
03-03 12:04:44 jdbc: 
/**/rs593.getLong("id4_3_");
03-03 12:04:44 jdbc: 
/**/rs593.wasNull();
03-03 12:04:44 jdbc: 
/**/rs593.getLong("author8_1_0_");
03-03 12:04:44 jdbc: 
/**/rs593.wasNull();
03-03 12:04:44 jdbc: 
/**/rs593.getLong("contentId1_0_");
03-03 12:04:44 jdbc: 
/**/rs593.wasNull();
03-03 12:04:44 jdbc: 
/**/rs593.getString("contentR3_1_0_");
03-03 12:04:44 jdbc: 
/**/rs593.wasNull();
03-03 12:04:44 jdbc: 
/**/rs593.getTimestamp("creation4_1_0_");
03-03 12:04:44 jdbc: 
/**/rs593.wasNull();
03-03 12:04:44 jdbc: 
/**/rs593.getTimestamp("lastModi5_1_0_");
03-03 12:04:44 jdbc: 
/**/rs593.wasNull();
03-03 12:04:44 jdbc: 
/**/rs593.getString("name1_0_");
03-03 12:04:44 jdbc: 
/**/rs593.wasNull();
03-03 12:04:44 jdbc: 
/**/rs593.getLong("parent9_1_0_");
03-03 12:04:44 jdbc: 
/**/rs593.wasNull();
03-03 12:04:44 jdbc: 
/**/rs593.getBoolean("publicated1_0_");
03-03 12:04:44 jdbc: 
/**/rs593.wasNull();
03-03 12:04:44 jdbc: 
/**/rs593.getLong("contentT2_2_4_");
03-03 12:04:44 jdbc: 
/**/rs593.wasNull();
03-03 12:04:44 jdbc: 
/**/rs593.getLong("contentN1_4_");
03-03 12:04:44 jdbc: 
/**/rs593.wasNull();
03-03 12:04:44 jdbc: 
/**/rs593.next();
03-03 12:04:44 jdbc: 
/**/rs593.close();
03-03 12:04:44 jdbc: 
/**/prep592.getMaxRows();
03-03 12:04:44 jdbc: 
/**/prep592.getQueryTimeout();
03-03 12:04:44 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 132
03-03 12:04:44 jdbc: RESULT_CLOSE 177
03-03 12:04:44 jdbc: 
/**/prep592.close();
03-03 12:04:44 jdbc: COMMAND_CLOSE 175
03-03 12:04:44 jdbc: 
/**/PreparedStatement prep593 = conn51.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 12:04:44 jdbc: SESSION_PREPARE_READ_PARAMS 178
03-03 12:04:44 jdbc: 
/**/prep593.setLong(1, 33L);
03-03 12:04:44 jdbc: 
/**/ResultSet rs594 = prep593.executeQuery();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 178
03-03 12:04:44 jdbc: RESULT_CLOSE 179
03-03 12:04:44 jdbc: 
/**/rs594.next();
03-03 12:04:44 jdbc: 
/**/rs594.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs594.wasNull();
03-03 12:04:44 jdbc: 
/**/rs594.getLong("contentN1_1_1_");
03-03 12:04:44 jdbc: 
/**/rs594.wasNull();
03-03 12:04:44 jdbc: 
/**/rs594.getLong("contentT2_1_");
03-03 12:04:44 jdbc: 
/**/rs594.wasNull();
03-03 12:04:44 jdbc: 
/**/rs594.next();
03-03 12:04:44 jdbc: 
/**/rs594.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs594.wasNull();
03-03 12:04:44 jdbc: 
/**/rs594.getLong("contentN1_1_1_");
03-03 12:04:44 jdbc: 
/**/rs594.wasNull();
03-03 12:04:44 jdbc: 
/**/rs594.getLong("contentT2_1_");
03-03 12:04:44 jdbc: 
/**/rs594.wasNull();
03-03 12:04:44 jdbc: 
/**/rs594.next();
03-03 12:04:44 jdbc: 
/**/rs594.close();
03-03 12:04:44 jdbc: 
/**/prep593.getMaxRows();
03-03 12:04:44 jdbc: 
/**/prep593.getQueryTimeout();
03-03 12:04:44 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 132
03-03 12:04:44 jdbc: RESULT_CLOSE 180
03-03 12:04:44 jdbc: 
/**/prep593.close();
03-03 12:04:44 jdbc: COMMAND_CLOSE 178
03-03 12:04:44 jdbc: 
/**/PreparedStatement prep594 = conn51.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 12:04:44 jdbc: SESSION_PREPARE_READ_PARAMS 181
03-03 12:04:44 jdbc: 
/**/prep594.setLong(1, 141L);
03-03 12:04:44 jdbc: 
/**/ResultSet rs595 = prep594.executeQuery();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 181
03-03 12:04:44 jdbc: RESULT_CLOSE 182
03-03 12:04:44 jdbc: 
/**/rs595.next();
03-03 12:04:44 jdbc: 
/**/rs595.getLong("id1_0_");
03-03 12:04:44 jdbc: 
/**/rs595.wasNull();
03-03 12:04:44 jdbc: 
/**/rs595.getLong("id0_1_");
03-03 12:04:44 jdbc: 
/**/rs595.wasNull();
03-03 12:04:44 jdbc: 
/**/rs595.getLong("id4_2_");
03-03 12:04:44 jdbc: 
/**/rs595.wasNull();
03-03 12:04:44 jdbc: 
/**/rs595.getLong("id4_3_");
03-03 12:04:44 jdbc: 
/**/rs595.wasNull();
03-03 12:04:44 jdbc: 
/**/rs595.getLong("contentT2_2_4_");
03-03 12:04:44 jdbc: 
/**/rs595.wasNull();
03-03 12:04:44 jdbc: 
/**/rs595.getLong("contentN1_4_");
03-03 12:04:44 jdbc: 
/**/rs595.wasNull();
03-03 12:04:44 jdbc: 
/**/rs595.next();
03-03 12:04:44 jdbc: 
/**/rs595.close();
03-03 12:04:44 jdbc: 
/**/prep594.getMaxRows();
03-03 12:04:44 jdbc: 
/**/prep594.getQueryTimeout();
03-03 12:04:44 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 132
03-03 12:04:44 jdbc: RESULT_CLOSE 183
03-03 12:04:44 jdbc: 
/**/prep594.close();
03-03 12:04:44 jdbc: COMMAND_CLOSE 181
03-03 12:04:44 jdbc: 
/**/PreparedStatement prep595 = conn51.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 12:04:44 jdbc: SESSION_PREPARE_READ_PARAMS 184
03-03 12:04:44 jdbc: 
/**/prep595.setLong(1, 143L);
03-03 12:04:44 jdbc: 
/**/ResultSet rs596 = prep595.executeQuery();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 184
03-03 12:04:44 jdbc: RESULT_CLOSE 185
03-03 12:04:44 jdbc: 
/**/rs596.next();
03-03 12:04:44 jdbc: 
/**/rs596.getLong("id1_0_");
03-03 12:04:44 jdbc: 
/**/rs596.wasNull();
03-03 12:04:44 jdbc: 
/**/rs596.getLong("id0_1_");
03-03 12:04:44 jdbc: 
/**/rs596.wasNull();
03-03 12:04:44 jdbc: 
/**/rs596.getLong("id4_2_");
03-03 12:04:44 jdbc: 
/**/rs596.wasNull();
03-03 12:04:44 jdbc: 
/**/rs596.getLong("id4_3_");
03-03 12:04:44 jdbc: 
/**/rs596.wasNull();
03-03 12:04:44 jdbc: 
/**/rs596.getLong("author8_1_0_");
03-03 12:04:44 jdbc: 
/**/rs596.wasNull();
03-03 12:04:44 jdbc: 
/**/rs596.getLong("contentId1_0_");
03-03 12:04:44 jdbc: 
/**/rs596.wasNull();
03-03 12:04:44 jdbc: 
/**/rs596.getString("contentR3_1_0_");
03-03 12:04:44 jdbc: 
/**/rs596.wasNull();
03-03 12:04:44 jdbc: 
/**/rs596.getTimestamp("creation4_1_0_");
03-03 12:04:44 jdbc: 
/**/rs596.wasNull();
03-03 12:04:44 jdbc: 
/**/rs596.getTimestamp("lastModi5_1_0_");
03-03 12:04:44 jdbc: 
/**/rs596.wasNull();
03-03 12:04:44 jdbc: 
/**/rs596.getString("name1_0_");
03-03 12:04:44 jdbc: 
/**/rs596.wasNull();
03-03 12:04:44 jdbc: 
/**/rs596.getLong("parent9_1_0_");
03-03 12:04:44 jdbc: 
/**/rs596.wasNull();
03-03 12:04:44 jdbc: 
/**/rs596.getBoolean("publicated1_0_");
03-03 12:04:44 jdbc: 
/**/rs596.wasNull();
03-03 12:04:44 jdbc: 
/**/rs596.getString("name4_2_");
03-03 12:04:44 jdbc: 
/**/rs596.wasNull();
03-03 12:04:44 jdbc: 
/**/rs596.getLong("parent3_4_2_");
03-03 12:04:44 jdbc: 
/**/rs596.wasNull();
03-03 12:04:44 jdbc: 
/**/rs596.getString("name4_3_");
03-03 12:04:44 jdbc: 
/**/rs596.wasNull();
03-03 12:04:44 jdbc: 
/**/rs596.getLong("parent3_4_3_");
03-03 12:04:44 jdbc: 
/**/rs596.wasNull();
03-03 12:04:44 jdbc: 
/**/rs596.getLong("contentT2_2_4_");
03-03 12:04:44 jdbc: 
/**/rs596.wasNull();
03-03 12:04:44 jdbc: 
/**/rs596.getLong("contentN1_4_");
03-03 12:04:44 jdbc: 
/**/rs596.wasNull();
03-03 12:04:44 jdbc: 
/**/rs596.next();
03-03 12:04:44 jdbc: 
/**/rs596.getLong("id1_0_");
03-03 12:04:44 jdbc: 
/**/rs596.wasNull();
03-03 12:04:44 jdbc: 
/**/rs596.getLong("id0_1_");
03-03 12:04:44 jdbc: 
/**/rs596.wasNull();
03-03 12:04:44 jdbc: 
/**/rs596.getLong("id4_2_");
03-03 12:04:44 jdbc: 
/**/rs596.wasNull();
03-03 12:04:44 jdbc: 
/**/rs596.getLong("id4_3_");
03-03 12:04:44 jdbc: 
/**/rs596.wasNull();
03-03 12:04:44 jdbc: 
/**/rs596.getLong("author8_1_0_");
03-03 12:04:44 jdbc: 
/**/rs596.wasNull();
03-03 12:04:44 jdbc: 
/**/rs596.getLong("contentId1_0_");
03-03 12:04:44 jdbc: 
/**/rs596.wasNull();
03-03 12:04:44 jdbc: 
/**/rs596.getString("contentR3_1_0_");
03-03 12:04:44 jdbc: 
/**/rs596.wasNull();
03-03 12:04:44 jdbc: 
/**/rs596.getTimestamp("creation4_1_0_");
03-03 12:04:44 jdbc: 
/**/rs596.wasNull();
03-03 12:04:44 jdbc: 
/**/rs596.getTimestamp("lastModi5_1_0_");
03-03 12:04:44 jdbc: 
/**/rs596.wasNull();
03-03 12:04:44 jdbc: 
/**/rs596.getString("name1_0_");
03-03 12:04:44 jdbc: 
/**/rs596.wasNull();
03-03 12:04:44 jdbc: 
/**/rs596.getLong("parent9_1_0_");
03-03 12:04:44 jdbc: 
/**/rs596.wasNull();
03-03 12:04:44 jdbc: 
/**/rs596.getBoolean("publicated1_0_");
03-03 12:04:44 jdbc: 
/**/rs596.wasNull();
03-03 12:04:44 jdbc: 
/**/rs596.getLong("contentT2_2_4_");
03-03 12:04:44 jdbc: 
/**/rs596.wasNull();
03-03 12:04:44 jdbc: 
/**/rs596.getLong("contentN1_4_");
03-03 12:04:44 jdbc: 
/**/rs596.wasNull();
03-03 12:04:44 jdbc: 
/**/rs596.next();
03-03 12:04:44 jdbc: 
/**/rs596.getLong("id1_0_");
03-03 12:04:44 jdbc: 
/**/rs596.wasNull();
03-03 12:04:44 jdbc: 
/**/rs596.getLong("id0_1_");
03-03 12:04:44 jdbc: 
/**/rs596.wasNull();
03-03 12:04:44 jdbc: 
/**/rs596.getLong("id4_2_");
03-03 12:04:44 jdbc: 
/**/rs596.wasNull();
03-03 12:04:44 jdbc: 
/**/rs596.getLong("id4_3_");
03-03 12:04:44 jdbc: 
/**/rs596.wasNull();
03-03 12:04:44 jdbc: 
/**/rs596.getLong("author8_1_0_");
03-03 12:04:44 jdbc: 
/**/rs596.wasNull();
03-03 12:04:44 jdbc: 
/**/rs596.getLong("contentId1_0_");
03-03 12:04:44 jdbc: 
/**/rs596.wasNull();
03-03 12:04:44 jdbc: 
/**/rs596.getString("contentR3_1_0_");
03-03 12:04:44 jdbc: 
/**/rs596.wasNull();
03-03 12:04:44 jdbc: 
/**/rs596.getTimestamp("creation4_1_0_");
03-03 12:04:44 jdbc: 
/**/rs596.wasNull();
03-03 12:04:44 jdbc: 
/**/rs596.getTimestamp("lastModi5_1_0_");
03-03 12:04:44 jdbc: 
/**/rs596.wasNull();
03-03 12:04:44 jdbc: 
/**/rs596.getString("name1_0_");
03-03 12:04:44 jdbc: 
/**/rs596.wasNull();
03-03 12:04:44 jdbc: 
/**/rs596.getLong("parent9_1_0_");
03-03 12:04:44 jdbc: 
/**/rs596.wasNull();
03-03 12:04:44 jdbc: 
/**/rs596.getBoolean("publicated1_0_");
03-03 12:04:44 jdbc: 
/**/rs596.wasNull();
03-03 12:04:44 jdbc: 
/**/rs596.getLong("contentT2_2_4_");
03-03 12:04:44 jdbc: 
/**/rs596.wasNull();
03-03 12:04:44 jdbc: 
/**/rs596.getLong("contentN1_4_");
03-03 12:04:44 jdbc: 
/**/rs596.wasNull();
03-03 12:04:44 jdbc: 
/**/rs596.next();
03-03 12:04:44 jdbc: 
/**/rs596.getLong("id1_0_");
03-03 12:04:44 jdbc: 
/**/rs596.wasNull();
03-03 12:04:44 jdbc: 
/**/rs596.getLong("id0_1_");
03-03 12:04:44 jdbc: 
/**/rs596.wasNull();
03-03 12:04:44 jdbc: 
/**/rs596.getLong("id4_2_");
03-03 12:04:44 jdbc: 
/**/rs596.wasNull();
03-03 12:04:44 jdbc: 
/**/rs596.getLong("id4_3_");
03-03 12:04:44 jdbc: 
/**/rs596.wasNull();
03-03 12:04:44 jdbc: 
/**/rs596.getLong("author8_1_0_");
03-03 12:04:44 jdbc: 
/**/rs596.wasNull();
03-03 12:04:44 jdbc: 
/**/rs596.getLong("contentId1_0_");
03-03 12:04:44 jdbc: 
/**/rs596.wasNull();
03-03 12:04:44 jdbc: 
/**/rs596.getString("contentR3_1_0_");
03-03 12:04:44 jdbc: 
/**/rs596.wasNull();
03-03 12:04:44 jdbc: 
/**/rs596.getTimestamp("creation4_1_0_");
03-03 12:04:44 jdbc: 
/**/rs596.wasNull();
03-03 12:04:44 jdbc: 
/**/rs596.getTimestamp("lastModi5_1_0_");
03-03 12:04:44 jdbc: 
/**/rs596.wasNull();
03-03 12:04:44 jdbc: 
/**/rs596.getString("name1_0_");
03-03 12:04:44 jdbc: 
/**/rs596.wasNull();
03-03 12:04:44 jdbc: 
/**/rs596.getLong("parent9_1_0_");
03-03 12:04:44 jdbc: 
/**/rs596.wasNull();
03-03 12:04:44 jdbc: 
/**/rs596.getBoolean("publicated1_0_");
03-03 12:04:44 jdbc: 
/**/rs596.wasNull();
03-03 12:04:44 jdbc: 
/**/rs596.getLong("contentT2_2_4_");
03-03 12:04:44 jdbc: 
/**/rs596.wasNull();
03-03 12:04:44 jdbc: 
/**/rs596.getLong("contentN1_4_");
03-03 12:04:44 jdbc: 
/**/rs596.wasNull();
03-03 12:04:44 jdbc: 
/**/rs596.next();
03-03 12:04:44 jdbc: 
/**/rs596.getLong("id1_0_");
03-03 12:04:44 jdbc: 
/**/rs596.wasNull();
03-03 12:04:44 jdbc: 
/**/rs596.getLong("id0_1_");
03-03 12:04:44 jdbc: 
/**/rs596.wasNull();
03-03 12:04:44 jdbc: 
/**/rs596.getLong("id4_2_");
03-03 12:04:44 jdbc: 
/**/rs596.wasNull();
03-03 12:04:44 jdbc: 
/**/rs596.getLong("id4_3_");
03-03 12:04:44 jdbc: 
/**/rs596.wasNull();
03-03 12:04:44 jdbc: 
/**/rs596.getLong("author8_1_0_");
03-03 12:04:44 jdbc: 
/**/rs596.wasNull();
03-03 12:04:44 jdbc: 
/**/rs596.getLong("contentId1_0_");
03-03 12:04:44 jdbc: 
/**/rs596.wasNull();
03-03 12:04:44 jdbc: 
/**/rs596.getString("contentR3_1_0_");
03-03 12:04:44 jdbc: 
/**/rs596.wasNull();
03-03 12:04:44 jdbc: 
/**/rs596.getTimestamp("creation4_1_0_");
03-03 12:04:44 jdbc: 
/**/rs596.wasNull();
03-03 12:04:44 jdbc: 
/**/rs596.getTimestamp("lastModi5_1_0_");
03-03 12:04:44 jdbc: 
/**/rs596.wasNull();
03-03 12:04:44 jdbc: 
/**/rs596.getString("name1_0_");
03-03 12:04:44 jdbc: 
/**/rs596.wasNull();
03-03 12:04:44 jdbc: 
/**/rs596.getLong("parent9_1_0_");
03-03 12:04:44 jdbc: 
/**/rs596.wasNull();
03-03 12:04:44 jdbc: 
/**/rs596.getBoolean("publicated1_0_");
03-03 12:04:44 jdbc: 
/**/rs596.wasNull();
03-03 12:04:44 jdbc: 
/**/rs596.getLong("contentT2_2_4_");
03-03 12:04:44 jdbc: 
/**/rs596.wasNull();
03-03 12:04:44 jdbc: 
/**/rs596.getLong("contentN1_4_");
03-03 12:04:44 jdbc: 
/**/rs596.wasNull();
03-03 12:04:44 jdbc: 
/**/rs596.next();
03-03 12:04:44 jdbc: 
/**/rs596.close();
03-03 12:04:44 jdbc: 
/**/prep595.getMaxRows();
03-03 12:04:44 jdbc: 
/**/prep595.getQueryTimeout();
03-03 12:04:44 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 132
03-03 12:04:44 jdbc: RESULT_CLOSE 186
03-03 12:04:44 jdbc: 
/**/prep595.close();
03-03 12:04:44 jdbc: COMMAND_CLOSE 184
03-03 12:04:44 jdbc: 
/**/PreparedStatement prep596 = conn51.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 12:04:44 jdbc: SESSION_PREPARE_READ_PARAMS 187
03-03 12:04:44 jdbc: 
/**/prep596.setLong(1, 39L);
03-03 12:04:44 jdbc: 
/**/ResultSet rs597 = prep596.executeQuery();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 187
03-03 12:04:44 jdbc: RESULT_CLOSE 188
03-03 12:04:44 jdbc: 
/**/rs597.next();
03-03 12:04:44 jdbc: 
/**/rs597.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs597.wasNull();
03-03 12:04:44 jdbc: 
/**/rs597.getLong("contentN1_1_1_");
03-03 12:04:44 jdbc: 
/**/rs597.wasNull();
03-03 12:04:44 jdbc: 
/**/rs597.getLong("contentT2_1_");
03-03 12:04:44 jdbc: 
/**/rs597.wasNull();
03-03 12:04:44 jdbc: 
/**/rs597.next();
03-03 12:04:44 jdbc: 
/**/rs597.close();
03-03 12:04:44 jdbc: 
/**/prep596.getMaxRows();
03-03 12:04:44 jdbc: 
/**/prep596.getQueryTimeout();
03-03 12:04:44 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 132
03-03 12:04:44 jdbc: RESULT_CLOSE 189
03-03 12:04:44 jdbc: 
/**/prep596.close();
03-03 12:04:44 jdbc: COMMAND_CLOSE 187
03-03 12:04:44 jdbc: 
/**/PreparedStatement prep597 = conn51.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 12:04:44 jdbc: SESSION_PREPARE_READ_PARAMS 190
03-03 12:04:44 jdbc: 
/**/prep597.setLong(1, 42L);
03-03 12:04:44 jdbc: 
/**/ResultSet rs598 = prep597.executeQuery();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 190
03-03 12:04:44 jdbc: RESULT_CLOSE 191
03-03 12:04:44 jdbc: 
/**/rs598.next();
03-03 12:04:44 jdbc: 
/**/rs598.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs598.wasNull();
03-03 12:04:44 jdbc: 
/**/rs598.getLong("contentN1_1_1_");
03-03 12:04:44 jdbc: 
/**/rs598.wasNull();
03-03 12:04:44 jdbc: 
/**/rs598.getLong("contentT2_1_");
03-03 12:04:44 jdbc: 
/**/rs598.wasNull();
03-03 12:04:44 jdbc: 
/**/rs598.next();
03-03 12:04:44 jdbc: 
/**/rs598.close();
03-03 12:04:44 jdbc: 
/**/prep597.getMaxRows();
03-03 12:04:44 jdbc: 
/**/prep597.getQueryTimeout();
03-03 12:04:44 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 132
03-03 12:04:44 jdbc: RESULT_CLOSE 192
03-03 12:04:44 jdbc: 
/**/prep597.close();
03-03 12:04:44 jdbc: COMMAND_CLOSE 190
03-03 12:04:44 jdbc: 
/**/PreparedStatement prep598 = conn51.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 12:04:44 jdbc: SESSION_PREPARE_READ_PARAMS 193
03-03 12:04:44 jdbc: 
/**/prep598.setLong(1, 43L);
03-03 12:04:44 jdbc: 
/**/ResultSet rs599 = prep598.executeQuery();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 193
03-03 12:04:44 jdbc: RESULT_CLOSE 194
03-03 12:04:44 jdbc: 
/**/rs599.next();
03-03 12:04:44 jdbc: 
/**/rs599.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs599.wasNull();
03-03 12:04:44 jdbc: 
/**/rs599.getLong("contentN1_1_1_");
03-03 12:04:44 jdbc: 
/**/rs599.wasNull();
03-03 12:04:44 jdbc: 
/**/rs599.getLong("contentT2_1_");
03-03 12:04:44 jdbc: 
/**/rs599.wasNull();
03-03 12:04:44 jdbc: 
/**/rs599.next();
03-03 12:04:44 jdbc: 
/**/rs599.close();
03-03 12:04:44 jdbc: 
/**/prep598.getMaxRows();
03-03 12:04:44 jdbc: 
/**/prep598.getQueryTimeout();
03-03 12:04:44 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:44 jdbc: SESSION_PREPARE 196
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 196
03-03 12:04:44 jdbc: RESULT_CLOSE 195
03-03 12:04:44 jdbc: 
/**/prep598.close();
03-03 12:04:44 jdbc: COMMAND_CLOSE 193
03-03 12:04:44 jdbc: 
/**/PreparedStatement prep599 = conn51.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 12:04:44 jdbc: SESSION_PREPARE_READ_PARAMS 197
03-03 12:04:44 jdbc: 
/**/prep599.setLong(1, 40L);
03-03 12:04:44 jdbc: 
/**/ResultSet rs600 = prep599.executeQuery();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 197
03-03 12:04:44 jdbc: RESULT_CLOSE 198
03-03 12:04:44 jdbc: 
/**/rs600.next();
03-03 12:04:44 jdbc: 
/**/rs600.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs600.wasNull();
03-03 12:04:44 jdbc: 
/**/rs600.getLong("contentN1_1_1_");
03-03 12:04:44 jdbc: 
/**/rs600.wasNull();
03-03 12:04:44 jdbc: 
/**/rs600.getLong("contentT2_1_");
03-03 12:04:44 jdbc: 
/**/rs600.wasNull();
03-03 12:04:44 jdbc: 
/**/rs600.next();
03-03 12:04:44 jdbc: 
/**/rs600.close();
03-03 12:04:44 jdbc: 
/**/prep599.getMaxRows();
03-03 12:04:44 jdbc: 
/**/prep599.getQueryTimeout();
03-03 12:04:44 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 196
03-03 12:04:44 jdbc: RESULT_CLOSE 199
03-03 12:04:44 jdbc: 
/**/prep599.close();
03-03 12:04:44 jdbc: COMMAND_CLOSE 197
03-03 12:04:44 jdbc: 
/**/PreparedStatement prep600 = conn51.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 12:04:44 jdbc: SESSION_PREPARE_READ_PARAMS 200
03-03 12:04:44 jdbc: 
/**/prep600.setLong(1, 41L);
03-03 12:04:44 jdbc: 
/**/ResultSet rs601 = prep600.executeQuery();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 200
03-03 12:04:44 jdbc: RESULT_CLOSE 201
03-03 12:04:44 jdbc: 
/**/rs601.next();
03-03 12:04:44 jdbc: 
/**/rs601.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs601.wasNull();
03-03 12:04:44 jdbc: 
/**/rs601.getLong("contentN1_1_1_");
03-03 12:04:44 jdbc: 
/**/rs601.wasNull();
03-03 12:04:44 jdbc: 
/**/rs601.getLong("contentT2_1_");
03-03 12:04:44 jdbc: 
/**/rs601.wasNull();
03-03 12:04:44 jdbc: 
/**/rs601.next();
03-03 12:04:44 jdbc: 
/**/rs601.close();
03-03 12:04:44 jdbc: 
/**/prep600.getMaxRows();
03-03 12:04:44 jdbc: 
/**/prep600.getQueryTimeout();
03-03 12:04:44 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 196
03-03 12:04:44 jdbc: RESULT_CLOSE 202
03-03 12:04:44 jdbc: 
/**/prep600.close();
03-03 12:04:44 jdbc: COMMAND_CLOSE 200
03-03 12:04:44 jdbc: 
/**/PreparedStatement prep601 = conn51.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 12:04:44 jdbc: SESSION_PREPARE_READ_PARAMS 203
03-03 12:04:44 jdbc: 
/**/prep601.setLong(1, 149L);
03-03 12:04:44 jdbc: 
/**/ResultSet rs602 = prep601.executeQuery();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 203
03-03 12:04:44 jdbc: RESULT_CLOSE 204
03-03 12:04:44 jdbc: 
/**/rs602.next();
03-03 12:04:44 jdbc: 
/**/rs602.getLong("id1_0_");
03-03 12:04:44 jdbc: 
/**/rs602.wasNull();
03-03 12:04:44 jdbc: 
/**/rs602.getLong("id0_1_");
03-03 12:04:44 jdbc: 
/**/rs602.wasNull();
03-03 12:04:44 jdbc: 
/**/rs602.getLong("id4_2_");
03-03 12:04:44 jdbc: 
/**/rs602.wasNull();
03-03 12:04:44 jdbc: 
/**/rs602.getLong("id4_3_");
03-03 12:04:44 jdbc: 
/**/rs602.wasNull();
03-03 12:04:44 jdbc: 
/**/rs602.getLong("author8_1_0_");
03-03 12:04:44 jdbc: 
/**/rs602.wasNull();
03-03 12:04:44 jdbc: 
/**/rs602.getLong("contentId1_0_");
03-03 12:04:44 jdbc: 
/**/rs602.wasNull();
03-03 12:04:44 jdbc: 
/**/rs602.getString("contentR3_1_0_");
03-03 12:04:44 jdbc: 
/**/rs602.wasNull();
03-03 12:04:44 jdbc: 
/**/rs602.getTimestamp("creation4_1_0_");
03-03 12:04:44 jdbc: 
/**/rs602.wasNull();
03-03 12:04:44 jdbc: 
/**/rs602.getTimestamp("lastModi5_1_0_");
03-03 12:04:44 jdbc: 
/**/rs602.wasNull();
03-03 12:04:44 jdbc: 
/**/rs602.getString("name1_0_");
03-03 12:04:44 jdbc: 
/**/rs602.wasNull();
03-03 12:04:44 jdbc: 
/**/rs602.getLong("parent9_1_0_");
03-03 12:04:44 jdbc: 
/**/rs602.wasNull();
03-03 12:04:44 jdbc: 
/**/rs602.getBoolean("publicated1_0_");
03-03 12:04:44 jdbc: 
/**/rs602.wasNull();
03-03 12:04:44 jdbc: 
/**/rs602.getLong("contentT2_2_4_");
03-03 12:04:44 jdbc: 
/**/rs602.wasNull();
03-03 12:04:44 jdbc: 
/**/rs602.getLong("contentN1_4_");
03-03 12:04:44 jdbc: 
/**/rs602.wasNull();
03-03 12:04:44 jdbc: 
/**/rs602.next();
03-03 12:04:44 jdbc: 
/**/rs602.close();
03-03 12:04:44 jdbc: 
/**/prep601.getMaxRows();
03-03 12:04:44 jdbc: 
/**/prep601.getQueryTimeout();
03-03 12:04:44 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 196
03-03 12:04:44 jdbc: RESULT_CLOSE 205
03-03 12:04:44 jdbc: 
/**/prep601.close();
03-03 12:04:44 jdbc: COMMAND_CLOSE 203
03-03 12:04:44 jdbc: 
/**/PreparedStatement prep602 = conn51.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 12:04:44 jdbc: SESSION_PREPARE_READ_PARAMS 206
03-03 12:04:44 jdbc: 
/**/prep602.setLong(1, 45L);
03-03 12:04:44 jdbc: 
/**/ResultSet rs603 = prep602.executeQuery();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 206
03-03 12:04:44 jdbc: RESULT_CLOSE 207
03-03 12:04:44 jdbc: 
/**/rs603.next();
03-03 12:04:44 jdbc: 
/**/rs603.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs603.wasNull();
03-03 12:04:44 jdbc: 
/**/rs603.getLong("contentN1_1_1_");
03-03 12:04:44 jdbc: 
/**/rs603.wasNull();
03-03 12:04:44 jdbc: 
/**/rs603.getLong("contentT2_1_");
03-03 12:04:44 jdbc: 
/**/rs603.wasNull();
03-03 12:04:44 jdbc: 
/**/rs603.next();
03-03 12:04:44 jdbc: 
/**/rs603.close();
03-03 12:04:44 jdbc: 
/**/prep602.getMaxRows();
03-03 12:04:44 jdbc: 
/**/prep602.getQueryTimeout();
03-03 12:04:44 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 196
03-03 12:04:44 jdbc: RESULT_CLOSE 208
03-03 12:04:44 jdbc: 
/**/prep602.close();
03-03 12:04:44 jdbc: COMMAND_CLOSE 206
03-03 12:04:44 jdbc: 
/**/PreparedStatement prep603 = conn51.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 12:04:44 jdbc: SESSION_PREPARE_READ_PARAMS 209
03-03 12:04:44 jdbc: 
/**/prep603.setLong(1, 150L);
03-03 12:04:44 jdbc: 
/**/ResultSet rs604 = prep603.executeQuery();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 209
03-03 12:04:44 jdbc: RESULT_CLOSE 210
03-03 12:04:44 jdbc: 
/**/rs604.next();
03-03 12:04:44 jdbc: 
/**/rs604.getLong("id1_0_");
03-03 12:04:44 jdbc: 
/**/rs604.wasNull();
03-03 12:04:44 jdbc: 
/**/rs604.getLong("id0_1_");
03-03 12:04:44 jdbc: 
/**/rs604.wasNull();
03-03 12:04:44 jdbc: 
/**/rs604.getLong("id4_2_");
03-03 12:04:44 jdbc: 
/**/rs604.wasNull();
03-03 12:04:44 jdbc: 
/**/rs604.getLong("id4_3_");
03-03 12:04:44 jdbc: 
/**/rs604.wasNull();
03-03 12:04:44 jdbc: 
/**/rs604.getLong("author8_1_0_");
03-03 12:04:44 jdbc: 
/**/rs604.wasNull();
03-03 12:04:44 jdbc: 
/**/rs604.getLong("contentId1_0_");
03-03 12:04:44 jdbc: 
/**/rs604.wasNull();
03-03 12:04:44 jdbc: 
/**/rs604.getString("contentR3_1_0_");
03-03 12:04:44 jdbc: 
/**/rs604.wasNull();
03-03 12:04:44 jdbc: 
/**/rs604.getTimestamp("creation4_1_0_");
03-03 12:04:44 jdbc: 
/**/rs604.wasNull();
03-03 12:04:44 jdbc: 
/**/rs604.getTimestamp("lastModi5_1_0_");
03-03 12:04:44 jdbc: 
/**/rs604.wasNull();
03-03 12:04:44 jdbc: 
/**/rs604.getString("name1_0_");
03-03 12:04:44 jdbc: 
/**/rs604.wasNull();
03-03 12:04:44 jdbc: 
/**/rs604.getLong("parent9_1_0_");
03-03 12:04:44 jdbc: 
/**/rs604.wasNull();
03-03 12:04:44 jdbc: 
/**/rs604.getBoolean("publicated1_0_");
03-03 12:04:44 jdbc: 
/**/rs604.wasNull();
03-03 12:04:44 jdbc: 
/**/rs604.getLong("contentT2_2_4_");
03-03 12:04:44 jdbc: 
/**/rs604.wasNull();
03-03 12:04:44 jdbc: 
/**/rs604.getLong("contentN1_4_");
03-03 12:04:44 jdbc: 
/**/rs604.wasNull();
03-03 12:04:44 jdbc: 
/**/rs604.next();
03-03 12:04:44 jdbc: 
/**/rs604.close();
03-03 12:04:44 jdbc: 
/**/prep603.getMaxRows();
03-03 12:04:44 jdbc: 
/**/prep603.getQueryTimeout();
03-03 12:04:44 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 196
03-03 12:04:44 jdbc: RESULT_CLOSE 211
03-03 12:04:44 jdbc: 
/**/prep603.close();
03-03 12:04:44 jdbc: COMMAND_CLOSE 209
03-03 12:04:44 jdbc: 
/**/PreparedStatement prep604 = conn51.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 12:04:44 jdbc: SESSION_PREPARE_READ_PARAMS 212
03-03 12:04:44 jdbc: 
/**/prep604.setLong(1, 46L);
03-03 12:04:44 jdbc: 
/**/ResultSet rs605 = prep604.executeQuery();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 212
03-03 12:04:44 jdbc: RESULT_CLOSE 213
03-03 12:04:44 jdbc: 
/**/rs605.next();
03-03 12:04:44 jdbc: 
/**/rs605.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs605.wasNull();
03-03 12:04:44 jdbc: 
/**/rs605.getLong("contentN1_1_1_");
03-03 12:04:44 jdbc: 
/**/rs605.wasNull();
03-03 12:04:44 jdbc: 
/**/rs605.getLong("contentT2_1_");
03-03 12:04:44 jdbc: 
/**/rs605.wasNull();
03-03 12:04:44 jdbc: 
/**/rs605.next();
03-03 12:04:44 jdbc: 
/**/rs605.close();
03-03 12:04:44 jdbc: 
/**/prep604.getMaxRows();
03-03 12:04:44 jdbc: 
/**/prep604.getQueryTimeout();
03-03 12:04:44 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 196
03-03 12:04:44 jdbc: RESULT_CLOSE 214
03-03 12:04:44 jdbc: 
/**/prep604.close();
03-03 12:04:44 jdbc: COMMAND_CLOSE 212
03-03 12:04:44 jdbc: 
/**/PreparedStatement prep605 = conn51.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 12:04:44 jdbc: SESSION_PREPARE_READ_PARAMS 215
03-03 12:04:44 jdbc: 
/**/prep605.setLong(1, 152L);
03-03 12:04:44 jdbc: 
/**/ResultSet rs606 = prep605.executeQuery();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 215
03-03 12:04:44 jdbc: RESULT_CLOSE 216
03-03 12:04:44 jdbc: 
/**/rs606.next();
03-03 12:04:44 jdbc: 
/**/rs606.getLong("id1_0_");
03-03 12:04:44 jdbc: 
/**/rs606.wasNull();
03-03 12:04:44 jdbc: 
/**/rs606.getLong("id0_1_");
03-03 12:04:44 jdbc: 
/**/rs606.wasNull();
03-03 12:04:44 jdbc: 
/**/rs606.getLong("id4_2_");
03-03 12:04:44 jdbc: 
/**/rs606.wasNull();
03-03 12:04:44 jdbc: 
/**/rs606.getLong("id4_3_");
03-03 12:04:44 jdbc: 
/**/rs606.wasNull();
03-03 12:04:44 jdbc: 
/**/rs606.getLong("author8_1_0_");
03-03 12:04:44 jdbc: 
/**/rs606.wasNull();
03-03 12:04:44 jdbc: 
/**/rs606.getLong("contentId1_0_");
03-03 12:04:44 jdbc: 
/**/rs606.wasNull();
03-03 12:04:44 jdbc: 
/**/rs606.getString("contentR3_1_0_");
03-03 12:04:44 jdbc: 
/**/rs606.wasNull();
03-03 12:04:44 jdbc: 
/**/rs606.getTimestamp("creation4_1_0_");
03-03 12:04:44 jdbc: 
/**/rs606.wasNull();
03-03 12:04:44 jdbc: 
/**/rs606.getTimestamp("lastModi5_1_0_");
03-03 12:04:44 jdbc: 
/**/rs606.wasNull();
03-03 12:04:44 jdbc: 
/**/rs606.getString("name1_0_");
03-03 12:04:44 jdbc: 
/**/rs606.wasNull();
03-03 12:04:44 jdbc: 
/**/rs606.getLong("parent9_1_0_");
03-03 12:04:44 jdbc: 
/**/rs606.wasNull();
03-03 12:04:44 jdbc: 
/**/rs606.getBoolean("publicated1_0_");
03-03 12:04:44 jdbc: 
/**/rs606.wasNull();
03-03 12:04:44 jdbc: 
/**/rs606.getLong("contentT2_2_4_");
03-03 12:04:44 jdbc: 
/**/rs606.wasNull();
03-03 12:04:44 jdbc: 
/**/rs606.getLong("contentN1_4_");
03-03 12:04:44 jdbc: 
/**/rs606.wasNull();
03-03 12:04:44 jdbc: 
/**/rs606.next();
03-03 12:04:44 jdbc: 
/**/rs606.close();
03-03 12:04:44 jdbc: 
/**/prep605.getMaxRows();
03-03 12:04:44 jdbc: 
/**/prep605.getQueryTimeout();
03-03 12:04:44 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 196
03-03 12:04:44 jdbc: RESULT_CLOSE 217
03-03 12:04:44 jdbc: 
/**/prep605.close();
03-03 12:04:44 jdbc: COMMAND_CLOSE 215
03-03 12:04:44 jdbc: 
/**/PreparedStatement prep606 = conn51.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 12:04:44 jdbc: SESSION_PREPARE_READ_PARAMS 218
03-03 12:04:44 jdbc: 
/**/prep606.setLong(1, 48L);
03-03 12:04:44 jdbc: 
/**/ResultSet rs607 = prep606.executeQuery();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 218
03-03 12:04:44 jdbc: RESULT_CLOSE 219
03-03 12:04:44 jdbc: 
/**/rs607.next();
03-03 12:04:44 jdbc: 
/**/rs607.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs607.wasNull();
03-03 12:04:44 jdbc: 
/**/rs607.getLong("contentN1_1_1_");
03-03 12:04:44 jdbc: 
/**/rs607.wasNull();
03-03 12:04:44 jdbc: 
/**/rs607.getLong("contentT2_1_");
03-03 12:04:44 jdbc: 
/**/rs607.wasNull();
03-03 12:04:44 jdbc: 
/**/rs607.next();
03-03 12:04:44 jdbc: 
/**/rs607.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs607.wasNull();
03-03 12:04:44 jdbc: 
/**/rs607.getLong("contentN1_1_1_");
03-03 12:04:44 jdbc: 
/**/rs607.wasNull();
03-03 12:04:44 jdbc: 
/**/rs607.getLong("contentT2_1_");
03-03 12:04:44 jdbc: 
/**/rs607.wasNull();
03-03 12:04:44 jdbc: 
/**/rs607.next();
03-03 12:04:44 jdbc: 
/**/rs607.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs607.wasNull();
03-03 12:04:44 jdbc: 
/**/rs607.getLong("contentN1_1_1_");
03-03 12:04:44 jdbc: 
/**/rs607.wasNull();
03-03 12:04:44 jdbc: 
/**/rs607.getLong("contentT2_1_");
03-03 12:04:44 jdbc: 
/**/rs607.wasNull();
03-03 12:04:44 jdbc: 
/**/rs607.next();
03-03 12:04:44 jdbc: 
/**/rs607.close();
03-03 12:04:44 jdbc: 
/**/prep606.getMaxRows();
03-03 12:04:44 jdbc: 
/**/prep606.getQueryTimeout();
03-03 12:04:44 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 196
03-03 12:04:44 jdbc: RESULT_CLOSE 220
03-03 12:04:44 jdbc: 
/**/prep606.close();
03-03 12:04:44 jdbc: COMMAND_CLOSE 218
03-03 12:04:44 jdbc: 
/**/PreparedStatement prep607 = conn51.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 12:04:44 jdbc: SESSION_PREPARE_READ_PARAMS 221
03-03 12:04:44 jdbc: 
/**/prep607.setLong(1, 153L);
03-03 12:04:44 jdbc: 
/**/ResultSet rs608 = prep607.executeQuery();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 221
03-03 12:04:44 jdbc: RESULT_CLOSE 222
03-03 12:04:44 jdbc: 
/**/rs608.next();
03-03 12:04:44 jdbc: 
/**/rs608.getLong("id1_0_");
03-03 12:04:44 jdbc: 
/**/rs608.wasNull();
03-03 12:04:44 jdbc: 
/**/rs608.getLong("id0_1_");
03-03 12:04:44 jdbc: 
/**/rs608.wasNull();
03-03 12:04:44 jdbc: 
/**/rs608.getLong("id4_2_");
03-03 12:04:44 jdbc: 
/**/rs608.wasNull();
03-03 12:04:44 jdbc: 
/**/rs608.getLong("id4_3_");
03-03 12:04:44 jdbc: 
/**/rs608.wasNull();
03-03 12:04:44 jdbc: 
/**/rs608.getLong("contentT2_2_4_");
03-03 12:04:44 jdbc: 
/**/rs608.wasNull();
03-03 12:04:44 jdbc: 
/**/rs608.getLong("contentN1_4_");
03-03 12:04:44 jdbc: 
/**/rs608.wasNull();
03-03 12:04:44 jdbc: 
/**/rs608.next();
03-03 12:04:44 jdbc: 
/**/rs608.close();
03-03 12:04:44 jdbc: 
/**/prep607.getMaxRows();
03-03 12:04:44 jdbc: 
/**/prep607.getQueryTimeout();
03-03 12:04:44 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 196
03-03 12:04:44 jdbc: RESULT_CLOSE 223
03-03 12:04:44 jdbc: 
/**/prep607.close();
03-03 12:04:44 jdbc: COMMAND_CLOSE 221
03-03 12:04:44 jdbc: 
/**/PreparedStatement prep608 = conn51.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 12:04:44 jdbc: SESSION_PREPARE_READ_PARAMS 224
03-03 12:04:44 jdbc: 
/**/prep608.setLong(1, 154L);
03-03 12:04:44 jdbc: 
/**/ResultSet rs609 = prep608.executeQuery();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 224
03-03 12:04:44 jdbc: RESULT_CLOSE 225
03-03 12:04:44 jdbc: 
/**/rs609.next();
03-03 12:04:44 jdbc: 
/**/rs609.getLong("id1_0_");
03-03 12:04:44 jdbc: 
/**/rs609.wasNull();
03-03 12:04:44 jdbc: 
/**/rs609.getLong("id0_1_");
03-03 12:04:44 jdbc: 
/**/rs609.wasNull();
03-03 12:04:44 jdbc: 
/**/rs609.getLong("id4_2_");
03-03 12:04:44 jdbc: 
/**/rs609.wasNull();
03-03 12:04:44 jdbc: 
/**/rs609.getLong("id4_3_");
03-03 12:04:44 jdbc: 
/**/rs609.wasNull();
03-03 12:04:44 jdbc: 
/**/rs609.getLong("contentT2_2_4_");
03-03 12:04:44 jdbc: 
/**/rs609.wasNull();
03-03 12:04:44 jdbc: 
/**/rs609.getLong("contentN1_4_");
03-03 12:04:44 jdbc: 
/**/rs609.wasNull();
03-03 12:04:44 jdbc: 
/**/rs609.next();
03-03 12:04:44 jdbc: 
/**/rs609.close();
03-03 12:04:44 jdbc: 
/**/prep608.getMaxRows();
03-03 12:04:44 jdbc: 
/**/prep608.getQueryTimeout();
03-03 12:04:44 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 196
03-03 12:04:44 jdbc: RESULT_CLOSE 226
03-03 12:04:44 jdbc: 
/**/prep608.close();
03-03 12:04:44 jdbc: COMMAND_CLOSE 224
03-03 12:04:44 jdbc: 
/**/PreparedStatement prep609 = conn51.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 12:04:44 jdbc: SESSION_PREPARE_READ_PARAMS 227
03-03 12:04:44 jdbc: 
/**/prep609.setLong(1, 155L);
03-03 12:04:44 jdbc: 
/**/ResultSet rs610 = prep609.executeQuery();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 227
03-03 12:04:44 jdbc: RESULT_CLOSE 228
03-03 12:04:44 jdbc: 
/**/rs610.next();
03-03 12:04:44 jdbc: 
/**/rs610.getLong("id1_0_");
03-03 12:04:44 jdbc: 
/**/rs610.wasNull();
03-03 12:04:44 jdbc: 
/**/rs610.getLong("id0_1_");
03-03 12:04:44 jdbc: 
/**/rs610.wasNull();
03-03 12:04:44 jdbc: 
/**/rs610.getLong("id4_2_");
03-03 12:04:44 jdbc: 
/**/rs610.wasNull();
03-03 12:04:44 jdbc: 
/**/rs610.getLong("id4_3_");
03-03 12:04:44 jdbc: 
/**/rs610.wasNull();
03-03 12:04:44 jdbc: 
/**/rs610.getLong("author8_1_0_");
03-03 12:04:44 jdbc: 
/**/rs610.wasNull();
03-03 12:04:44 jdbc: 
/**/rs610.getLong("contentId1_0_");
03-03 12:04:44 jdbc: 
/**/rs610.wasNull();
03-03 12:04:44 jdbc: 
/**/rs610.getString("contentR3_1_0_");
03-03 12:04:44 jdbc: 
/**/rs610.wasNull();
03-03 12:04:44 jdbc: 
/**/rs610.getTimestamp("creation4_1_0_");
03-03 12:04:44 jdbc: 
/**/rs610.wasNull();
03-03 12:04:44 jdbc: 
/**/rs610.getTimestamp("lastModi5_1_0_");
03-03 12:04:44 jdbc: 
/**/rs610.wasNull();
03-03 12:04:44 jdbc: 
/**/rs610.getString("name1_0_");
03-03 12:04:44 jdbc: 
/**/rs610.wasNull();
03-03 12:04:44 jdbc: 
/**/rs610.getLong("parent9_1_0_");
03-03 12:04:44 jdbc: 
/**/rs610.wasNull();
03-03 12:04:44 jdbc: 
/**/rs610.getBoolean("publicated1_0_");
03-03 12:04:44 jdbc: 
/**/rs610.wasNull();
03-03 12:04:44 jdbc: 
/**/rs610.getLong("contentT2_2_4_");
03-03 12:04:44 jdbc: 
/**/rs610.wasNull();
03-03 12:04:44 jdbc: 
/**/rs610.getLong("contentN1_4_");
03-03 12:04:44 jdbc: 
/**/rs610.wasNull();
03-03 12:04:44 jdbc: 
/**/rs610.next();
03-03 12:04:44 jdbc: 
/**/rs610.close();
03-03 12:04:44 jdbc: 
/**/prep609.getMaxRows();
03-03 12:04:44 jdbc: 
/**/prep609.getQueryTimeout();
03-03 12:04:44 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 196
03-03 12:04:44 jdbc: RESULT_CLOSE 229
03-03 12:04:44 jdbc: 
/**/prep609.close();
03-03 12:04:44 jdbc: COMMAND_CLOSE 227
03-03 12:04:44 jdbc: 
/**/PreparedStatement prep610 = conn51.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 12:04:44 jdbc: SESSION_PREPARE_READ_PARAMS 230
03-03 12:04:44 jdbc: 
/**/prep610.setLong(1, 49L);
03-03 12:04:44 jdbc: 
/**/ResultSet rs611 = prep610.executeQuery();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 230
03-03 12:04:44 jdbc: RESULT_CLOSE 231
03-03 12:04:44 jdbc: 
/**/rs611.next();
03-03 12:04:44 jdbc: 
/**/rs611.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs611.wasNull();
03-03 12:04:44 jdbc: 
/**/rs611.getLong("contentN1_1_1_");
03-03 12:04:44 jdbc: 
/**/rs611.wasNull();
03-03 12:04:44 jdbc: 
/**/rs611.getLong("contentT2_1_");
03-03 12:04:44 jdbc: 
/**/rs611.wasNull();
03-03 12:04:44 jdbc: 
/**/rs611.next();
03-03 12:04:44 jdbc: 
/**/rs611.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs611.wasNull();
03-03 12:04:44 jdbc: 
/**/rs611.getLong("contentN1_1_1_");
03-03 12:04:44 jdbc: 
/**/rs611.wasNull();
03-03 12:04:44 jdbc: 
/**/rs611.getLong("contentT2_1_");
03-03 12:04:44 jdbc: 
/**/rs611.wasNull();
03-03 12:04:44 jdbc: 
/**/rs611.next();
03-03 12:04:44 jdbc: 
/**/rs611.close();
03-03 12:04:44 jdbc: 
/**/prep610.getMaxRows();
03-03 12:04:44 jdbc: 
/**/prep610.getQueryTimeout();
03-03 12:04:44 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 196
03-03 12:04:44 jdbc: RESULT_CLOSE 232
03-03 12:04:44 jdbc: 
/**/prep610.close();
03-03 12:04:44 jdbc: COMMAND_CLOSE 230
03-03 12:04:44 jdbc: 
/**/PreparedStatement prep611 = conn51.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 12:04:44 jdbc: SESSION_PREPARE_READ_PARAMS 233
03-03 12:04:44 jdbc: 
/**/prep611.setLong(1, 156L);
03-03 12:04:44 jdbc: 
/**/ResultSet rs612 = prep611.executeQuery();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 233
03-03 12:04:44 jdbc: RESULT_CLOSE 234
03-03 12:04:44 jdbc: 
/**/rs612.next();
03-03 12:04:44 jdbc: 
/**/rs612.getLong("id1_0_");
03-03 12:04:44 jdbc: 
/**/rs612.wasNull();
03-03 12:04:44 jdbc: 
/**/rs612.getLong("id0_1_");
03-03 12:04:44 jdbc: 
/**/rs612.wasNull();
03-03 12:04:44 jdbc: 
/**/rs612.getLong("id4_2_");
03-03 12:04:44 jdbc: 
/**/rs612.wasNull();
03-03 12:04:44 jdbc: 
/**/rs612.getLong("id4_3_");
03-03 12:04:44 jdbc: 
/**/rs612.wasNull();
03-03 12:04:44 jdbc: 
/**/rs612.getLong("contentT2_2_4_");
03-03 12:04:44 jdbc: 
/**/rs612.wasNull();
03-03 12:04:44 jdbc: 
/**/rs612.getLong("contentN1_4_");
03-03 12:04:44 jdbc: 
/**/rs612.wasNull();
03-03 12:04:44 jdbc: 
/**/rs612.next();
03-03 12:04:44 jdbc: 
/**/rs612.close();
03-03 12:04:44 jdbc: 
/**/prep611.getMaxRows();
03-03 12:04:44 jdbc: 
/**/prep611.getQueryTimeout();
03-03 12:04:44 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 196
03-03 12:04:44 jdbc: RESULT_CLOSE 235
03-03 12:04:44 jdbc: 
/**/prep611.close();
03-03 12:04:44 jdbc: COMMAND_CLOSE 233
03-03 12:04:44 jdbc: 
/**/PreparedStatement prep612 = conn51.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 12:04:44 jdbc: SESSION_PREPARE_READ_PARAMS 236
03-03 12:04:44 jdbc: 
/**/prep612.setLong(1, 157L);
03-03 12:04:44 jdbc: 
/**/ResultSet rs613 = prep612.executeQuery();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 236
03-03 12:04:44 jdbc: RESULT_CLOSE 237
03-03 12:04:44 jdbc: 
/**/rs613.next();
03-03 12:04:44 jdbc: 
/**/rs613.getLong("id1_0_");
03-03 12:04:44 jdbc: 
/**/rs613.wasNull();
03-03 12:04:44 jdbc: 
/**/rs613.getLong("id0_1_");
03-03 12:04:44 jdbc: 
/**/rs613.wasNull();
03-03 12:04:44 jdbc: 
/**/rs613.getLong("id4_2_");
03-03 12:04:44 jdbc: 
/**/rs613.wasNull();
03-03 12:04:44 jdbc: 
/**/rs613.getLong("id4_3_");
03-03 12:04:44 jdbc: 
/**/rs613.wasNull();
03-03 12:04:44 jdbc: 
/**/rs613.getLong("contentT2_2_4_");
03-03 12:04:44 jdbc: 
/**/rs613.wasNull();
03-03 12:04:44 jdbc: 
/**/rs613.getLong("contentN1_4_");
03-03 12:04:44 jdbc: 
/**/rs613.wasNull();
03-03 12:04:44 jdbc: 
/**/rs613.next();
03-03 12:04:44 jdbc: 
/**/rs613.close();
03-03 12:04:44 jdbc: 
/**/prep612.getMaxRows();
03-03 12:04:44 jdbc: 
/**/prep612.getQueryTimeout();
03-03 12:04:44 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 196
03-03 12:04:44 jdbc: RESULT_CLOSE 238
03-03 12:04:44 jdbc: 
/**/prep612.close();
03-03 12:04:44 jdbc: COMMAND_CLOSE 236
03-03 12:04:44 jdbc: 
/**/PreparedStatement prep613 = conn51.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 12:04:44 jdbc: SESSION_PREPARE_READ_PARAMS 239
03-03 12:04:44 jdbc: 
/**/prep613.setLong(1, 158L);
03-03 12:04:44 jdbc: 
/**/ResultSet rs614 = prep613.executeQuery();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 239
03-03 12:04:44 jdbc: RESULT_CLOSE 240
03-03 12:04:44 jdbc: 
/**/rs614.next();
03-03 12:04:44 jdbc: 
/**/rs614.getLong("id1_0_");
03-03 12:04:44 jdbc: 
/**/rs614.wasNull();
03-03 12:04:44 jdbc: 
/**/rs614.getLong("id0_1_");
03-03 12:04:44 jdbc: 
/**/rs614.wasNull();
03-03 12:04:44 jdbc: 
/**/rs614.getLong("id4_2_");
03-03 12:04:44 jdbc: 
/**/rs614.wasNull();
03-03 12:04:44 jdbc: 
/**/rs614.getLong("id4_3_");
03-03 12:04:44 jdbc: 
/**/rs614.wasNull();
03-03 12:04:44 jdbc: 
/**/rs614.getLong("contentT2_2_4_");
03-03 12:04:44 jdbc: 
/**/rs614.wasNull();
03-03 12:04:44 jdbc: 
/**/rs614.getLong("contentN1_4_");
03-03 12:04:44 jdbc: 
/**/rs614.wasNull();
03-03 12:04:44 jdbc: 
/**/rs614.next();
03-03 12:04:44 jdbc: 
/**/rs614.close();
03-03 12:04:44 jdbc: 
/**/prep613.getMaxRows();
03-03 12:04:44 jdbc: 
/**/prep613.getQueryTimeout();
03-03 12:04:44 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 196
03-03 12:04:44 jdbc: RESULT_CLOSE 241
03-03 12:04:44 jdbc: 
/**/prep613.close();
03-03 12:04:44 jdbc: COMMAND_CLOSE 239
03-03 12:04:44 jdbc: 
/**/PreparedStatement prep614 = conn51.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 12:04:44 jdbc: SESSION_PREPARE_READ_PARAMS 242
03-03 12:04:44 jdbc: 
/**/prep614.setLong(1, 161L);
03-03 12:04:44 jdbc: 
/**/ResultSet rs615 = prep614.executeQuery();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 242
03-03 12:04:44 jdbc: RESULT_CLOSE 243
03-03 12:04:44 jdbc: 
/**/rs615.next();
03-03 12:04:44 jdbc: 
/**/rs615.getLong("id1_0_");
03-03 12:04:44 jdbc: 
/**/rs615.wasNull();
03-03 12:04:44 jdbc: 
/**/rs615.getLong("id0_1_");
03-03 12:04:44 jdbc: 
/**/rs615.wasNull();
03-03 12:04:44 jdbc: 
/**/rs615.getLong("id4_2_");
03-03 12:04:44 jdbc: 
/**/rs615.wasNull();
03-03 12:04:44 jdbc: 
/**/rs615.getLong("id4_3_");
03-03 12:04:44 jdbc: 
/**/rs615.wasNull();
03-03 12:04:44 jdbc: 
/**/rs615.getLong("contentT2_2_4_");
03-03 12:04:44 jdbc: 
/**/rs615.wasNull();
03-03 12:04:44 jdbc: 
/**/rs615.getLong("contentN1_4_");
03-03 12:04:44 jdbc: 
/**/rs615.wasNull();
03-03 12:04:44 jdbc: 
/**/rs615.next();
03-03 12:04:44 jdbc: 
/**/rs615.close();
03-03 12:04:44 jdbc: 
/**/prep614.getMaxRows();
03-03 12:04:44 jdbc: 
/**/prep614.getQueryTimeout();
03-03 12:04:44 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 196
03-03 12:04:44 jdbc: RESULT_CLOSE 244
03-03 12:04:44 jdbc: 
/**/prep614.close();
03-03 12:04:44 jdbc: COMMAND_CLOSE 242
03-03 12:04:44 jdbc: 
/**/PreparedStatement prep615 = conn51.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 12:04:44 jdbc: SESSION_PREPARE_READ_PARAMS 245
03-03 12:04:44 jdbc: 
/**/prep615.setLong(1, 163L);
03-03 12:04:44 jdbc: 
/**/ResultSet rs616 = prep615.executeQuery();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 245
03-03 12:04:44 jdbc: RESULT_CLOSE 246
03-03 12:04:44 jdbc: 
/**/rs616.next();
03-03 12:04:44 jdbc: 
/**/rs616.getLong("id1_0_");
03-03 12:04:44 jdbc: 
/**/rs616.wasNull();
03-03 12:04:44 jdbc: 
/**/rs616.getLong("id0_1_");
03-03 12:04:44 jdbc: 
/**/rs616.wasNull();
03-03 12:04:44 jdbc: 
/**/rs616.getLong("id4_2_");
03-03 12:04:44 jdbc: 
/**/rs616.wasNull();
03-03 12:04:44 jdbc: 
/**/rs616.getLong("id4_3_");
03-03 12:04:44 jdbc: 
/**/rs616.wasNull();
03-03 12:04:44 jdbc: 
/**/rs616.getLong("author8_1_0_");
03-03 12:04:44 jdbc: 
/**/rs616.wasNull();
03-03 12:04:44 jdbc: 
/**/rs616.getLong("contentId1_0_");
03-03 12:04:44 jdbc: 
/**/rs616.wasNull();
03-03 12:04:44 jdbc: 
/**/rs616.getString("contentR3_1_0_");
03-03 12:04:44 jdbc: 
/**/rs616.wasNull();
03-03 12:04:44 jdbc: 
/**/rs616.getTimestamp("creation4_1_0_");
03-03 12:04:44 jdbc: 
/**/rs616.wasNull();
03-03 12:04:44 jdbc: 
/**/rs616.getTimestamp("lastModi5_1_0_");
03-03 12:04:44 jdbc: 
/**/rs616.wasNull();
03-03 12:04:44 jdbc: 
/**/rs616.getString("name1_0_");
03-03 12:04:44 jdbc: 
/**/rs616.wasNull();
03-03 12:04:44 jdbc: 
/**/rs616.getLong("parent9_1_0_");
03-03 12:04:44 jdbc: 
/**/rs616.wasNull();
03-03 12:04:44 jdbc: 
/**/rs616.getBoolean("publicated1_0_");
03-03 12:04:44 jdbc: 
/**/rs616.wasNull();
03-03 12:04:44 jdbc: 
/**/rs616.getString("name4_2_");
03-03 12:04:44 jdbc: 
/**/rs616.wasNull();
03-03 12:04:44 jdbc: 
/**/rs616.getLong("parent3_4_2_");
03-03 12:04:44 jdbc: 
/**/rs616.wasNull();
03-03 12:04:44 jdbc: 
/**/rs616.getLong("contentT2_2_4_");
03-03 12:04:44 jdbc: 
/**/rs616.wasNull();
03-03 12:04:44 jdbc: 
/**/rs616.getLong("contentN1_4_");
03-03 12:04:44 jdbc: 
/**/rs616.wasNull();
03-03 12:04:44 jdbc: 
/**/rs616.next();
03-03 12:04:44 jdbc: 
/**/rs616.close();
03-03 12:04:44 jdbc: 
/**/prep615.getMaxRows();
03-03 12:04:44 jdbc: 
/**/prep615.getQueryTimeout();
03-03 12:04:44 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 196
03-03 12:04:44 jdbc: RESULT_CLOSE 247
03-03 12:04:44 jdbc: 
/**/prep615.close();
03-03 12:04:44 jdbc: COMMAND_CLOSE 245
03-03 12:04:44 jdbc: 
/**/PreparedStatement prep616 = conn51.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 12:04:44 jdbc: SESSION_PREPARE_READ_PARAMS 248
03-03 12:04:44 jdbc: 
/**/prep616.setLong(1, 51L);
03-03 12:04:44 jdbc: 
/**/ResultSet rs617 = prep616.executeQuery();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 248
03-03 12:04:44 jdbc: RESULT_CLOSE 249
03-03 12:04:44 jdbc: 
/**/rs617.next();
03-03 12:04:44 jdbc: 
/**/rs617.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs617.wasNull();
03-03 12:04:44 jdbc: 
/**/rs617.getLong("contentN1_1_1_");
03-03 12:04:44 jdbc: 
/**/rs617.wasNull();
03-03 12:04:44 jdbc: 
/**/rs617.getLong("contentT2_1_");
03-03 12:04:44 jdbc: 
/**/rs617.wasNull();
03-03 12:04:44 jdbc: 
/**/rs617.next();
03-03 12:04:44 jdbc: 
/**/rs617.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs617.wasNull();
03-03 12:04:44 jdbc: 
/**/rs617.getLong("contentN1_1_1_");
03-03 12:04:44 jdbc: 
/**/rs617.wasNull();
03-03 12:04:44 jdbc: 
/**/rs617.getLong("contentT2_1_");
03-03 12:04:44 jdbc: 
/**/rs617.wasNull();
03-03 12:04:44 jdbc: 
/**/rs617.next();
03-03 12:04:44 jdbc: 
/**/rs617.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs617.wasNull();
03-03 12:04:44 jdbc: 
/**/rs617.getLong("contentN1_1_1_");
03-03 12:04:44 jdbc: 
/**/rs617.wasNull();
03-03 12:04:44 jdbc: 
/**/rs617.getLong("contentT2_1_");
03-03 12:04:44 jdbc: 
/**/rs617.wasNull();
03-03 12:04:44 jdbc: 
/**/rs617.next();
03-03 12:04:44 jdbc: 
/**/rs617.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs617.wasNull();
03-03 12:04:44 jdbc: 
/**/rs617.getLong("contentN1_1_1_");
03-03 12:04:44 jdbc: 
/**/rs617.wasNull();
03-03 12:04:44 jdbc: 
/**/rs617.getLong("contentT2_1_");
03-03 12:04:44 jdbc: 
/**/rs617.wasNull();
03-03 12:04:44 jdbc: 
/**/rs617.next();
03-03 12:04:44 jdbc: 
/**/rs617.close();
03-03 12:04:44 jdbc: 
/**/prep616.getMaxRows();
03-03 12:04:44 jdbc: 
/**/prep616.getQueryTimeout();
03-03 12:04:44 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 196
03-03 12:04:44 jdbc: RESULT_CLOSE 250
03-03 12:04:44 jdbc: 
/**/prep616.close();
03-03 12:04:44 jdbc: COMMAND_CLOSE 248
03-03 12:04:44 jdbc: 
/**/PreparedStatement prep617 = conn51.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 12:04:44 jdbc: SESSION_PREPARE_READ_PARAMS 251
03-03 12:04:44 jdbc: 
/**/prep617.setLong(1, 164L);
03-03 12:04:44 jdbc: 
/**/ResultSet rs618 = prep617.executeQuery();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 251
03-03 12:04:44 jdbc: RESULT_CLOSE 252
03-03 12:04:44 jdbc: 
/**/rs618.next();
03-03 12:04:44 jdbc: 
/**/rs618.getLong("id1_0_");
03-03 12:04:44 jdbc: 
/**/rs618.wasNull();
03-03 12:04:44 jdbc: 
/**/rs618.getLong("id0_1_");
03-03 12:04:44 jdbc: 
/**/rs618.wasNull();
03-03 12:04:44 jdbc: 
/**/rs618.getLong("id4_2_");
03-03 12:04:44 jdbc: 
/**/rs618.wasNull();
03-03 12:04:44 jdbc: 
/**/rs618.getLong("id4_3_");
03-03 12:04:44 jdbc: 
/**/rs618.wasNull();
03-03 12:04:44 jdbc: 
/**/rs618.getLong("contentT2_2_4_");
03-03 12:04:44 jdbc: 
/**/rs618.wasNull();
03-03 12:04:44 jdbc: 
/**/rs618.getLong("contentN1_4_");
03-03 12:04:44 jdbc: 
/**/rs618.wasNull();
03-03 12:04:44 jdbc: 
/**/rs618.next();
03-03 12:04:44 jdbc: 
/**/rs618.getLong("id1_0_");
03-03 12:04:44 jdbc: 
/**/rs618.wasNull();
03-03 12:04:44 jdbc: 
/**/rs618.getLong("id0_1_");
03-03 12:04:44 jdbc: 
/**/rs618.wasNull();
03-03 12:04:44 jdbc: 
/**/rs618.getLong("id4_2_");
03-03 12:04:44 jdbc: 
/**/rs618.wasNull();
03-03 12:04:44 jdbc: 
/**/rs618.getLong("id4_3_");
03-03 12:04:44 jdbc: 
/**/rs618.wasNull();
03-03 12:04:44 jdbc: 
/**/rs618.getLong("author8_1_0_");
03-03 12:04:44 jdbc: 
/**/rs618.wasNull();
03-03 12:04:44 jdbc: 
/**/rs618.getLong("contentId1_0_");
03-03 12:04:44 jdbc: 
/**/rs618.wasNull();
03-03 12:04:44 jdbc: 
/**/rs618.getString("contentR3_1_0_");
03-03 12:04:44 jdbc: 
/**/rs618.wasNull();
03-03 12:04:44 jdbc: 
/**/rs618.getTimestamp("creation4_1_0_");
03-03 12:04:44 jdbc: 
/**/rs618.wasNull();
03-03 12:04:44 jdbc: 
/**/rs618.getTimestamp("lastModi5_1_0_");
03-03 12:04:44 jdbc: 
/**/rs618.wasNull();
03-03 12:04:44 jdbc: 
/**/rs618.getString("name1_0_");
03-03 12:04:44 jdbc: 
/**/rs618.wasNull();
03-03 12:04:44 jdbc: 
/**/rs618.getLong("parent9_1_0_");
03-03 12:04:44 jdbc: 
/**/rs618.wasNull();
03-03 12:04:44 jdbc: 
/**/rs618.getBoolean("publicated1_0_");
03-03 12:04:44 jdbc: 
/**/rs618.wasNull();
03-03 12:04:44 jdbc: 
/**/rs618.getString("name4_2_");
03-03 12:04:44 jdbc: 
/**/rs618.wasNull();
03-03 12:04:44 jdbc: 
/**/rs618.getLong("parent3_4_2_");
03-03 12:04:44 jdbc: 
/**/rs618.wasNull();
03-03 12:04:44 jdbc: 
/**/rs618.getLong("contentT2_2_4_");
03-03 12:04:44 jdbc: 
/**/rs618.wasNull();
03-03 12:04:44 jdbc: 
/**/rs618.getLong("contentN1_4_");
03-03 12:04:44 jdbc: 
/**/rs618.wasNull();
03-03 12:04:44 jdbc: 
/**/rs618.next();
03-03 12:04:44 jdbc: 
/**/rs618.close();
03-03 12:04:44 jdbc: 
/**/prep617.getMaxRows();
03-03 12:04:44 jdbc: 
/**/prep617.getQueryTimeout();
03-03 12:04:44 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 196
03-03 12:04:44 jdbc: RESULT_CLOSE 253
03-03 12:04:44 jdbc: 
/**/prep617.close();
03-03 12:04:44 jdbc: COMMAND_CLOSE 251
03-03 12:04:44 jdbc: 
/**/PreparedStatement prep618 = conn51.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 12:04:44 jdbc: SESSION_PREPARE_READ_PARAMS 254
03-03 12:04:44 jdbc: 
/**/prep618.setLong(1, 57L);
03-03 12:04:44 jdbc: 
/**/ResultSet rs619 = prep618.executeQuery();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 254
03-03 12:04:44 jdbc: RESULT_CLOSE 255
03-03 12:04:44 jdbc: 
/**/rs619.next();
03-03 12:04:44 jdbc: 
/**/rs619.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs619.wasNull();
03-03 12:04:44 jdbc: 
/**/rs619.getLong("contentN1_1_1_");
03-03 12:04:44 jdbc: 
/**/rs619.wasNull();
03-03 12:04:44 jdbc: 
/**/rs619.getLong("contentT2_1_");
03-03 12:04:44 jdbc: 
/**/rs619.wasNull();
03-03 12:04:44 jdbc: 
/**/rs619.next();
03-03 12:04:44 jdbc: 
/**/rs619.close();
03-03 12:04:44 jdbc: 
/**/prep618.getMaxRows();
03-03 12:04:44 jdbc: 
/**/prep618.getQueryTimeout();
03-03 12:04:44 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 196
03-03 12:04:44 jdbc: RESULT_CLOSE 256
03-03 12:04:44 jdbc: 
/**/prep618.close();
03-03 12:04:44 jdbc: COMMAND_CLOSE 254
03-03 12:04:44 jdbc: 
/**/PreparedStatement prep619 = conn51.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 12:04:44 jdbc: SESSION_PREPARE_READ_PARAMS 257
03-03 12:04:44 jdbc: 
/**/prep619.setLong(1, 165L);
03-03 12:04:44 jdbc: 
/**/ResultSet rs620 = prep619.executeQuery();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 257
03-03 12:04:44 jdbc: RESULT_CLOSE 258
03-03 12:04:44 jdbc: 
/**/rs620.next();
03-03 12:04:44 jdbc: 
/**/rs620.getLong("id1_0_");
03-03 12:04:44 jdbc: 
/**/rs620.wasNull();
03-03 12:04:44 jdbc: 
/**/rs620.getLong("id0_1_");
03-03 12:04:44 jdbc: 
/**/rs620.wasNull();
03-03 12:04:44 jdbc: 
/**/rs620.getLong("id4_2_");
03-03 12:04:44 jdbc: 
/**/rs620.wasNull();
03-03 12:04:44 jdbc: 
/**/rs620.getLong("id4_3_");
03-03 12:04:44 jdbc: 
/**/rs620.wasNull();
03-03 12:04:44 jdbc: 
/**/rs620.getLong("contentT2_2_4_");
03-03 12:04:44 jdbc: 
/**/rs620.wasNull();
03-03 12:04:44 jdbc: 
/**/rs620.getLong("contentN1_4_");
03-03 12:04:44 jdbc: 
/**/rs620.wasNull();
03-03 12:04:44 jdbc: 
/**/rs620.next();
03-03 12:04:44 jdbc: 
/**/rs620.close();
03-03 12:04:44 jdbc: 
/**/prep619.getMaxRows();
03-03 12:04:44 jdbc: 
/**/prep619.getQueryTimeout();
03-03 12:04:44 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:44 jdbc: SESSION_PREPARE 260
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 260
03-03 12:04:44 jdbc: RESULT_CLOSE 259
03-03 12:04:44 jdbc: 
/**/prep619.close();
03-03 12:04:44 jdbc: COMMAND_CLOSE 257
03-03 12:04:44 jdbc: 
/**/PreparedStatement prep620 = conn51.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 12:04:44 jdbc: SESSION_PREPARE_READ_PARAMS 261
03-03 12:04:44 jdbc: 
/**/prep620.setLong(1, 166L);
03-03 12:04:44 jdbc: 
/**/ResultSet rs621 = prep620.executeQuery();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 261
03-03 12:04:44 jdbc: RESULT_CLOSE 262
03-03 12:04:44 jdbc: 
/**/rs621.next();
03-03 12:04:44 jdbc: 
/**/rs621.getLong("id1_0_");
03-03 12:04:44 jdbc: 
/**/rs621.wasNull();
03-03 12:04:44 jdbc: 
/**/rs621.getLong("id0_1_");
03-03 12:04:44 jdbc: 
/**/rs621.wasNull();
03-03 12:04:44 jdbc: 
/**/rs621.getLong("id4_2_");
03-03 12:04:44 jdbc: 
/**/rs621.wasNull();
03-03 12:04:44 jdbc: 
/**/rs621.getLong("id4_3_");
03-03 12:04:44 jdbc: 
/**/rs621.wasNull();
03-03 12:04:44 jdbc: 
/**/rs621.getLong("contentT2_2_4_");
03-03 12:04:44 jdbc: 
/**/rs621.wasNull();
03-03 12:04:44 jdbc: 
/**/rs621.getLong("contentN1_4_");
03-03 12:04:44 jdbc: 
/**/rs621.wasNull();
03-03 12:04:44 jdbc: 
/**/rs621.next();
03-03 12:04:44 jdbc: 
/**/rs621.close();
03-03 12:04:44 jdbc: 
/**/prep620.getMaxRows();
03-03 12:04:44 jdbc: 
/**/prep620.getQueryTimeout();
03-03 12:04:44 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 260
03-03 12:04:44 jdbc: RESULT_CLOSE 263
03-03 12:04:44 jdbc: 
/**/prep620.close();
03-03 12:04:44 jdbc: COMMAND_CLOSE 261
03-03 12:04:44 jdbc: 
/**/PreparedStatement prep621 = conn51.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 12:04:44 jdbc: SESSION_PREPARE_READ_PARAMS 264
03-03 12:04:44 jdbc: 
/**/prep621.setLong(1, 167L);
03-03 12:04:44 jdbc: 
/**/ResultSet rs622 = prep621.executeQuery();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 264
03-03 12:04:44 jdbc: RESULT_CLOSE 265
03-03 12:04:44 jdbc: 
/**/rs622.next();
03-03 12:04:44 jdbc: 
/**/rs622.getLong("id1_0_");
03-03 12:04:44 jdbc: 
/**/rs622.wasNull();
03-03 12:04:44 jdbc: 
/**/rs622.getLong("id0_1_");
03-03 12:04:44 jdbc: 
/**/rs622.wasNull();
03-03 12:04:44 jdbc: 
/**/rs622.getLong("id4_2_");
03-03 12:04:44 jdbc: 
/**/rs622.wasNull();
03-03 12:04:44 jdbc: 
/**/rs622.getLong("id4_3_");
03-03 12:04:44 jdbc: 
/**/rs622.wasNull();
03-03 12:04:44 jdbc: 
/**/rs622.getLong("author8_1_0_");
03-03 12:04:44 jdbc: 
/**/rs622.wasNull();
03-03 12:04:44 jdbc: 
/**/rs622.getLong("contentId1_0_");
03-03 12:04:44 jdbc: 
/**/rs622.wasNull();
03-03 12:04:44 jdbc: 
/**/rs622.getString("contentR3_1_0_");
03-03 12:04:44 jdbc: 
/**/rs622.wasNull();
03-03 12:04:44 jdbc: 
/**/rs622.getTimestamp("creation4_1_0_");
03-03 12:04:44 jdbc: 
/**/rs622.wasNull();
03-03 12:04:44 jdbc: 
/**/rs622.getTimestamp("lastModi5_1_0_");
03-03 12:04:44 jdbc: 
/**/rs622.wasNull();
03-03 12:04:44 jdbc: 
/**/rs622.getString("name1_0_");
03-03 12:04:44 jdbc: 
/**/rs622.wasNull();
03-03 12:04:44 jdbc: 
/**/rs622.getLong("parent9_1_0_");
03-03 12:04:44 jdbc: 
/**/rs622.wasNull();
03-03 12:04:44 jdbc: 
/**/rs622.getBoolean("publicated1_0_");
03-03 12:04:44 jdbc: 
/**/rs622.wasNull();
03-03 12:04:44 jdbc: 
/**/rs622.getString("name4_2_");
03-03 12:04:44 jdbc: 
/**/rs622.wasNull();
03-03 12:04:44 jdbc: 
/**/rs622.getLong("parent3_4_2_");
03-03 12:04:44 jdbc: 
/**/rs622.wasNull();
03-03 12:04:44 jdbc: 
/**/rs622.getLong("contentT2_2_4_");
03-03 12:04:44 jdbc: 
/**/rs622.wasNull();
03-03 12:04:44 jdbc: 
/**/rs622.getLong("contentN1_4_");
03-03 12:04:44 jdbc: 
/**/rs622.wasNull();
03-03 12:04:44 jdbc: 
/**/rs622.next();
03-03 12:04:44 jdbc: 
/**/rs622.close();
03-03 12:04:44 jdbc: 
/**/prep621.getMaxRows();
03-03 12:04:44 jdbc: 
/**/prep621.getQueryTimeout();
03-03 12:04:44 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 260
03-03 12:04:44 jdbc: RESULT_CLOSE 266
03-03 12:04:44 jdbc: 
/**/prep621.close();
03-03 12:04:44 jdbc: COMMAND_CLOSE 264
03-03 12:04:44 jdbc: 
/**/PreparedStatement prep622 = conn51.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 12:04:44 jdbc: SESSION_PREPARE_READ_PARAMS 267
03-03 12:04:44 jdbc: 
/**/prep622.setLong(1, 53L);
03-03 12:04:44 jdbc: 
/**/ResultSet rs623 = prep622.executeQuery();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 267
03-03 12:04:44 jdbc: RESULT_CLOSE 268
03-03 12:04:44 jdbc: 
/**/rs623.next();
03-03 12:04:44 jdbc: 
/**/rs623.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs623.wasNull();
03-03 12:04:44 jdbc: 
/**/rs623.getLong("contentN1_1_1_");
03-03 12:04:44 jdbc: 
/**/rs623.wasNull();
03-03 12:04:44 jdbc: 
/**/rs623.getLong("contentT2_1_");
03-03 12:04:44 jdbc: 
/**/rs623.wasNull();
03-03 12:04:44 jdbc: 
/**/rs623.next();
03-03 12:04:44 jdbc: 
/**/rs623.getLong("id2_0_");
03-03 12:04:44 jdbc: 
/**/rs623.wasNull();
03-03 12:04:44 jdbc: 
/**/rs623.getLong("contentN1_1_1_");
03-03 12:04:44 jdbc: 
/**/rs623.wasNull();
03-03 12:04:44 jdbc: 
/**/rs623.getLong("contentT2_1_");
03-03 12:04:44 jdbc: 
/**/rs623.wasNull();
03-03 12:04:44 jdbc: 
/**/rs623.next();
03-03 12:04:44 jdbc: 
/**/rs623.close();
03-03 12:04:44 jdbc: 
/**/prep622.getMaxRows();
03-03 12:04:44 jdbc: 
/**/prep622.getQueryTimeout();
03-03 12:04:44 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 260
03-03 12:04:44 jdbc: RESULT_CLOSE 269
03-03 12:04:44 jdbc: 
/**/prep622.close();
03-03 12:04:44 jdbc: COMMAND_CLOSE 267
03-03 12:04:44 jdbc: 
/**/PreparedStatement prep623 = conn51.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 12:04:44 jdbc: SESSION_PREPARE_READ_PARAMS 270
03-03 12:04:44 jdbc: 
/**/prep623.setLong(1, 168L);
03-03 12:04:44 jdbc: 
/**/ResultSet rs624 = prep623.executeQuery();
03-03 12:04:44 jdbc: COMMAND_EXECUTE_QUERY 270
03-03 12:04:44 jdbc: RESULT_CLOSE 271
03-03 12:04:44 jdbc: 
/**/rs624.next();
03-03 12:04:44 jdbc: 
/**/rs624.getLong("id1_0_");
03-03 12:04:44 jdbc: 
/**/rs624.wasNull();
03-03 12:04:44 jdbc: 
/**/rs624.getLong("id0_1_");
03-03 12:04:44 jdbc: 
/**/rs624.wasNull();
03-03 12:04:44 jdbc: 
/**/rs624.getLong("id4_2_");
03-03 12:04:44 jdbc: 
/**/rs624.wasNull();
03-03 12:04:44 jdbc: 
/**/rs624.getLong("id4_3_");
03-03 12:04:44 jdbc: 
/**/rs624.wasNull();
03-03 12:04:44 jdbc: 
/**/rs624.getLong("author8_1_0_");
03-03 12:04:44 jdbc: 
/**/rs624.wasNull();
03-03 12:04:44 jdbc: 
/**/rs624.getLong("contentId1_0_");
03-03 12:04:44 jdbc: 
/**/rs624.wasNull();
03-03 12:04:44 jdbc: 
/**/rs624.getString("contentR3_1_0_");
03-03 12:04:44 jdbc: 
/**/rs624.wasNull();
03-03 12:04:44 jdbc: 
/**/rs624.getTimestamp("creation4_1_0_");
03-03 12:04:44 jdbc: 
/**/rs624.wasNull();
03-03 12:04:44 jdbc: 
/**/rs624.getTimestamp("lastModi5_1_0_");
03-03 12:04:45 jdbc: 
/**/rs624.wasNull();
03-03 12:04:45 jdbc: 
/**/rs624.getString("name1_0_");
03-03 12:04:45 jdbc: 
/**/rs624.wasNull();
03-03 12:04:45 jdbc: 
/**/rs624.getLong("parent9_1_0_");
03-03 12:04:45 jdbc: 
/**/rs624.wasNull();
03-03 12:04:45 jdbc: 
/**/rs624.getBoolean("publicated1_0_");
03-03 12:04:45 jdbc: 
/**/rs624.wasNull();
03-03 12:04:45 jdbc: 
/**/rs624.getLong("contentT2_2_4_");
03-03 12:04:45 jdbc: 
/**/rs624.wasNull();
03-03 12:04:45 jdbc: 
/**/rs624.getLong("contentN1_4_");
03-03 12:04:45 jdbc: 
/**/rs624.wasNull();
03-03 12:04:45 jdbc: 
/**/rs624.next();
03-03 12:04:45 jdbc: 
/**/rs624.close();
03-03 12:04:45 jdbc: 
/**/prep623.getMaxRows();
03-03 12:04:45 jdbc: 
/**/prep623.getQueryTimeout();
03-03 12:04:45 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:45 jdbc: COMMAND_EXECUTE_QUERY 260
03-03 12:04:45 jdbc: RESULT_CLOSE 272
03-03 12:04:45 jdbc: 
/**/prep623.close();
03-03 12:04:45 jdbc: COMMAND_CLOSE 270
03-03 12:04:45 jdbc: 
/**/PreparedStatement prep624 = conn51.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 12:04:45 jdbc: SESSION_PREPARE_READ_PARAMS 273
03-03 12:04:45 jdbc: 
/**/prep624.setLong(1, 54L);
03-03 12:04:45 jdbc: 
/**/ResultSet rs625 = prep624.executeQuery();
03-03 12:04:45 jdbc: COMMAND_EXECUTE_QUERY 273
03-03 12:04:45 jdbc: RESULT_CLOSE 274
03-03 12:04:45 jdbc: 
/**/rs625.next();
03-03 12:04:45 jdbc: 
/**/rs625.getLong("id2_0_");
03-03 12:04:45 jdbc: 
/**/rs625.wasNull();
03-03 12:04:45 jdbc: 
/**/rs625.getLong("contentN1_1_1_");
03-03 12:04:45 jdbc: 
/**/rs625.wasNull();
03-03 12:04:45 jdbc: 
/**/rs625.getLong("contentT2_1_");
03-03 12:04:45 jdbc: 
/**/rs625.wasNull();
03-03 12:04:45 jdbc: 
/**/rs625.next();
03-03 12:04:45 jdbc: 
/**/rs625.getLong("id2_0_");
03-03 12:04:45 jdbc: 
/**/rs625.wasNull();
03-03 12:04:45 jdbc: 
/**/rs625.getLong("contentN1_1_1_");
03-03 12:04:45 jdbc: 
/**/rs625.wasNull();
03-03 12:04:45 jdbc: 
/**/rs625.getLong("contentT2_1_");
03-03 12:04:45 jdbc: 
/**/rs625.wasNull();
03-03 12:04:45 jdbc: 
/**/rs625.next();
03-03 12:04:45 jdbc: 
/**/rs625.getLong("id2_0_");
03-03 12:04:45 jdbc: 
/**/rs625.wasNull();
03-03 12:04:45 jdbc: 
/**/rs625.getLong("contentN1_1_1_");
03-03 12:04:45 jdbc: 
/**/rs625.wasNull();
03-03 12:04:45 jdbc: 
/**/rs625.getLong("contentT2_1_");
03-03 12:04:45 jdbc: 
/**/rs625.wasNull();
03-03 12:04:45 jdbc: 
/**/rs625.next();
03-03 12:04:45 jdbc: 
/**/rs625.getLong("id2_0_");
03-03 12:04:45 jdbc: 
/**/rs625.wasNull();
03-03 12:04:45 jdbc: 
/**/rs625.getLong("contentN1_1_1_");
03-03 12:04:45 jdbc: 
/**/rs625.wasNull();
03-03 12:04:45 jdbc: 
/**/rs625.getLong("contentT2_1_");
03-03 12:04:45 jdbc: 
/**/rs625.wasNull();
03-03 12:04:45 jdbc: 
/**/rs625.next();
03-03 12:04:45 jdbc: 
/**/rs625.close();
03-03 12:04:45 jdbc: 
/**/prep624.getMaxRows();
03-03 12:04:45 jdbc: 
/**/prep624.getQueryTimeout();
03-03 12:04:45 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:45 jdbc: COMMAND_EXECUTE_QUERY 260
03-03 12:04:45 jdbc: RESULT_CLOSE 275
03-03 12:04:45 jdbc: 
/**/prep624.close();
03-03 12:04:45 jdbc: COMMAND_CLOSE 273
03-03 12:04:45 jdbc: 
/**/PreparedStatement prep625 = conn51.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 12:04:45 jdbc: SESSION_PREPARE_READ_PARAMS 276
03-03 12:04:45 jdbc: 
/**/prep625.setLong(1, 169L);
03-03 12:04:45 jdbc: 
/**/ResultSet rs626 = prep625.executeQuery();
03-03 12:04:45 jdbc: COMMAND_EXECUTE_QUERY 276
03-03 12:04:45 jdbc: RESULT_CLOSE 277
03-03 12:04:45 jdbc: 
/**/rs626.next();
03-03 12:04:45 jdbc: 
/**/rs626.getLong("id1_0_");
03-03 12:04:45 jdbc: 
/**/rs626.wasNull();
03-03 12:04:45 jdbc: 
/**/rs626.getLong("id0_1_");
03-03 12:04:45 jdbc: 
/**/rs626.wasNull();
03-03 12:04:45 jdbc: 
/**/rs626.getLong("id4_2_");
03-03 12:04:45 jdbc: 
/**/rs626.wasNull();
03-03 12:04:45 jdbc: 
/**/rs626.getLong("id4_3_");
03-03 12:04:45 jdbc: 
/**/rs626.wasNull();
03-03 12:04:45 jdbc: 
/**/rs626.getLong("contentT2_2_4_");
03-03 12:04:45 jdbc: 
/**/rs626.wasNull();
03-03 12:04:45 jdbc: 
/**/rs626.getLong("contentN1_4_");
03-03 12:04:45 jdbc: 
/**/rs626.wasNull();
03-03 12:04:45 jdbc: 
/**/rs626.next();
03-03 12:04:45 jdbc: 
/**/rs626.close();
03-03 12:04:45 jdbc: 
/**/prep625.getMaxRows();
03-03 12:04:45 jdbc: 
/**/prep625.getQueryTimeout();
03-03 12:04:45 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:45 jdbc: COMMAND_EXECUTE_QUERY 260
03-03 12:04:45 jdbc: RESULT_CLOSE 278
03-03 12:04:45 jdbc: 
/**/prep625.close();
03-03 12:04:45 jdbc: COMMAND_CLOSE 276
03-03 12:04:45 jdbc: 
/**/PreparedStatement prep626 = conn51.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 12:04:45 jdbc: SESSION_PREPARE_READ_PARAMS 279
03-03 12:04:45 jdbc: 
/**/prep626.setLong(1, 170L);
03-03 12:04:45 jdbc: 
/**/ResultSet rs627 = prep626.executeQuery();
03-03 12:04:45 jdbc: COMMAND_EXECUTE_QUERY 279
03-03 12:04:45 jdbc: RESULT_CLOSE 280
03-03 12:04:45 jdbc: 
/**/rs627.next();
03-03 12:04:45 jdbc: 
/**/rs627.getLong("id1_0_");
03-03 12:04:45 jdbc: 
/**/rs627.wasNull();
03-03 12:04:45 jdbc: 
/**/rs627.getLong("id0_1_");
03-03 12:04:45 jdbc: 
/**/rs627.wasNull();
03-03 12:04:45 jdbc: 
/**/rs627.getLong("id4_2_");
03-03 12:04:45 jdbc: 
/**/rs627.wasNull();
03-03 12:04:45 jdbc: 
/**/rs627.getLong("id4_3_");
03-03 12:04:45 jdbc: 
/**/rs627.wasNull();
03-03 12:04:45 jdbc: 
/**/rs627.getLong("contentT2_2_4_");
03-03 12:04:45 jdbc: 
/**/rs627.wasNull();
03-03 12:04:45 jdbc: 
/**/rs627.getLong("contentN1_4_");
03-03 12:04:45 jdbc: 
/**/rs627.wasNull();
03-03 12:04:45 jdbc: 
/**/rs627.next();
03-03 12:04:45 jdbc: 
/**/rs627.close();
03-03 12:04:45 jdbc: 
/**/prep626.getMaxRows();
03-03 12:04:45 jdbc: 
/**/prep626.getQueryTimeout();
03-03 12:04:45 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:45 jdbc: COMMAND_EXECUTE_QUERY 260
03-03 12:04:45 jdbc: RESULT_CLOSE 281
03-03 12:04:45 jdbc: 
/**/prep626.close();
03-03 12:04:45 jdbc: COMMAND_CLOSE 279
03-03 12:04:45 jdbc: 
/**/PreparedStatement prep627 = conn51.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 12:04:45 jdbc: SESSION_PREPARE_READ_PARAMS 282
03-03 12:04:45 jdbc: 
/**/prep627.setLong(1, 178L);
03-03 12:04:45 jdbc: 
/**/ResultSet rs628 = prep627.executeQuery();
03-03 12:04:45 jdbc: COMMAND_EXECUTE_QUERY 282
03-03 12:04:45 jdbc: RESULT_CLOSE 283
03-03 12:04:45 jdbc: 
/**/rs628.next();
03-03 12:04:45 jdbc: 
/**/rs628.getLong("id1_0_");
03-03 12:04:45 jdbc: 
/**/rs628.wasNull();
03-03 12:04:45 jdbc: 
/**/rs628.getLong("id0_1_");
03-03 12:04:45 jdbc: 
/**/rs628.wasNull();
03-03 12:04:45 jdbc: 
/**/rs628.getLong("id4_2_");
03-03 12:04:45 jdbc: 
/**/rs628.wasNull();
03-03 12:04:45 jdbc: 
/**/rs628.getLong("id4_3_");
03-03 12:04:45 jdbc: 
/**/rs628.wasNull();
03-03 12:04:45 jdbc: 
/**/rs628.getLong("author8_1_0_");
03-03 12:04:45 jdbc: 
/**/rs628.wasNull();
03-03 12:04:45 jdbc: 
/**/rs628.getLong("contentId1_0_");
03-03 12:04:45 jdbc: 
/**/rs628.wasNull();
03-03 12:04:45 jdbc: 
/**/rs628.getString("contentR3_1_0_");
03-03 12:04:45 jdbc: 
/**/rs628.wasNull();
03-03 12:04:45 jdbc: 
/**/rs628.getTimestamp("creation4_1_0_");
03-03 12:04:45 jdbc: 
/**/rs628.wasNull();
03-03 12:04:45 jdbc: 
/**/rs628.getTimestamp("lastModi5_1_0_");
03-03 12:04:45 jdbc: 
/**/rs628.wasNull();
03-03 12:04:45 jdbc: 
/**/rs628.getString("name1_0_");
03-03 12:04:45 jdbc: 
/**/rs628.wasNull();
03-03 12:04:45 jdbc: 
/**/rs628.getLong("parent9_1_0_");
03-03 12:04:45 jdbc: 
/**/rs628.wasNull();
03-03 12:04:45 jdbc: 
/**/rs628.getBoolean("publicated1_0_");
03-03 12:04:45 jdbc: 
/**/rs628.wasNull();
03-03 12:04:45 jdbc: 
/**/rs628.getLong("contentT2_2_4_");
03-03 12:04:45 jdbc: 
/**/rs628.wasNull();
03-03 12:04:45 jdbc: 
/**/rs628.getLong("contentN1_4_");
03-03 12:04:45 jdbc: 
/**/rs628.wasNull();
03-03 12:04:45 jdbc: 
/**/rs628.next();
03-03 12:04:45 jdbc: 
/**/rs628.close();
03-03 12:04:45 jdbc: 
/**/prep627.getMaxRows();
03-03 12:04:45 jdbc: 
/**/prep627.getQueryTimeout();
03-03 12:04:45 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:45 jdbc: COMMAND_EXECUTE_QUERY 260
03-03 12:04:45 jdbc: RESULT_CLOSE 284
03-03 12:04:45 jdbc: 
/**/prep627.close();
03-03 12:04:45 jdbc: COMMAND_CLOSE 282
03-03 12:04:45 jdbc: 
/**/PreparedStatement prep628 = conn51.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 12:04:45 jdbc: SESSION_PREPARE_READ_PARAMS 285
03-03 12:04:45 jdbc: 
/**/prep628.setLong(1, 65L);
03-03 12:04:45 jdbc: 
/**/ResultSet rs629 = prep628.executeQuery();
03-03 12:04:45 jdbc: COMMAND_EXECUTE_QUERY 285
03-03 12:04:45 jdbc: RESULT_CLOSE 286
03-03 12:04:45 jdbc: 
/**/rs629.next();
03-03 12:04:45 jdbc: 
/**/rs629.getLong("id2_0_");
03-03 12:04:45 jdbc: 
/**/rs629.wasNull();
03-03 12:04:45 jdbc: 
/**/rs629.getLong("contentN1_1_1_");
03-03 12:04:45 jdbc: 
/**/rs629.wasNull();
03-03 12:04:45 jdbc: 
/**/rs629.getLong("contentT2_1_");
03-03 12:04:45 jdbc: 
/**/rs629.wasNull();
03-03 12:04:45 jdbc: 
/**/rs629.next();
03-03 12:04:45 jdbc: 
/**/rs629.close();
03-03 12:04:45 jdbc: 
/**/prep628.getMaxRows();
03-03 12:04:45 jdbc: 
/**/prep628.getQueryTimeout();
03-03 12:04:45 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:45 jdbc: COMMAND_EXECUTE_QUERY 260
03-03 12:04:45 jdbc: RESULT_CLOSE 287
03-03 12:04:45 jdbc: 
/**/prep628.close();
03-03 12:04:45 jdbc: COMMAND_CLOSE 285
03-03 12:04:45 jdbc: 
/**/PreparedStatement prep629 = conn51.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 12:04:45 jdbc: SESSION_PREPARE_READ_PARAMS 288
03-03 12:04:45 jdbc: 
/**/prep629.setLong(1, 180L);
03-03 12:04:45 jdbc: 
/**/ResultSet rs630 = prep629.executeQuery();
03-03 12:04:45 jdbc: COMMAND_EXECUTE_QUERY 288
03-03 12:04:45 jdbc: RESULT_CLOSE 289
03-03 12:04:45 jdbc: 
/**/rs630.next();
03-03 12:04:45 jdbc: 
/**/rs630.getLong("id1_0_");
03-03 12:04:45 jdbc: 
/**/rs630.wasNull();
03-03 12:04:45 jdbc: 
/**/rs630.getLong("id0_1_");
03-03 12:04:45 jdbc: 
/**/rs630.wasNull();
03-03 12:04:45 jdbc: 
/**/rs630.getLong("id4_2_");
03-03 12:04:45 jdbc: 
/**/rs630.wasNull();
03-03 12:04:45 jdbc: 
/**/rs630.getLong("id4_3_");
03-03 12:04:45 jdbc: 
/**/rs630.wasNull();
03-03 12:04:45 jdbc: 
/**/rs630.getLong("author8_1_0_");
03-03 12:04:45 jdbc: 
/**/rs630.wasNull();
03-03 12:04:45 jdbc: 
/**/rs630.getLong("contentId1_0_");
03-03 12:04:45 jdbc: 
/**/rs630.wasNull();
03-03 12:04:45 jdbc: 
/**/rs630.getString("contentR3_1_0_");
03-03 12:04:45 jdbc: 
/**/rs630.wasNull();
03-03 12:04:45 jdbc: 
/**/rs630.getTimestamp("creation4_1_0_");
03-03 12:04:45 jdbc: 
/**/rs630.wasNull();
03-03 12:04:45 jdbc: 
/**/rs630.getTimestamp("lastModi5_1_0_");
03-03 12:04:45 jdbc: 
/**/rs630.wasNull();
03-03 12:04:45 jdbc: 
/**/rs630.getString("name1_0_");
03-03 12:04:45 jdbc: 
/**/rs630.wasNull();
03-03 12:04:45 jdbc: 
/**/rs630.getLong("parent9_1_0_");
03-03 12:04:45 jdbc: 
/**/rs630.wasNull();
03-03 12:04:45 jdbc: 
/**/rs630.getBoolean("publicated1_0_");
03-03 12:04:45 jdbc: 
/**/rs630.wasNull();
03-03 12:04:45 jdbc: 
/**/rs630.getString("name4_2_");
03-03 12:04:45 jdbc: 
/**/rs630.wasNull();
03-03 12:04:45 jdbc: 
/**/rs630.getLong("parent3_4_2_");
03-03 12:04:45 jdbc: 
/**/rs630.wasNull();
03-03 12:04:45 jdbc: 
/**/rs630.getLong("contentT2_2_4_");
03-03 12:04:45 jdbc: 
/**/rs630.wasNull();
03-03 12:04:45 jdbc: 
/**/rs630.getLong("contentN1_4_");
03-03 12:04:45 jdbc: 
/**/rs630.wasNull();
03-03 12:04:45 jdbc: 
/**/rs630.next();
03-03 12:04:45 jdbc: 
/**/rs630.close();
03-03 12:04:45 jdbc: 
/**/prep629.getMaxRows();
03-03 12:04:45 jdbc: 
/**/prep629.getQueryTimeout();
03-03 12:04:45 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:45 jdbc: COMMAND_EXECUTE_QUERY 260
03-03 12:04:45 jdbc: RESULT_CLOSE 290
03-03 12:04:45 jdbc: 
/**/prep629.close();
03-03 12:04:45 jdbc: COMMAND_CLOSE 288
03-03 12:04:45 jdbc: 
/**/PreparedStatement prep630 = conn51.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 12:04:45 jdbc: SESSION_PREPARE_READ_PARAMS 291
03-03 12:04:45 jdbc: 
/**/prep630.setLong(1, 66L);
03-03 12:04:45 jdbc: 
/**/ResultSet rs631 = prep630.executeQuery();
03-03 12:04:45 jdbc: COMMAND_EXECUTE_QUERY 291
03-03 12:04:45 jdbc: RESULT_CLOSE 292
03-03 12:04:45 jdbc: 
/**/rs631.next();
03-03 12:04:45 jdbc: 
/**/rs631.getLong("id2_0_");
03-03 12:04:45 jdbc: 
/**/rs631.wasNull();
03-03 12:04:45 jdbc: 
/**/rs631.getLong("contentN1_1_1_");
03-03 12:04:45 jdbc: 
/**/rs631.wasNull();
03-03 12:04:45 jdbc: 
/**/rs631.getLong("contentT2_1_");
03-03 12:04:45 jdbc: 
/**/rs631.wasNull();
03-03 12:04:45 jdbc: 
/**/rs631.next();
03-03 12:04:45 jdbc: 
/**/rs631.close();
03-03 12:04:45 jdbc: 
/**/prep630.getMaxRows();
03-03 12:04:45 jdbc: 
/**/prep630.getQueryTimeout();
03-03 12:04:45 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:45 jdbc: COMMAND_EXECUTE_QUERY 260
03-03 12:04:45 jdbc: RESULT_CLOSE 293
03-03 12:04:45 jdbc: 
/**/prep630.close();
03-03 12:04:45 jdbc: COMMAND_CLOSE 291
03-03 12:04:45 jdbc: 
/**/PreparedStatement prep631 = conn51.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 12:04:45 jdbc: SESSION_PREPARE_READ_PARAMS 294
03-03 12:04:45 jdbc: 
/**/prep631.setLong(1, 182L);
03-03 12:04:45 jdbc: 
/**/ResultSet rs632 = prep631.executeQuery();
03-03 12:04:45 jdbc: COMMAND_EXECUTE_QUERY 294
03-03 12:04:45 jdbc: RESULT_CLOSE 295
03-03 12:04:45 jdbc: 
/**/rs632.next();
03-03 12:04:45 jdbc: 
/**/rs632.getLong("id1_0_");
03-03 12:04:45 jdbc: 
/**/rs632.wasNull();
03-03 12:04:45 jdbc: 
/**/rs632.getLong("id0_1_");
03-03 12:04:45 jdbc: 
/**/rs632.wasNull();
03-03 12:04:45 jdbc: 
/**/rs632.getLong("id4_2_");
03-03 12:04:45 jdbc: 
/**/rs632.wasNull();
03-03 12:04:45 jdbc: 
/**/rs632.getLong("id4_3_");
03-03 12:04:45 jdbc: 
/**/rs632.wasNull();
03-03 12:04:45 jdbc: 
/**/rs632.getLong("author8_1_0_");
03-03 12:04:45 jdbc: 
/**/rs632.wasNull();
03-03 12:04:45 jdbc: 
/**/rs632.getLong("contentId1_0_");
03-03 12:04:45 jdbc: 
/**/rs632.wasNull();
03-03 12:04:45 jdbc: 
/**/rs632.getString("contentR3_1_0_");
03-03 12:04:45 jdbc: 
/**/rs632.wasNull();
03-03 12:04:45 jdbc: 
/**/rs632.getTimestamp("creation4_1_0_");
03-03 12:04:45 jdbc: 
/**/rs632.wasNull();
03-03 12:04:45 jdbc: 
/**/rs632.getTimestamp("lastModi5_1_0_");
03-03 12:04:45 jdbc: 
/**/rs632.wasNull();
03-03 12:04:45 jdbc: 
/**/rs632.getString("name1_0_");
03-03 12:04:45 jdbc: 
/**/rs632.wasNull();
03-03 12:04:45 jdbc: 
/**/rs632.getLong("parent9_1_0_");
03-03 12:04:45 jdbc: 
/**/rs632.wasNull();
03-03 12:04:45 jdbc: 
/**/rs632.getBoolean("publicated1_0_");
03-03 12:04:45 jdbc: 
/**/rs632.wasNull();
03-03 12:04:45 jdbc: 
/**/rs632.getLong("contentT2_2_4_");
03-03 12:04:45 jdbc: 
/**/rs632.wasNull();
03-03 12:04:45 jdbc: 
/**/rs632.getLong("contentN1_4_");
03-03 12:04:45 jdbc: 
/**/rs632.wasNull();
03-03 12:04:45 jdbc: 
/**/rs632.next();
03-03 12:04:45 jdbc: 
/**/rs632.getLong("id1_0_");
03-03 12:04:45 jdbc: 
/**/rs632.wasNull();
03-03 12:04:45 jdbc: 
/**/rs632.getLong("id0_1_");
03-03 12:04:45 jdbc: 
/**/rs632.wasNull();
03-03 12:04:45 jdbc: 
/**/rs632.getLong("id4_2_");
03-03 12:04:45 jdbc: 
/**/rs632.wasNull();
03-03 12:04:45 jdbc: 
/**/rs632.getLong("id4_3_");
03-03 12:04:45 jdbc: 
/**/rs632.wasNull();
03-03 12:04:45 jdbc: 
/**/rs632.getLong("author8_1_0_");
03-03 12:04:45 jdbc: 
/**/rs632.wasNull();
03-03 12:04:45 jdbc: 
/**/rs632.getLong("contentId1_0_");
03-03 12:04:45 jdbc: 
/**/rs632.wasNull();
03-03 12:04:45 jdbc: 
/**/rs632.getString("contentR3_1_0_");
03-03 12:04:45 jdbc: 
/**/rs632.wasNull();
03-03 12:04:45 jdbc: 
/**/rs632.getTimestamp("creation4_1_0_");
03-03 12:04:45 jdbc: 
/**/rs632.wasNull();
03-03 12:04:45 jdbc: 
/**/rs632.getTimestamp("lastModi5_1_0_");
03-03 12:04:45 jdbc: 
/**/rs632.wasNull();
03-03 12:04:45 jdbc: 
/**/rs632.getString("name1_0_");
03-03 12:04:45 jdbc: 
/**/rs632.wasNull();
03-03 12:04:45 jdbc: 
/**/rs632.getLong("parent9_1_0_");
03-03 12:04:45 jdbc: 
/**/rs632.wasNull();
03-03 12:04:45 jdbc: 
/**/rs632.getBoolean("publicated1_0_");
03-03 12:04:45 jdbc: 
/**/rs632.wasNull();
03-03 12:04:45 jdbc: 
/**/rs632.getLong("contentT2_2_4_");
03-03 12:04:45 jdbc: 
/**/rs632.wasNull();
03-03 12:04:45 jdbc: 
/**/rs632.getLong("contentN1_4_");
03-03 12:04:45 jdbc: 
/**/rs632.wasNull();
03-03 12:04:45 jdbc: 
/**/rs632.next();
03-03 12:04:45 jdbc: 
/**/rs632.close();
03-03 12:04:45 jdbc: 
/**/prep631.getMaxRows();
03-03 12:04:45 jdbc: 
/**/prep631.getQueryTimeout();
03-03 12:04:45 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:45 jdbc: COMMAND_EXECUTE_QUERY 260
03-03 12:04:45 jdbc: RESULT_CLOSE 296
03-03 12:04:45 jdbc: 
/**/prep631.close();
03-03 12:04:45 jdbc: COMMAND_CLOSE 294
03-03 12:04:45 jdbc: 
/**/PreparedStatement prep632 = conn51.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 12:04:45 jdbc: SESSION_PREPARE_READ_PARAMS 297
03-03 12:04:45 jdbc: 
/**/prep632.setLong(1, 68L);
03-03 12:04:45 jdbc: 
/**/ResultSet rs633 = prep632.executeQuery();
03-03 12:04:45 jdbc: COMMAND_EXECUTE_QUERY 297
03-03 12:04:45 jdbc: RESULT_CLOSE 298
03-03 12:04:45 jdbc: 
/**/rs633.next();
03-03 12:04:45 jdbc: 
/**/rs633.getLong("id2_0_");
03-03 12:04:45 jdbc: 
/**/rs633.wasNull();
03-03 12:04:45 jdbc: 
/**/rs633.getLong("contentN1_1_1_");
03-03 12:04:45 jdbc: 
/**/rs633.wasNull();
03-03 12:04:45 jdbc: 
/**/rs633.getLong("contentT2_1_");
03-03 12:04:45 jdbc: 
/**/rs633.wasNull();
03-03 12:04:45 jdbc: 
/**/rs633.next();
03-03 12:04:45 jdbc: 
/**/rs633.getLong("id2_0_");
03-03 12:04:45 jdbc: 
/**/rs633.wasNull();
03-03 12:04:45 jdbc: 
/**/rs633.getLong("contentN1_1_1_");
03-03 12:04:45 jdbc: 
/**/rs633.wasNull();
03-03 12:04:45 jdbc: 
/**/rs633.getLong("contentT2_1_");
03-03 12:04:45 jdbc: 
/**/rs633.wasNull();
03-03 12:04:45 jdbc: 
/**/rs633.next();
03-03 12:04:45 jdbc: 
/**/rs633.close();
03-03 12:04:45 jdbc: 
/**/prep632.getMaxRows();
03-03 12:04:45 jdbc: 
/**/prep632.getQueryTimeout();
03-03 12:04:45 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:45 jdbc: COMMAND_EXECUTE_QUERY 260
03-03 12:04:45 jdbc: RESULT_CLOSE 299
03-03 12:04:45 jdbc: 
/**/prep632.close();
03-03 12:04:45 jdbc: COMMAND_CLOSE 297
03-03 12:04:45 jdbc: 
/**/PreparedStatement prep633 = conn51.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 12:04:45 jdbc: SESSION_PREPARE_READ_PARAMS 300
03-03 12:04:45 jdbc: 
/**/prep633.setLong(1, 67L);
03-03 12:04:45 jdbc: 
/**/ResultSet rs634 = prep633.executeQuery();
03-03 12:04:45 jdbc: COMMAND_EXECUTE_QUERY 300
03-03 12:04:45 jdbc: RESULT_CLOSE 301
03-03 12:04:45 jdbc: 
/**/rs634.next();
03-03 12:04:45 jdbc: 
/**/rs634.getLong("id2_0_");
03-03 12:04:45 jdbc: 
/**/rs634.wasNull();
03-03 12:04:45 jdbc: 
/**/rs634.getLong("contentN1_1_1_");
03-03 12:04:45 jdbc: 
/**/rs634.wasNull();
03-03 12:04:45 jdbc: 
/**/rs634.getLong("contentT2_1_");
03-03 12:04:45 jdbc: 
/**/rs634.wasNull();
03-03 12:04:45 jdbc: 
/**/rs634.next();
03-03 12:04:45 jdbc: 
/**/rs634.getLong("id2_0_");
03-03 12:04:45 jdbc: 
/**/rs634.wasNull();
03-03 12:04:45 jdbc: 
/**/rs634.getLong("contentN1_1_1_");
03-03 12:04:45 jdbc: 
/**/rs634.wasNull();
03-03 12:04:45 jdbc: 
/**/rs634.getLong("contentT2_1_");
03-03 12:04:45 jdbc: 
/**/rs634.wasNull();
03-03 12:04:45 jdbc: 
/**/rs634.next();
03-03 12:04:45 jdbc: 
/**/rs634.close();
03-03 12:04:45 jdbc: 
/**/prep633.getMaxRows();
03-03 12:04:45 jdbc: 
/**/prep633.getQueryTimeout();
03-03 12:04:45 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:45 jdbc: COMMAND_EXECUTE_QUERY 260
03-03 12:04:45 jdbc: RESULT_CLOSE 302
03-03 12:04:45 jdbc: 
/**/prep633.close();
03-03 12:04:45 jdbc: COMMAND_CLOSE 300
03-03 12:04:45 jdbc: 
/**/PreparedStatement prep634 = conn51.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 12:04:45 jdbc: SESSION_PREPARE_READ_PARAMS 303
03-03 12:04:45 jdbc: 
/**/prep634.setLong(1, 183L);
03-03 12:04:45 jdbc: 
/**/ResultSet rs635 = prep634.executeQuery();
03-03 12:04:45 jdbc: COMMAND_EXECUTE_QUERY 303
03-03 12:04:45 jdbc: RESULT_CLOSE 304
03-03 12:04:45 jdbc: 
/**/rs635.next();
03-03 12:04:45 jdbc: 
/**/rs635.getLong("id1_0_");
03-03 12:04:45 jdbc: 
/**/rs635.wasNull();
03-03 12:04:45 jdbc: 
/**/rs635.getLong("id0_1_");
03-03 12:04:45 jdbc: 
/**/rs635.wasNull();
03-03 12:04:45 jdbc: 
/**/rs635.getLong("id4_2_");
03-03 12:04:45 jdbc: 
/**/rs635.wasNull();
03-03 12:04:45 jdbc: 
/**/rs635.getLong("id4_3_");
03-03 12:04:45 jdbc: 
/**/rs635.wasNull();
03-03 12:04:45 jdbc: 
/**/rs635.getLong("contentT2_2_4_");
03-03 12:04:45 jdbc: 
/**/rs635.wasNull();
03-03 12:04:45 jdbc: 
/**/rs635.getLong("contentN1_4_");
03-03 12:04:45 jdbc: 
/**/rs635.wasNull();
03-03 12:04:45 jdbc: 
/**/rs635.next();
03-03 12:04:45 jdbc: 
/**/rs635.getLong("id1_0_");
03-03 12:04:45 jdbc: 
/**/rs635.wasNull();
03-03 12:04:45 jdbc: 
/**/rs635.getLong("id0_1_");
03-03 12:04:45 jdbc: 
/**/rs635.wasNull();
03-03 12:04:45 jdbc: 
/**/rs635.getLong("id4_2_");
03-03 12:04:45 jdbc: 
/**/rs635.wasNull();
03-03 12:04:45 jdbc: 
/**/rs635.getLong("id4_3_");
03-03 12:04:45 jdbc: 
/**/rs635.wasNull();
03-03 12:04:45 jdbc: 
/**/rs635.getLong("contentT2_2_4_");
03-03 12:04:45 jdbc: 
/**/rs635.wasNull();
03-03 12:04:45 jdbc: 
/**/rs635.getLong("contentN1_4_");
03-03 12:04:45 jdbc: 
/**/rs635.wasNull();
03-03 12:04:45 jdbc: 
/**/rs635.next();
03-03 12:04:45 jdbc: 
/**/rs635.getLong("id1_0_");
03-03 12:04:45 jdbc: 
/**/rs635.wasNull();
03-03 12:04:45 jdbc: 
/**/rs635.getLong("id0_1_");
03-03 12:04:45 jdbc: 
/**/rs635.wasNull();
03-03 12:04:45 jdbc: 
/**/rs635.getLong("id4_2_");
03-03 12:04:45 jdbc: 
/**/rs635.wasNull();
03-03 12:04:45 jdbc: 
/**/rs635.getLong("id4_3_");
03-03 12:04:45 jdbc: 
/**/rs635.wasNull();
03-03 12:04:45 jdbc: 
/**/rs635.getLong("author8_1_0_");
03-03 12:04:45 jdbc: 
/**/rs635.wasNull();
03-03 12:04:45 jdbc: 
/**/rs635.getLong("contentId1_0_");
03-03 12:04:45 jdbc: 
/**/rs635.wasNull();
03-03 12:04:45 jdbc: 
/**/rs635.getString("contentR3_1_0_");
03-03 12:04:45 jdbc: 
/**/rs635.wasNull();
03-03 12:04:45 jdbc: 
/**/rs635.getTimestamp("creation4_1_0_");
03-03 12:04:45 jdbc: 
/**/rs635.wasNull();
03-03 12:04:45 jdbc: 
/**/rs635.getTimestamp("lastModi5_1_0_");
03-03 12:04:45 jdbc: 
/**/rs635.wasNull();
03-03 12:04:45 jdbc: 
/**/rs635.getString("name1_0_");
03-03 12:04:45 jdbc: 
/**/rs635.wasNull();
03-03 12:04:45 jdbc: 
/**/rs635.getLong("parent9_1_0_");
03-03 12:04:45 jdbc: 
/**/rs635.wasNull();
03-03 12:04:45 jdbc: 
/**/rs635.getBoolean("publicated1_0_");
03-03 12:04:45 jdbc: 
/**/rs635.wasNull();
03-03 12:04:45 jdbc: 
/**/rs635.getLong("contentT2_2_4_");
03-03 12:04:45 jdbc: 
/**/rs635.wasNull();
03-03 12:04:45 jdbc: 
/**/rs635.getLong("contentN1_4_");
03-03 12:04:45 jdbc: 
/**/rs635.wasNull();
03-03 12:04:45 jdbc: 
/**/rs635.next();
03-03 12:04:45 jdbc: 
/**/rs635.getLong("id1_0_");
03-03 12:04:45 jdbc: 
/**/rs635.wasNull();
03-03 12:04:45 jdbc: 
/**/rs635.getLong("id0_1_");
03-03 12:04:45 jdbc: 
/**/rs635.wasNull();
03-03 12:04:45 jdbc: 
/**/rs635.getLong("id4_2_");
03-03 12:04:45 jdbc: 
/**/rs635.wasNull();
03-03 12:04:45 jdbc: 
/**/rs635.getLong("id4_3_");
03-03 12:04:45 jdbc: 
/**/rs635.wasNull();
03-03 12:04:45 jdbc: 
/**/rs635.getLong("contentT2_2_4_");
03-03 12:04:45 jdbc: 
/**/rs635.wasNull();
03-03 12:04:45 jdbc: 
/**/rs635.getLong("contentN1_4_");
03-03 12:04:45 jdbc: 
/**/rs635.wasNull();
03-03 12:04:45 jdbc: 
/**/rs635.next();
03-03 12:04:45 jdbc: 
/**/rs635.getLong("id1_0_");
03-03 12:04:45 jdbc: 
/**/rs635.wasNull();
03-03 12:04:45 jdbc: 
/**/rs635.getLong("id0_1_");
03-03 12:04:45 jdbc: 
/**/rs635.wasNull();
03-03 12:04:45 jdbc: 
/**/rs635.getLong("id4_2_");
03-03 12:04:45 jdbc: 
/**/rs635.wasNull();
03-03 12:04:45 jdbc: 
/**/rs635.getLong("id4_3_");
03-03 12:04:45 jdbc: 
/**/rs635.wasNull();
03-03 12:04:45 jdbc: 
/**/rs635.getLong("author8_1_0_");
03-03 12:04:45 jdbc: 
/**/rs635.wasNull();
03-03 12:04:45 jdbc: 
/**/rs635.getLong("contentId1_0_");
03-03 12:04:45 jdbc: 
/**/rs635.wasNull();
03-03 12:04:45 jdbc: 
/**/rs635.getString("contentR3_1_0_");
03-03 12:04:45 jdbc: 
/**/rs635.wasNull();
03-03 12:04:45 jdbc: 
/**/rs635.getTimestamp("creation4_1_0_");
03-03 12:04:45 jdbc: 
/**/rs635.wasNull();
03-03 12:04:45 jdbc: 
/**/rs635.getTimestamp("lastModi5_1_0_");
03-03 12:04:45 jdbc: 
/**/rs635.wasNull();
03-03 12:04:45 jdbc: 
/**/rs635.getString("name1_0_");
03-03 12:04:45 jdbc: 
/**/rs635.wasNull();
03-03 12:04:45 jdbc: 
/**/rs635.getLong("parent9_1_0_");
03-03 12:04:45 jdbc: 
/**/rs635.wasNull();
03-03 12:04:45 jdbc: 
/**/rs635.getBoolean("publicated1_0_");
03-03 12:04:45 jdbc: 
/**/rs635.wasNull();
03-03 12:04:45 jdbc: 
/**/rs635.getLong("contentT2_2_4_");
03-03 12:04:45 jdbc: 
/**/rs635.wasNull();
03-03 12:04:45 jdbc: 
/**/rs635.getLong("contentN1_4_");
03-03 12:04:45 jdbc: 
/**/rs635.wasNull();
03-03 12:04:45 jdbc: 
/**/rs635.next();
03-03 12:04:45 jdbc: 
/**/rs635.getLong("id1_0_");
03-03 12:04:45 jdbc: 
/**/rs635.wasNull();
03-03 12:04:45 jdbc: 
/**/rs635.getLong("id0_1_");
03-03 12:04:45 jdbc: 
/**/rs635.wasNull();
03-03 12:04:45 jdbc: 
/**/rs635.getLong("id4_2_");
03-03 12:04:45 jdbc: 
/**/rs635.wasNull();
03-03 12:04:45 jdbc: 
/**/rs635.getLong("id4_3_");
03-03 12:04:45 jdbc: 
/**/rs635.wasNull();
03-03 12:04:45 jdbc: 
/**/rs635.getLong("contentT2_2_4_");
03-03 12:04:45 jdbc: 
/**/rs635.wasNull();
03-03 12:04:45 jdbc: 
/**/rs635.getLong("contentN1_4_");
03-03 12:04:45 jdbc: 
/**/rs635.wasNull();
03-03 12:04:45 jdbc: 
/**/rs635.next();
03-03 12:04:45 jdbc: 
/**/rs635.getLong("id1_0_");
03-03 12:04:45 jdbc: 
/**/rs635.wasNull();
03-03 12:04:45 jdbc: 
/**/rs635.getLong("id0_1_");
03-03 12:04:45 jdbc: 
/**/rs635.wasNull();
03-03 12:04:45 jdbc: 
/**/rs635.getLong("id4_2_");
03-03 12:04:45 jdbc: 
/**/rs635.wasNull();
03-03 12:04:45 jdbc: 
/**/rs635.getLong("id4_3_");
03-03 12:04:45 jdbc: 
/**/rs635.wasNull();
03-03 12:04:45 jdbc: 
/**/rs635.getLong("contentT2_2_4_");
03-03 12:04:45 jdbc: 
/**/rs635.wasNull();
03-03 12:04:45 jdbc: 
/**/rs635.getLong("contentN1_4_");
03-03 12:04:45 jdbc: 
/**/rs635.wasNull();
03-03 12:04:45 jdbc: 
/**/rs635.next();
03-03 12:04:45 jdbc: 
/**/rs635.close();
03-03 12:04:45 jdbc: 
/**/prep634.getMaxRows();
03-03 12:04:45 jdbc: 
/**/prep634.getQueryTimeout();
03-03 12:04:45 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:45 jdbc: COMMAND_EXECUTE_QUERY 260
03-03 12:04:45 jdbc: RESULT_CLOSE 305
03-03 12:04:45 jdbc: 
/**/prep634.close();
03-03 12:04:45 jdbc: COMMAND_CLOSE 303
03-03 12:04:45 jdbc: 
/**/PreparedStatement prep635 = conn51.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 12:04:45 jdbc: SESSION_PREPARE_READ_PARAMS 306
03-03 12:04:45 jdbc: 
/**/prep635.setLong(1, 55L);
03-03 12:04:45 jdbc: 
/**/ResultSet rs636 = prep635.executeQuery();
03-03 12:04:45 jdbc: COMMAND_EXECUTE_QUERY 306
03-03 12:04:45 jdbc: RESULT_CLOSE 307
03-03 12:04:45 jdbc: 
/**/rs636.next();
03-03 12:04:45 jdbc: 
/**/rs636.getLong("id2_0_");
03-03 12:04:45 jdbc: 
/**/rs636.wasNull();
03-03 12:04:45 jdbc: 
/**/rs636.getLong("contentN1_1_1_");
03-03 12:04:45 jdbc: 
/**/rs636.wasNull();
03-03 12:04:45 jdbc: 
/**/rs636.getLong("contentT2_1_");
03-03 12:04:45 jdbc: 
/**/rs636.wasNull();
03-03 12:04:45 jdbc: 
/**/rs636.next();
03-03 12:04:45 jdbc: 
/**/rs636.getLong("id2_0_");
03-03 12:04:45 jdbc: 
/**/rs636.wasNull();
03-03 12:04:45 jdbc: 
/**/rs636.getLong("contentN1_1_1_");
03-03 12:04:45 jdbc: 
/**/rs636.wasNull();
03-03 12:04:45 jdbc: 
/**/rs636.getLong("contentT2_1_");
03-03 12:04:45 jdbc: 
/**/rs636.wasNull();
03-03 12:04:45 jdbc: 
/**/rs636.next();
03-03 12:04:45 jdbc: 
/**/rs636.close();
03-03 12:04:45 jdbc: 
/**/prep635.getMaxRows();
03-03 12:04:45 jdbc: 
/**/prep635.getQueryTimeout();
03-03 12:04:45 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:45 jdbc: COMMAND_EXECUTE_QUERY 260
03-03 12:04:45 jdbc: RESULT_CLOSE 308
03-03 12:04:45 jdbc: 
/**/prep635.close();
03-03 12:04:45 jdbc: COMMAND_CLOSE 306
03-03 12:04:45 jdbc: 
/**/PreparedStatement prep636 = conn51.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 12:04:45 jdbc: SESSION_PREPARE_READ_PARAMS 309
03-03 12:04:45 jdbc: 
/**/prep636.setLong(1, 52L);
03-03 12:04:45 jdbc: 
/**/ResultSet rs637 = prep636.executeQuery();
03-03 12:04:45 jdbc: COMMAND_EXECUTE_QUERY 309
03-03 12:04:45 jdbc: RESULT_CLOSE 310
03-03 12:04:45 jdbc: 
/**/rs637.next();
03-03 12:04:45 jdbc: 
/**/rs637.getLong("id2_0_");
03-03 12:04:45 jdbc: 
/**/rs637.wasNull();
03-03 12:04:45 jdbc: 
/**/rs637.getLong("contentN1_1_1_");
03-03 12:04:45 jdbc: 
/**/rs637.wasNull();
03-03 12:04:45 jdbc: 
/**/rs637.getLong("contentT2_1_");
03-03 12:04:45 jdbc: 
/**/rs637.wasNull();
03-03 12:04:45 jdbc: 
/**/rs637.next();
03-03 12:04:45 jdbc: 
/**/rs637.close();
03-03 12:04:45 jdbc: 
/**/prep636.getMaxRows();
03-03 12:04:45 jdbc: 
/**/prep636.getQueryTimeout();
03-03 12:04:45 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:45 jdbc: COMMAND_EXECUTE_QUERY 260
03-03 12:04:45 jdbc: RESULT_CLOSE 311
03-03 12:04:45 jdbc: 
/**/prep636.close();
03-03 12:04:45 jdbc: COMMAND_CLOSE 309
03-03 12:04:45 jdbc: 
/**/PreparedStatement prep637 = conn51.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 12:04:45 jdbc: SESSION_PREPARE_READ_PARAMS 312
03-03 12:04:45 jdbc: 
/**/prep637.setLong(1, 184L);
03-03 12:04:45 jdbc: 
/**/ResultSet rs638 = prep637.executeQuery();
03-03 12:04:45 jdbc: COMMAND_EXECUTE_QUERY 312
03-03 12:04:45 jdbc: RESULT_CLOSE 313
03-03 12:04:45 jdbc: 
/**/rs638.next();
03-03 12:04:45 jdbc: 
/**/rs638.getLong("id1_0_");
03-03 12:04:45 jdbc: 
/**/rs638.wasNull();
03-03 12:04:45 jdbc: 
/**/rs638.getLong("id0_1_");
03-03 12:04:45 jdbc: 
/**/rs638.wasNull();
03-03 12:04:45 jdbc: 
/**/rs638.getLong("id4_2_");
03-03 12:04:45 jdbc: 
/**/rs638.wasNull();
03-03 12:04:45 jdbc: 
/**/rs638.getLong("id4_3_");
03-03 12:04:45 jdbc: 
/**/rs638.wasNull();
03-03 12:04:45 jdbc: 
/**/rs638.getLong("author8_1_0_");
03-03 12:04:45 jdbc: 
/**/rs638.wasNull();
03-03 12:04:45 jdbc: 
/**/rs638.getLong("contentId1_0_");
03-03 12:04:45 jdbc: 
/**/rs638.wasNull();
03-03 12:04:45 jdbc: 
/**/rs638.getString("contentR3_1_0_");
03-03 12:04:45 jdbc: 
/**/rs638.wasNull();
03-03 12:04:45 jdbc: 
/**/rs638.getTimestamp("creation4_1_0_");
03-03 12:04:45 jdbc: 
/**/rs638.wasNull();
03-03 12:04:45 jdbc: 
/**/rs638.getTimestamp("lastModi5_1_0_");
03-03 12:04:45 jdbc: 
/**/rs638.wasNull();
03-03 12:04:45 jdbc: 
/**/rs638.getString("name1_0_");
03-03 12:04:45 jdbc: 
/**/rs638.wasNull();
03-03 12:04:45 jdbc: 
/**/rs638.getLong("parent9_1_0_");
03-03 12:04:45 jdbc: 
/**/rs638.wasNull();
03-03 12:04:45 jdbc: 
/**/rs638.getBoolean("publicated1_0_");
03-03 12:04:45 jdbc: 
/**/rs638.wasNull();
03-03 12:04:45 jdbc: 
/**/rs638.getLong("contentT2_2_4_");
03-03 12:04:45 jdbc: 
/**/rs638.wasNull();
03-03 12:04:45 jdbc: 
/**/rs638.getLong("contentN1_4_");
03-03 12:04:45 jdbc: 
/**/rs638.wasNull();
03-03 12:04:45 jdbc: 
/**/rs638.next();
03-03 12:04:45 jdbc: 
/**/rs638.close();
03-03 12:04:45 jdbc: 
/**/prep637.getMaxRows();
03-03 12:04:45 jdbc: 
/**/prep637.getQueryTimeout();
03-03 12:04:45 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:45 jdbc: COMMAND_EXECUTE_QUERY 260
03-03 12:04:45 jdbc: RESULT_CLOSE 314
03-03 12:04:45 jdbc: 
/**/prep637.close();
03-03 12:04:45 jdbc: COMMAND_CLOSE 312
03-03 12:04:45 jdbc: 
/**/PreparedStatement prep638 = conn51.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 12:04:45 jdbc: SESSION_PREPARE_READ_PARAMS 315
03-03 12:04:45 jdbc: 
/**/prep638.setLong(1, 8L);
03-03 12:04:45 jdbc: 
/**/ResultSet rs639 = prep638.executeQuery();
03-03 12:04:45 jdbc: COMMAND_EXECUTE_QUERY 315
03-03 12:04:45 jdbc: RESULT_CLOSE 316
03-03 12:04:45 jdbc: 
/**/rs639.next();
03-03 12:04:45 jdbc: 
/**/rs639.getLong("id2_0_");
03-03 12:04:45 jdbc: 
/**/rs639.wasNull();
03-03 12:04:45 jdbc: 
/**/rs639.getLong("contentN1_1_1_");
03-03 12:04:45 jdbc: 
/**/rs639.wasNull();
03-03 12:04:45 jdbc: 
/**/rs639.getLong("contentT2_1_");
03-03 12:04:45 jdbc: 
/**/rs639.wasNull();
03-03 12:04:45 jdbc: 
/**/rs639.next();
03-03 12:04:45 jdbc: 
/**/rs639.close();
03-03 12:04:45 jdbc: 
/**/prep638.getMaxRows();
03-03 12:04:45 jdbc: 
/**/prep638.getQueryTimeout();
03-03 12:04:45 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:45 jdbc: COMMAND_EXECUTE_QUERY 260
03-03 12:04:45 jdbc: RESULT_CLOSE 317
03-03 12:04:45 jdbc: 
/**/prep638.close();
03-03 12:04:45 jdbc: COMMAND_CLOSE 315
03-03 12:04:45 jdbc: 
/**/PreparedStatement prep639 = conn51.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 12:04:45 jdbc: SESSION_PREPARE_READ_PARAMS 318
03-03 12:04:45 jdbc: 
/**/prep639.setLong(1, 186L);
03-03 12:04:45 jdbc: 
/**/ResultSet rs640 = prep639.executeQuery();
03-03 12:04:45 jdbc: COMMAND_EXECUTE_QUERY 318
03-03 12:04:45 jdbc: RESULT_CLOSE 319
03-03 12:04:45 jdbc: 
/**/rs640.next();
03-03 12:04:45 jdbc: 
/**/rs640.getLong("id1_0_");
03-03 12:04:45 jdbc: 
/**/rs640.wasNull();
03-03 12:04:45 jdbc: 
/**/rs640.getLong("id0_1_");
03-03 12:04:45 jdbc: 
/**/rs640.wasNull();
03-03 12:04:45 jdbc: 
/**/rs640.getLong("id4_2_");
03-03 12:04:45 jdbc: 
/**/rs640.wasNull();
03-03 12:04:45 jdbc: 
/**/rs640.getLong("id4_3_");
03-03 12:04:45 jdbc: 
/**/rs640.wasNull();
03-03 12:04:45 jdbc: 
/**/rs640.getLong("contentT2_2_4_");
03-03 12:04:45 jdbc: 
/**/rs640.wasNull();
03-03 12:04:45 jdbc: 
/**/rs640.getLong("contentN1_4_");
03-03 12:04:45 jdbc: 
/**/rs640.wasNull();
03-03 12:04:45 jdbc: 
/**/rs640.next();
03-03 12:04:45 jdbc: 
/**/rs640.close();
03-03 12:04:45 jdbc: 
/**/prep639.getMaxRows();
03-03 12:04:45 jdbc: 
/**/prep639.getQueryTimeout();
03-03 12:04:45 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:45 jdbc: COMMAND_EXECUTE_QUERY 260
03-03 12:04:45 jdbc: RESULT_CLOSE 320
03-03 12:04:45 jdbc: 
/**/prep639.close();
03-03 12:04:45 jdbc: COMMAND_CLOSE 318
03-03 12:04:45 jdbc: 
/**/PreparedStatement prep640 = conn51.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 12:04:45 jdbc: SESSION_PREPARE_READ_PARAMS 321
03-03 12:04:45 jdbc: 
/**/prep640.setLong(1, 187L);
03-03 12:04:45 jdbc: 
/**/ResultSet rs641 = prep640.executeQuery();
03-03 12:04:45 jdbc: COMMAND_EXECUTE_QUERY 321
03-03 12:04:45 jdbc: RESULT_CLOSE 322
03-03 12:04:45 jdbc: 
/**/rs641.next();
03-03 12:04:45 jdbc: 
/**/rs641.getLong("id1_0_");
03-03 12:04:45 jdbc: 
/**/rs641.wasNull();
03-03 12:04:45 jdbc: 
/**/rs641.getLong("id0_1_");
03-03 12:04:45 jdbc: 
/**/rs641.wasNull();
03-03 12:04:45 jdbc: 
/**/rs641.getLong("id4_2_");
03-03 12:04:45 jdbc: 
/**/rs641.wasNull();
03-03 12:04:45 jdbc: 
/**/rs641.getLong("id4_3_");
03-03 12:04:45 jdbc: 
/**/rs641.wasNull();
03-03 12:04:45 jdbc: 
/**/rs641.getLong("contentT2_2_4_");
03-03 12:04:45 jdbc: 
/**/rs641.wasNull();
03-03 12:04:45 jdbc: 
/**/rs641.getLong("contentN1_4_");
03-03 12:04:45 jdbc: 
/**/rs641.wasNull();
03-03 12:04:45 jdbc: 
/**/rs641.next();
03-03 12:04:45 jdbc: 
/**/rs641.close();
03-03 12:04:45 jdbc: 
/**/prep640.getMaxRows();
03-03 12:04:45 jdbc: 
/**/prep640.getQueryTimeout();
03-03 12:04:45 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:45 jdbc: SESSION_PREPARE 324
03-03 12:04:45 jdbc: COMMAND_EXECUTE_QUERY 324
03-03 12:04:45 jdbc: RESULT_CLOSE 323
03-03 12:04:45 jdbc: 
/**/prep640.close();
03-03 12:04:45 jdbc: COMMAND_CLOSE 321
03-03 12:04:45 jdbc: 
/**/PreparedStatement prep641 = conn51.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 12:04:45 jdbc: SESSION_PREPARE_READ_PARAMS 325
03-03 12:04:45 jdbc: 
/**/prep641.setLong(1, 188L);
03-03 12:04:45 jdbc: 
/**/ResultSet rs642 = prep641.executeQuery();
03-03 12:04:45 jdbc: COMMAND_EXECUTE_QUERY 325
03-03 12:04:45 jdbc: RESULT_CLOSE 326
03-03 12:04:45 jdbc: 
/**/rs642.next();
03-03 12:04:45 jdbc: 
/**/rs642.getLong("id1_0_");
03-03 12:04:45 jdbc: 
/**/rs642.wasNull();
03-03 12:04:45 jdbc: 
/**/rs642.getLong("id0_1_");
03-03 12:04:45 jdbc: 
/**/rs642.wasNull();
03-03 12:04:45 jdbc: 
/**/rs642.getLong("id4_2_");
03-03 12:04:45 jdbc: 
/**/rs642.wasNull();
03-03 12:04:45 jdbc: 
/**/rs642.getLong("id4_3_");
03-03 12:04:45 jdbc: 
/**/rs642.wasNull();
03-03 12:04:45 jdbc: 
/**/rs642.getLong("contentT2_2_4_");
03-03 12:04:45 jdbc: 
/**/rs642.wasNull();
03-03 12:04:45 jdbc: 
/**/rs642.getLong("contentN1_4_");
03-03 12:04:45 jdbc: 
/**/rs642.wasNull();
03-03 12:04:45 jdbc: 
/**/rs642.next();
03-03 12:04:45 jdbc: 
/**/rs642.getLong("id1_0_");
03-03 12:04:45 jdbc: 
/**/rs642.wasNull();
03-03 12:04:45 jdbc: 
/**/rs642.getLong("id0_1_");
03-03 12:04:45 jdbc: 
/**/rs642.wasNull();
03-03 12:04:45 jdbc: 
/**/rs642.getLong("id4_2_");
03-03 12:04:45 jdbc: 
/**/rs642.wasNull();
03-03 12:04:45 jdbc: 
/**/rs642.getLong("id4_3_");
03-03 12:04:45 jdbc: 
/**/rs642.wasNull();
03-03 12:04:45 jdbc: 
/**/rs642.getLong("contentT2_2_4_");
03-03 12:04:45 jdbc: 
/**/rs642.wasNull();
03-03 12:04:45 jdbc: 
/**/rs642.getLong("contentN1_4_");
03-03 12:04:45 jdbc: 
/**/rs642.wasNull();
03-03 12:04:45 jdbc: 
/**/rs642.next();
03-03 12:04:45 jdbc: 
/**/rs642.close();
03-03 12:04:45 jdbc: 
/**/prep641.getMaxRows();
03-03 12:04:45 jdbc: 
/**/prep641.getQueryTimeout();
03-03 12:04:45 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:45 jdbc: COMMAND_EXECUTE_QUERY 324
03-03 12:04:45 jdbc: RESULT_CLOSE 327
03-03 12:04:45 jdbc: 
/**/prep641.close();
03-03 12:04:45 jdbc: COMMAND_CLOSE 325
03-03 12:04:45 jdbc: 
/**/PreparedStatement prep642 = conn51.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 12:04:45 jdbc: SESSION_PREPARE_READ_PARAMS 328
03-03 12:04:45 jdbc: 
/**/prep642.setLong(1, 189L);
03-03 12:04:45 jdbc: 
/**/ResultSet rs643 = prep642.executeQuery();
03-03 12:04:45 jdbc: COMMAND_EXECUTE_QUERY 328
03-03 12:04:45 jdbc: RESULT_CLOSE 329
03-03 12:04:45 jdbc: 
/**/rs643.next();
03-03 12:04:45 jdbc: 
/**/rs643.getLong("id1_0_");
03-03 12:04:45 jdbc: 
/**/rs643.wasNull();
03-03 12:04:45 jdbc: 
/**/rs643.getLong("id0_1_");
03-03 12:04:45 jdbc: 
/**/rs643.wasNull();
03-03 12:04:45 jdbc: 
/**/rs643.getLong("id4_2_");
03-03 12:04:45 jdbc: 
/**/rs643.wasNull();
03-03 12:04:45 jdbc: 
/**/rs643.getLong("id4_3_");
03-03 12:04:45 jdbc: 
/**/rs643.wasNull();
03-03 12:04:45 jdbc: 
/**/rs643.getLong("contentT2_2_4_");
03-03 12:04:45 jdbc: 
/**/rs643.wasNull();
03-03 12:04:45 jdbc: 
/**/rs643.getLong("contentN1_4_");
03-03 12:04:45 jdbc: 
/**/rs643.wasNull();
03-03 12:04:45 jdbc: 
/**/rs643.next();
03-03 12:04:45 jdbc: 
/**/rs643.close();
03-03 12:04:45 jdbc: 
/**/prep642.getMaxRows();
03-03 12:04:45 jdbc: 
/**/prep642.getQueryTimeout();
03-03 12:04:45 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:45 jdbc: COMMAND_EXECUTE_QUERY 324
03-03 12:04:45 jdbc: RESULT_CLOSE 330
03-03 12:04:45 jdbc: 
/**/prep642.close();
03-03 12:04:45 jdbc: COMMAND_CLOSE 328
03-03 12:04:45 jdbc: 
/**/PreparedStatement prep643 = conn51.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 12:04:45 jdbc: SESSION_PREPARE_READ_PARAMS 331
03-03 12:04:45 jdbc: 
/**/prep643.setLong(1, 192L);
03-03 12:04:45 jdbc: 
/**/ResultSet rs644 = prep643.executeQuery();
03-03 12:04:45 jdbc: COMMAND_EXECUTE_QUERY 331
03-03 12:04:45 jdbc: RESULT_CLOSE 332
03-03 12:04:45 jdbc: 
/**/rs644.next();
03-03 12:04:45 jdbc: 
/**/rs644.getLong("id1_0_");
03-03 12:04:45 jdbc: 
/**/rs644.wasNull();
03-03 12:04:45 jdbc: 
/**/rs644.getLong("id0_1_");
03-03 12:04:45 jdbc: 
/**/rs644.wasNull();
03-03 12:04:45 jdbc: 
/**/rs644.getLong("id4_2_");
03-03 12:04:45 jdbc: 
/**/rs644.wasNull();
03-03 12:04:45 jdbc: 
/**/rs644.getLong("id4_3_");
03-03 12:04:45 jdbc: 
/**/rs644.wasNull();
03-03 12:04:45 jdbc: 
/**/rs644.getLong("author8_1_0_");
03-03 12:04:45 jdbc: 
/**/rs644.wasNull();
03-03 12:04:45 jdbc: 
/**/rs644.getLong("contentId1_0_");
03-03 12:04:45 jdbc: 
/**/rs644.wasNull();
03-03 12:04:45 jdbc: 
/**/rs644.getString("contentR3_1_0_");
03-03 12:04:45 jdbc: 
/**/rs644.wasNull();
03-03 12:04:45 jdbc: 
/**/rs644.getTimestamp("creation4_1_0_");
03-03 12:04:45 jdbc: 
/**/rs644.wasNull();
03-03 12:04:45 jdbc: 
/**/rs644.getTimestamp("lastModi5_1_0_");
03-03 12:04:45 jdbc: 
/**/rs644.wasNull();
03-03 12:04:45 jdbc: 
/**/rs644.getString("name1_0_");
03-03 12:04:45 jdbc: 
/**/rs644.wasNull();
03-03 12:04:45 jdbc: 
/**/rs644.getLong("parent9_1_0_");
03-03 12:04:45 jdbc: 
/**/rs644.wasNull();
03-03 12:04:45 jdbc: 
/**/rs644.getBoolean("publicated1_0_");
03-03 12:04:45 jdbc: 
/**/rs644.wasNull();
03-03 12:04:45 jdbc: 
/**/rs644.getLong("contentT2_2_4_");
03-03 12:04:45 jdbc: 
/**/rs644.wasNull();
03-03 12:04:45 jdbc: 
/**/rs644.getLong("contentN1_4_");
03-03 12:04:45 jdbc: 
/**/rs644.wasNull();
03-03 12:04:45 jdbc: 
/**/rs644.next();
03-03 12:04:45 jdbc: 
/**/rs644.close();
03-03 12:04:45 jdbc: 
/**/prep643.getMaxRows();
03-03 12:04:45 jdbc: 
/**/prep643.getQueryTimeout();
03-03 12:04:45 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:45 jdbc: COMMAND_EXECUTE_QUERY 324
03-03 12:04:45 jdbc: RESULT_CLOSE 333
03-03 12:04:45 jdbc: 
/**/prep643.close();
03-03 12:04:45 jdbc: COMMAND_CLOSE 331
03-03 12:04:45 jdbc: 
/**/PreparedStatement prep644 = conn51.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 12:04:45 jdbc: SESSION_PREPARE_READ_PARAMS 334
03-03 12:04:45 jdbc: 
/**/prep644.setLong(1, 47L);
03-03 12:04:45 jdbc: 
/**/ResultSet rs645 = prep644.executeQuery();
03-03 12:04:45 jdbc: COMMAND_EXECUTE_QUERY 334
03-03 12:04:45 jdbc: RESULT_CLOSE 335
03-03 12:04:45 jdbc: 
/**/rs645.next();
03-03 12:04:45 jdbc: 
/**/rs645.getLong("id2_0_");
03-03 12:04:45 jdbc: 
/**/rs645.wasNull();
03-03 12:04:45 jdbc: 
/**/rs645.getLong("contentN1_1_1_");
03-03 12:04:45 jdbc: 
/**/rs645.wasNull();
03-03 12:04:45 jdbc: 
/**/rs645.getLong("contentT2_1_");
03-03 12:04:45 jdbc: 
/**/rs645.wasNull();
03-03 12:04:45 jdbc: 
/**/rs645.next();
03-03 12:04:45 jdbc: 
/**/rs645.close();
03-03 12:04:45 jdbc: 
/**/prep644.getMaxRows();
03-03 12:04:45 jdbc: 
/**/prep644.getQueryTimeout();
03-03 12:04:45 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:45 jdbc: COMMAND_EXECUTE_QUERY 324
03-03 12:04:45 jdbc: RESULT_CLOSE 336
03-03 12:04:45 jdbc: 
/**/prep644.close();
03-03 12:04:45 jdbc: COMMAND_CLOSE 334
03-03 12:04:45 jdbc: 
/**/PreparedStatement prep645 = conn51.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 12:04:45 jdbc: SESSION_PREPARE_READ_PARAMS 337
03-03 12:04:45 jdbc: 
/**/prep645.setLong(1, 193L);
03-03 12:04:45 jdbc: 
/**/ResultSet rs646 = prep645.executeQuery();
03-03 12:04:45 jdbc: COMMAND_EXECUTE_QUERY 337
03-03 12:04:45 jdbc: RESULT_CLOSE 338
03-03 12:04:45 jdbc: 
/**/rs646.next();
03-03 12:04:45 jdbc: 
/**/rs646.getLong("id1_0_");
03-03 12:04:45 jdbc: 
/**/rs646.wasNull();
03-03 12:04:45 jdbc: 
/**/rs646.getLong("id0_1_");
03-03 12:04:45 jdbc: 
/**/rs646.wasNull();
03-03 12:04:45 jdbc: 
/**/rs646.getLong("id4_2_");
03-03 12:04:45 jdbc: 
/**/rs646.wasNull();
03-03 12:04:45 jdbc: 
/**/rs646.getLong("id4_3_");
03-03 12:04:45 jdbc: 
/**/rs646.wasNull();
03-03 12:04:45 jdbc: 
/**/rs646.getLong("contentT2_2_4_");
03-03 12:04:45 jdbc: 
/**/rs646.wasNull();
03-03 12:04:45 jdbc: 
/**/rs646.getLong("contentN1_4_");
03-03 12:04:45 jdbc: 
/**/rs646.wasNull();
03-03 12:04:45 jdbc: 
/**/rs646.next();
03-03 12:04:45 jdbc: 
/**/rs646.close();
03-03 12:04:45 jdbc: 
/**/prep645.getMaxRows();
03-03 12:04:45 jdbc: 
/**/prep645.getQueryTimeout();
03-03 12:04:45 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:45 jdbc: COMMAND_EXECUTE_QUERY 324
03-03 12:04:45 jdbc: RESULT_CLOSE 339
03-03 12:04:45 jdbc: 
/**/prep645.close();
03-03 12:04:45 jdbc: COMMAND_CLOSE 337
03-03 12:04:45 jdbc: 
/**/PreparedStatement prep646 = conn51.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 12:04:45 jdbc: SESSION_PREPARE_READ_PARAMS 340
03-03 12:04:45 jdbc: 
/**/prep646.setLong(1, 194L);
03-03 12:04:45 jdbc: 
/**/ResultSet rs647 = prep646.executeQuery();
03-03 12:04:45 jdbc: COMMAND_EXECUTE_QUERY 340
03-03 12:04:45 jdbc: RESULT_CLOSE 341
03-03 12:04:45 jdbc: 
/**/rs647.next();
03-03 12:04:45 jdbc: 
/**/rs647.getLong("id1_0_");
03-03 12:04:45 jdbc: 
/**/rs647.wasNull();
03-03 12:04:45 jdbc: 
/**/rs647.getLong("id0_1_");
03-03 12:04:45 jdbc: 
/**/rs647.wasNull();
03-03 12:04:45 jdbc: 
/**/rs647.getLong("id4_2_");
03-03 12:04:45 jdbc: 
/**/rs647.wasNull();
03-03 12:04:45 jdbc: 
/**/rs647.getLong("id4_3_");
03-03 12:04:45 jdbc: 
/**/rs647.wasNull();
03-03 12:04:45 jdbc: 
/**/rs647.getLong("author8_1_0_");
03-03 12:04:45 jdbc: 
/**/rs647.wasNull();
03-03 12:04:45 jdbc: 
/**/rs647.getLong("contentId1_0_");
03-03 12:04:45 jdbc: 
/**/rs647.wasNull();
03-03 12:04:45 jdbc: 
/**/rs647.getString("contentR3_1_0_");
03-03 12:04:45 jdbc: 
/**/rs647.wasNull();
03-03 12:04:45 jdbc: 
/**/rs647.getTimestamp("creation4_1_0_");
03-03 12:04:45 jdbc: 
/**/rs647.wasNull();
03-03 12:04:45 jdbc: 
/**/rs647.getTimestamp("lastModi5_1_0_");
03-03 12:04:45 jdbc: 
/**/rs647.wasNull();
03-03 12:04:45 jdbc: 
/**/rs647.getString("name1_0_");
03-03 12:04:45 jdbc: 
/**/rs647.wasNull();
03-03 12:04:45 jdbc: 
/**/rs647.getLong("parent9_1_0_");
03-03 12:04:45 jdbc: 
/**/rs647.wasNull();
03-03 12:04:45 jdbc: 
/**/rs647.getBoolean("publicated1_0_");
03-03 12:04:45 jdbc: 
/**/rs647.wasNull();
03-03 12:04:45 jdbc: 
/**/rs647.getString("name4_2_");
03-03 12:04:45 jdbc: 
/**/rs647.wasNull();
03-03 12:04:45 jdbc: 
/**/rs647.getLong("parent3_4_2_");
03-03 12:04:45 jdbc: 
/**/rs647.wasNull();
03-03 12:04:45 jdbc: 
/**/rs647.getLong("contentT2_2_4_");
03-03 12:04:45 jdbc: 
/**/rs647.wasNull();
03-03 12:04:45 jdbc: 
/**/rs647.getLong("contentN1_4_");
03-03 12:04:45 jdbc: 
/**/rs647.wasNull();
03-03 12:04:45 jdbc: 
/**/rs647.next();
03-03 12:04:45 jdbc: 
/**/rs647.close();
03-03 12:04:45 jdbc: 
/**/prep646.getMaxRows();
03-03 12:04:45 jdbc: 
/**/prep646.getQueryTimeout();
03-03 12:04:45 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:45 jdbc: COMMAND_EXECUTE_QUERY 324
03-03 12:04:45 jdbc: RESULT_CLOSE 342
03-03 12:04:45 jdbc: 
/**/prep646.close();
03-03 12:04:45 jdbc: COMMAND_CLOSE 340
03-03 12:04:45 jdbc: 
/**/PreparedStatement prep647 = conn51.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 12:04:45 jdbc: SESSION_PREPARE_READ_PARAMS 343
03-03 12:04:45 jdbc: 
/**/prep647.setLong(1, 56L);
03-03 12:04:45 jdbc: 
/**/ResultSet rs648 = prep647.executeQuery();
03-03 12:04:45 jdbc: COMMAND_EXECUTE_QUERY 343
03-03 12:04:45 jdbc: RESULT_CLOSE 344
03-03 12:04:45 jdbc: 
/**/rs648.next();
03-03 12:04:45 jdbc: 
/**/rs648.getLong("id2_0_");
03-03 12:04:45 jdbc: 
/**/rs648.wasNull();
03-03 12:04:45 jdbc: 
/**/rs648.getLong("contentN1_1_1_");
03-03 12:04:45 jdbc: 
/**/rs648.wasNull();
03-03 12:04:45 jdbc: 
/**/rs648.getLong("contentT2_1_");
03-03 12:04:45 jdbc: 
/**/rs648.wasNull();
03-03 12:04:45 jdbc: 
/**/rs648.next();
03-03 12:04:45 jdbc: 
/**/rs648.close();
03-03 12:04:45 jdbc: 
/**/prep647.getMaxRows();
03-03 12:04:45 jdbc: 
/**/prep647.getQueryTimeout();
03-03 12:04:45 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:45 jdbc: COMMAND_EXECUTE_QUERY 324
03-03 12:04:45 jdbc: RESULT_CLOSE 345
03-03 12:04:45 jdbc: 
/**/prep647.close();
03-03 12:04:45 jdbc: COMMAND_CLOSE 343
03-03 12:04:45 jdbc: 
/**/PreparedStatement prep648 = conn51.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 12:04:45 jdbc: SESSION_PREPARE_READ_PARAMS 346
03-03 12:04:45 jdbc: 
/**/prep648.setLong(1, 195L);
03-03 12:04:45 jdbc: 
/**/ResultSet rs649 = prep648.executeQuery();
03-03 12:04:45 jdbc: COMMAND_EXECUTE_QUERY 346
03-03 12:04:45 jdbc: RESULT_CLOSE 347
03-03 12:04:45 jdbc: 
/**/rs649.next();
03-03 12:04:45 jdbc: 
/**/rs649.getLong("id1_0_");
03-03 12:04:45 jdbc: 
/**/rs649.wasNull();
03-03 12:04:45 jdbc: 
/**/rs649.getLong("id0_1_");
03-03 12:04:45 jdbc: 
/**/rs649.wasNull();
03-03 12:04:45 jdbc: 
/**/rs649.getLong("id4_2_");
03-03 12:04:45 jdbc: 
/**/rs649.wasNull();
03-03 12:04:45 jdbc: 
/**/rs649.getLong("id4_3_");
03-03 12:04:45 jdbc: 
/**/rs649.wasNull();
03-03 12:04:45 jdbc: 
/**/rs649.getLong("author8_1_0_");
03-03 12:04:45 jdbc: 
/**/rs649.wasNull();
03-03 12:04:45 jdbc: 
/**/rs649.getLong("contentId1_0_");
03-03 12:04:45 jdbc: 
/**/rs649.wasNull();
03-03 12:04:45 jdbc: 
/**/rs649.getString("contentR3_1_0_");
03-03 12:04:45 jdbc: 
/**/rs649.wasNull();
03-03 12:04:45 jdbc: 
/**/rs649.getTimestamp("creation4_1_0_");
03-03 12:04:45 jdbc: 
/**/rs649.wasNull();
03-03 12:04:45 jdbc: 
/**/rs649.getTimestamp("lastModi5_1_0_");
03-03 12:04:45 jdbc: 
/**/rs649.wasNull();
03-03 12:04:45 jdbc: 
/**/rs649.getString("name1_0_");
03-03 12:04:45 jdbc: 
/**/rs649.wasNull();
03-03 12:04:45 jdbc: 
/**/rs649.getLong("parent9_1_0_");
03-03 12:04:45 jdbc: 
/**/rs649.wasNull();
03-03 12:04:45 jdbc: 
/**/rs649.getBoolean("publicated1_0_");
03-03 12:04:45 jdbc: 
/**/rs649.wasNull();
03-03 12:04:45 jdbc: 
/**/rs649.getString("name4_2_");
03-03 12:04:45 jdbc: 
/**/rs649.wasNull();
03-03 12:04:45 jdbc: 
/**/rs649.getLong("parent3_4_2_");
03-03 12:04:45 jdbc: 
/**/rs649.wasNull();
03-03 12:04:45 jdbc: 
/**/rs649.getLong("contentT2_2_4_");
03-03 12:04:45 jdbc: 
/**/rs649.wasNull();
03-03 12:04:45 jdbc: 
/**/rs649.getLong("contentN1_4_");
03-03 12:04:45 jdbc: 
/**/rs649.wasNull();
03-03 12:04:45 jdbc: 
/**/rs649.next();
03-03 12:04:45 jdbc: 
/**/rs649.close();
03-03 12:04:45 jdbc: 
/**/prep648.getMaxRows();
03-03 12:04:45 jdbc: 
/**/prep648.getQueryTimeout();
03-03 12:04:45 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:45 jdbc: COMMAND_EXECUTE_QUERY 324
03-03 12:04:45 jdbc: RESULT_CLOSE 348
03-03 12:04:45 jdbc: 
/**/prep648.close();
03-03 12:04:45 jdbc: COMMAND_CLOSE 346
03-03 12:04:45 jdbc: 
/**/PreparedStatement prep649 = conn51.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 12:04:45 jdbc: SESSION_PREPARE_READ_PARAMS 349
03-03 12:04:45 jdbc: 
/**/prep649.setLong(1, 58L);
03-03 12:04:45 jdbc: 
/**/ResultSet rs650 = prep649.executeQuery();
03-03 12:04:45 jdbc: COMMAND_EXECUTE_QUERY 349
03-03 12:04:45 jdbc: RESULT_CLOSE 350
03-03 12:04:45 jdbc: 
/**/rs650.next();
03-03 12:04:45 jdbc: 
/**/rs650.getLong("id2_0_");
03-03 12:04:45 jdbc: 
/**/rs650.wasNull();
03-03 12:04:45 jdbc: 
/**/rs650.getLong("contentN1_1_1_");
03-03 12:04:45 jdbc: 
/**/rs650.wasNull();
03-03 12:04:45 jdbc: 
/**/rs650.getLong("contentT2_1_");
03-03 12:04:45 jdbc: 
/**/rs650.wasNull();
03-03 12:04:45 jdbc: 
/**/rs650.next();
03-03 12:04:45 jdbc: 
/**/rs650.close();
03-03 12:04:45 jdbc: 
/**/prep649.getMaxRows();
03-03 12:04:45 jdbc: 
/**/prep649.getQueryTimeout();
03-03 12:04:45 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:45 jdbc: COMMAND_EXECUTE_QUERY 324
03-03 12:04:45 jdbc: RESULT_CLOSE 351
03-03 12:04:45 jdbc: 
/**/prep649.close();
03-03 12:04:45 jdbc: COMMAND_CLOSE 349
03-03 12:04:45 jdbc: 
/**/PreparedStatement prep650 = conn51.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 12:04:45 jdbc: SESSION_PREPARE_READ_PARAMS 352
03-03 12:04:45 jdbc: 
/**/prep650.setLong(1, 196L);
03-03 12:04:45 jdbc: 
/**/ResultSet rs651 = prep650.executeQuery();
03-03 12:04:45 jdbc: COMMAND_EXECUTE_QUERY 352
03-03 12:04:45 jdbc: RESULT_CLOSE 353
03-03 12:04:45 jdbc: 
/**/rs651.next();
03-03 12:04:45 jdbc: 
/**/rs651.getLong("id1_0_");
03-03 12:04:45 jdbc: 
/**/rs651.wasNull();
03-03 12:04:45 jdbc: 
/**/rs651.getLong("id0_1_");
03-03 12:04:45 jdbc: 
/**/rs651.wasNull();
03-03 12:04:45 jdbc: 
/**/rs651.getLong("id4_2_");
03-03 12:04:45 jdbc: 
/**/rs651.wasNull();
03-03 12:04:45 jdbc: 
/**/rs651.getLong("id4_3_");
03-03 12:04:45 jdbc: 
/**/rs651.wasNull();
03-03 12:04:45 jdbc: 
/**/rs651.getLong("author8_1_0_");
03-03 12:04:45 jdbc: 
/**/rs651.wasNull();
03-03 12:04:45 jdbc: 
/**/rs651.getLong("contentId1_0_");
03-03 12:04:45 jdbc: 
/**/rs651.wasNull();
03-03 12:04:45 jdbc: 
/**/rs651.getString("contentR3_1_0_");
03-03 12:04:45 jdbc: 
/**/rs651.wasNull();
03-03 12:04:45 jdbc: 
/**/rs651.getTimestamp("creation4_1_0_");
03-03 12:04:45 jdbc: 
/**/rs651.wasNull();
03-03 12:04:45 jdbc: 
/**/rs651.getTimestamp("lastModi5_1_0_");
03-03 12:04:45 jdbc: 
/**/rs651.wasNull();
03-03 12:04:45 jdbc: 
/**/rs651.getString("name1_0_");
03-03 12:04:45 jdbc: 
/**/rs651.wasNull();
03-03 12:04:45 jdbc: 
/**/rs651.getLong("parent9_1_0_");
03-03 12:04:45 jdbc: 
/**/rs651.wasNull();
03-03 12:04:45 jdbc: 
/**/rs651.getBoolean("publicated1_0_");
03-03 12:04:45 jdbc: 
/**/rs651.wasNull();
03-03 12:04:45 jdbc: 
/**/rs651.getLong("contentT2_2_4_");
03-03 12:04:45 jdbc: 
/**/rs651.wasNull();
03-03 12:04:45 jdbc: 
/**/rs651.getLong("contentN1_4_");
03-03 12:04:45 jdbc: 
/**/rs651.wasNull();
03-03 12:04:45 jdbc: 
/**/rs651.next();
03-03 12:04:45 jdbc: 
/**/rs651.close();
03-03 12:04:45 jdbc: 
/**/prep650.getMaxRows();
03-03 12:04:45 jdbc: 
/**/prep650.getQueryTimeout();
03-03 12:04:45 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:45 jdbc: COMMAND_EXECUTE_QUERY 324
03-03 12:04:45 jdbc: RESULT_CLOSE 354
03-03 12:04:45 jdbc: 
/**/prep650.close();
03-03 12:04:45 jdbc: COMMAND_CLOSE 352
03-03 12:04:45 jdbc: 
/**/PreparedStatement prep651 = conn51.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 12:04:45 jdbc: SESSION_PREPARE_READ_PARAMS 355
03-03 12:04:45 jdbc: 
/**/prep651.setLong(1, 31L);
03-03 12:04:45 jdbc: 
/**/ResultSet rs652 = prep651.executeQuery();
03-03 12:04:45 jdbc: COMMAND_EXECUTE_QUERY 355
03-03 12:04:45 jdbc: RESULT_CLOSE 356
03-03 12:04:45 jdbc: 
/**/rs652.next();
03-03 12:04:45 jdbc: 
/**/rs652.getLong("id2_0_");
03-03 12:04:45 jdbc: 
/**/rs652.wasNull();
03-03 12:04:45 jdbc: 
/**/rs652.getLong("contentN1_1_1_");
03-03 12:04:45 jdbc: 
/**/rs652.wasNull();
03-03 12:04:45 jdbc: 
/**/rs652.getLong("contentT2_1_");
03-03 12:04:45 jdbc: 
/**/rs652.wasNull();
03-03 12:04:45 jdbc: 
/**/rs652.next();
03-03 12:04:45 jdbc: 
/**/rs652.getLong("id2_0_");
03-03 12:04:45 jdbc: 
/**/rs652.wasNull();
03-03 12:04:45 jdbc: 
/**/rs652.getLong("contentN1_1_1_");
03-03 12:04:45 jdbc: 
/**/rs652.wasNull();
03-03 12:04:45 jdbc: 
/**/rs652.getLong("contentT2_1_");
03-03 12:04:45 jdbc: 
/**/rs652.wasNull();
03-03 12:04:45 jdbc: 
/**/rs652.next();
03-03 12:04:45 jdbc: 
/**/rs652.close();
03-03 12:04:45 jdbc: 
/**/prep651.getMaxRows();
03-03 12:04:45 jdbc: 
/**/prep651.getQueryTimeout();
03-03 12:04:45 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:45 jdbc: COMMAND_EXECUTE_QUERY 324
03-03 12:04:45 jdbc: RESULT_CLOSE 357
03-03 12:04:45 jdbc: 
/**/prep651.close();
03-03 12:04:45 jdbc: COMMAND_CLOSE 355
03-03 12:04:45 jdbc: 
/**/PreparedStatement prep652 = conn51.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 12:04:45 jdbc: SESSION_PREPARE_READ_PARAMS 358
03-03 12:04:45 jdbc: 
/**/prep652.setLong(1, 197L);
03-03 12:04:45 jdbc: 
/**/ResultSet rs653 = prep652.executeQuery();
03-03 12:04:45 jdbc: COMMAND_EXECUTE_QUERY 358
03-03 12:04:45 jdbc: RESULT_CLOSE 359
03-03 12:04:45 jdbc: 
/**/rs653.next();
03-03 12:04:45 jdbc: 
/**/rs653.getLong("id1_0_");
03-03 12:04:45 jdbc: 
/**/rs653.wasNull();
03-03 12:04:45 jdbc: 
/**/rs653.getLong("id0_1_");
03-03 12:04:45 jdbc: 
/**/rs653.wasNull();
03-03 12:04:45 jdbc: 
/**/rs653.getLong("id4_2_");
03-03 12:04:45 jdbc: 
/**/rs653.wasNull();
03-03 12:04:45 jdbc: 
/**/rs653.getLong("id4_3_");
03-03 12:04:45 jdbc: 
/**/rs653.wasNull();
03-03 12:04:45 jdbc: 
/**/rs653.getLong("contentT2_2_4_");
03-03 12:04:45 jdbc: 
/**/rs653.wasNull();
03-03 12:04:45 jdbc: 
/**/rs653.getLong("contentN1_4_");
03-03 12:04:45 jdbc: 
/**/rs653.wasNull();
03-03 12:04:45 jdbc: 
/**/rs653.next();
03-03 12:04:45 jdbc: 
/**/rs653.close();
03-03 12:04:45 jdbc: 
/**/prep652.getMaxRows();
03-03 12:04:45 jdbc: 
/**/prep652.getQueryTimeout();
03-03 12:04:45 jdbc: 
/**/conn51.getQueryTimeout();
03-03 12:04:45 jdbc: COMMAND_EXECUTE_QUERY 324
03-03 12:04:45 jdbc: RESULT_CLOSE 360
03-03 12:04:45 jdbc: 
/**/prep652.close();
03-03 12:04:45 jdbc: COMMAND_CLOSE 358
