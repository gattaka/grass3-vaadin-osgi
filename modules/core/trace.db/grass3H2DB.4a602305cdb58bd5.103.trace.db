03-03 13:57:09 jdbc: 
/**/Connection conn103 = DriverManager.getConnection("jdbc:h2:tcp://localhost/grass3H2DB;TRACE_LEVEL_FIlE=3", "SA", "");
03-03 13:57:09 jdbc: java.lang.Exception: Open Stack Trace
	at org.h2.util.CloseWatcher.register(CloseWatcher.java:93)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:120)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:92)
	at org.h2.Driver.connect(Driver.java:72)
	at java.sql.DriverManager.getConnection(DriverManager.java:579)
	at java.sql.DriverManager.getConnection(DriverManager.java:190)
	at org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl.getConnection(DriverManagerConnectionProviderImpl.java:173)
	at org.hibernate.internal.AbstractSessionImpl$NonContextualJdbcConnectionAccess.obtainConnection(AbstractSessionImpl.java:276)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:297)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.getConnection(LogicalConnectionImpl.java:169)
	at org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:67)
	at org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:160)
	at org.hibernate.internal.SessionImpl.beginTransaction(SessionImpl.java:1263)
	at org.myftp.gattserver.grass3.model.AbstractDAO.findByID(AbstractDAO.java:133)
	at org.myftp.gattserver.grass3.facades.NodeFacade.getNodeById(NodeFacade.java:30)
	at org.myftp.gattserver.grass3.pages.template.ContentsTableFactory$ContentsTable.populateTable(ContentsTableFactory.java:118)
	at org.myftp.gattserver.grass3.pages.HomePage.createRecentMenus(HomePage.java:245)
	at org.myftp.gattserver.grass3.pages.HomePage.createContent(HomePage.java:99)
	at org.myftp.gattserver.grass3.pages.template.GrassPage.init(GrassPage.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:344)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:295)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:130)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1479)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:461)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:314)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1129)
	at org.myftp.gattserver.grass3.pages.factories.template.PageFactory.createPage(PageFactory.java:43)
	at org.myftp.gattserver.grass3.GrassUI.init(GrassUI.java:65)
	at com.vaadin.ui.UI.doInit(UI.java:523)
	at com.vaadin.server.AbstractCommunicationManager.getBrowserDetailsUI(AbstractCommunicationManager.java:2457)
	at com.vaadin.server.AbstractCommunicationManager.handleBrowserDetailsRequest(AbstractCommunicationManager.java:2352)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:325)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:201)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:669)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1448)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:118)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:45)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(BasicAuthenticationFilter.java:150)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:183)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:192)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:160)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1419)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:455)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:557)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1075)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:384)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1009)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:255)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:154)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)
	at org.eclipse.jetty.server.Server.handle(Server.java:368)
	at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:488)
	at org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:932)
	at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:994)
	at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:640)
	at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235)
	at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:628)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)
	at java.lang.Thread.run(Thread.java:722)

org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-168]
	at org.h2.message.DbException.get(DbException.java:169)
	at org.h2.message.DbException.get(DbException.java:146)
	at org.h2.message.DbException.get(DbException.java:135)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:172)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:119)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:92)
	at org.h2.Driver.connect(Driver.java:72)
	at java.sql.DriverManager.getConnection(DriverManager.java:579)
	at java.sql.DriverManager.getConnection(DriverManager.java:190)
	at org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl.getConnection(DriverManagerConnectionProviderImpl.java:173)
	at org.hibernate.internal.AbstractSessionImpl$NonContextualJdbcConnectionAccess.obtainConnection(AbstractSessionImpl.java:276)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:297)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.getConnection(LogicalConnectionImpl.java:169)
	at org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:67)
	at org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:160)
	at org.hibernate.internal.SessionImpl.beginTransaction(SessionImpl.java:1263)
	at org.myftp.gattserver.grass3.model.AbstractDAO.findAll(AbstractDAO.java:102)
	at org.myftp.gattserver.grass3.facades.ContentTagFacade.getAllContentTags(ContentTagFacade.java:34)
	at org.myftp.gattserver.grass3.pages.HomePage.createTagCloud(HomePage.java:117)
	at org.myftp.gattserver.grass3.pages.HomePage.createContent(HomePage.java:102)
	at org.myftp.gattserver.grass3.pages.template.GrassPage.init(GrassPage.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:344)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:295)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:130)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1479)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:461)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:314)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1129)
	at org.myftp.gattserver.grass3.pages.factories.template.PageFactory.createPage(PageFactory.java:43)
	at org.myftp.gattserver.grass3.GrassUI.init(GrassUI.java:65)
	at com.vaadin.ui.UI.doInit(UI.java:523)
	at com.vaadin.server.AbstractCommunicationManager.getBrowserDetailsUI(AbstractCommunicationManager.java:2457)
	at com.vaadin.server.AbstractCommunicationManager.handleBrowserDetailsRequest(AbstractCommunicationManager.java:2352)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:325)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:201)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:669)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1448)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:118)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:45)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(BasicAuthenticationFilter.java:150)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:183)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:192)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:160)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1419)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:455)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:557)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1075)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:384)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1009)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:255)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:154)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)
	at org.eclipse.jetty.server.Server.handle(Server.java:368)
	at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:488)
	at org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:932)
	at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:994)
	at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:640)
	at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235)
	at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:628)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)
	at java.lang.Thread.run(Thread.java:722)
Caused by: org.h2.jdbc.JdbcSQLException: The connection was not closed by the application and is garbage collected [90018-168]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:329)
	... 96 more
03-03 13:57:09 jdbc: java.lang.Exception: Open Stack Trace
	at org.h2.util.CloseWatcher.register(CloseWatcher.java:93)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:120)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:92)
	at org.h2.Driver.connect(Driver.java:72)
	at java.sql.DriverManager.getConnection(DriverManager.java:579)
	at java.sql.DriverManager.getConnection(DriverManager.java:190)
	at org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl.getConnection(DriverManagerConnectionProviderImpl.java:173)
	at org.hibernate.internal.AbstractSessionImpl$NonContextualJdbcConnectionAccess.obtainConnection(AbstractSessionImpl.java:276)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:297)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.getConnection(LogicalConnectionImpl.java:169)
	at org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:67)
	at org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:160)
	at org.hibernate.internal.SessionImpl.beginTransaction(SessionImpl.java:1263)
	at org.myftp.gattserver.grass3.model.AbstractDAO.findByID(AbstractDAO.java:133)
	at org.myftp.gattserver.grass3.facades.NodeFacade.getNodeById(NodeFacade.java:30)
	at org.myftp.gattserver.grass3.pages.template.ContentsTableFactory$ContentsTable.populateTable(ContentsTableFactory.java:118)
	at org.myftp.gattserver.grass3.pages.HomePage.createRecentMenus(HomePage.java:245)
	at org.myftp.gattserver.grass3.pages.HomePage.createContent(HomePage.java:99)
	at org.myftp.gattserver.grass3.pages.template.GrassPage.init(GrassPage.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:344)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:295)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:130)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1479)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:461)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:314)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1129)
	at org.myftp.gattserver.grass3.pages.factories.template.PageFactory.createPage(PageFactory.java:43)
	at org.myftp.gattserver.grass3.GrassUI.init(GrassUI.java:65)
	at com.vaadin.ui.UI.doInit(UI.java:523)
	at com.vaadin.server.AbstractCommunicationManager.getBrowserDetailsUI(AbstractCommunicationManager.java:2457)
	at com.vaadin.server.AbstractCommunicationManager.handleBrowserDetailsRequest(AbstractCommunicationManager.java:2352)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:325)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:201)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:669)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1448)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:118)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:45)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(BasicAuthenticationFilter.java:150)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:183)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:192)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:160)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1419)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:455)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:557)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1075)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:384)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1009)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:255)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:154)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)
	at org.eclipse.jetty.server.Server.handle(Server.java:368)
	at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:488)
	at org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:932)
	at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:994)
	at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:640)
	at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235)
	at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:628)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)
	at java.lang.Thread.run(Thread.java:722)

org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-168]
	at org.h2.message.DbException.get(DbException.java:169)
	at org.h2.message.DbException.get(DbException.java:146)
	at org.h2.message.DbException.get(DbException.java:135)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:172)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:119)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:92)
	at org.h2.Driver.connect(Driver.java:72)
	at java.sql.DriverManager.getConnection(DriverManager.java:579)
	at java.sql.DriverManager.getConnection(DriverManager.java:190)
	at org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl.getConnection(DriverManagerConnectionProviderImpl.java:173)
	at org.hibernate.internal.AbstractSessionImpl$NonContextualJdbcConnectionAccess.obtainConnection(AbstractSessionImpl.java:276)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:297)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.getConnection(LogicalConnectionImpl.java:169)
	at org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:67)
	at org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:160)
	at org.hibernate.internal.SessionImpl.beginTransaction(SessionImpl.java:1263)
	at org.myftp.gattserver.grass3.model.AbstractDAO.findAll(AbstractDAO.java:102)
	at org.myftp.gattserver.grass3.facades.ContentTagFacade.getAllContentTags(ContentTagFacade.java:34)
	at org.myftp.gattserver.grass3.pages.HomePage.createTagCloud(HomePage.java:117)
	at org.myftp.gattserver.grass3.pages.HomePage.createContent(HomePage.java:102)
	at org.myftp.gattserver.grass3.pages.template.GrassPage.init(GrassPage.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:344)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:295)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:130)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1479)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:461)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:314)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1129)
	at org.myftp.gattserver.grass3.pages.factories.template.PageFactory.createPage(PageFactory.java:43)
	at org.myftp.gattserver.grass3.GrassUI.init(GrassUI.java:65)
	at com.vaadin.ui.UI.doInit(UI.java:523)
	at com.vaadin.server.AbstractCommunicationManager.getBrowserDetailsUI(AbstractCommunicationManager.java:2457)
	at com.vaadin.server.AbstractCommunicationManager.handleBrowserDetailsRequest(AbstractCommunicationManager.java:2352)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:325)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:201)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:669)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1448)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:118)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:45)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(BasicAuthenticationFilter.java:150)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:183)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:192)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:160)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1419)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:455)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:557)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1075)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:384)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1009)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:255)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:154)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)
	at org.eclipse.jetty.server.Server.handle(Server.java:368)
	at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:488)
	at org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:932)
	at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:994)
	at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:640)
	at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235)
	at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:628)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)
	at java.lang.Thread.run(Thread.java:722)
Caused by: org.h2.jdbc.JdbcSQLException: The connection was not closed by the application and is garbage collected [90018-168]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:329)
	... 96 more
03-03 13:57:09 jdbc: java.lang.Exception: Open Stack Trace
	at org.h2.util.CloseWatcher.register(CloseWatcher.java:93)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:120)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:92)
	at org.h2.Driver.connect(Driver.java:72)
	at java.sql.DriverManager.getConnection(DriverManager.java:579)
	at java.sql.DriverManager.getConnection(DriverManager.java:190)
	at org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl.getConnection(DriverManagerConnectionProviderImpl.java:173)
	at org.hibernate.internal.AbstractSessionImpl$NonContextualJdbcConnectionAccess.obtainConnection(AbstractSessionImpl.java:276)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:297)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.getConnection(LogicalConnectionImpl.java:169)
	at org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:67)
	at org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:160)
	at org.hibernate.internal.SessionImpl.beginTransaction(SessionImpl.java:1263)
	at org.myftp.gattserver.grass3.model.AbstractDAO.findByID(AbstractDAO.java:133)
	at org.myftp.gattserver.grass3.facades.NodeFacade.getNodeById(NodeFacade.java:30)
	at org.myftp.gattserver.grass3.pages.template.ContentsTableFactory$ContentsTable.populateTable(ContentsTableFactory.java:118)
	at org.myftp.gattserver.grass3.pages.HomePage.createRecentMenus(HomePage.java:245)
	at org.myftp.gattserver.grass3.pages.HomePage.createContent(HomePage.java:99)
	at org.myftp.gattserver.grass3.pages.template.GrassPage.init(GrassPage.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:344)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:295)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:130)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1479)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:461)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:314)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1129)
	at org.myftp.gattserver.grass3.pages.factories.template.PageFactory.createPage(PageFactory.java:43)
	at org.myftp.gattserver.grass3.GrassUI.init(GrassUI.java:65)
	at com.vaadin.ui.UI.doInit(UI.java:523)
	at com.vaadin.server.AbstractCommunicationManager.getBrowserDetailsUI(AbstractCommunicationManager.java:2457)
	at com.vaadin.server.AbstractCommunicationManager.handleBrowserDetailsRequest(AbstractCommunicationManager.java:2352)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:325)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:201)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:669)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1448)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:118)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:45)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(BasicAuthenticationFilter.java:150)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:183)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:192)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:160)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1419)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:455)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:557)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1075)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:384)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1009)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:255)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:154)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)
	at org.eclipse.jetty.server.Server.handle(Server.java:368)
	at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:488)
	at org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:932)
	at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:994)
	at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:640)
	at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235)
	at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:628)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)
	at java.lang.Thread.run(Thread.java:722)

org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-168]
	at org.h2.message.DbException.get(DbException.java:169)
	at org.h2.message.DbException.get(DbException.java:146)
	at org.h2.message.DbException.get(DbException.java:135)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:172)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:119)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:92)
	at org.h2.Driver.connect(Driver.java:72)
	at java.sql.DriverManager.getConnection(DriverManager.java:579)
	at java.sql.DriverManager.getConnection(DriverManager.java:190)
	at org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl.getConnection(DriverManagerConnectionProviderImpl.java:173)
	at org.hibernate.internal.AbstractSessionImpl$NonContextualJdbcConnectionAccess.obtainConnection(AbstractSessionImpl.java:276)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:297)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.getConnection(LogicalConnectionImpl.java:169)
	at org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:67)
	at org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:160)
	at org.hibernate.internal.SessionImpl.beginTransaction(SessionImpl.java:1263)
	at org.myftp.gattserver.grass3.model.AbstractDAO.findAll(AbstractDAO.java:102)
	at org.myftp.gattserver.grass3.facades.ContentTagFacade.getAllContentTags(ContentTagFacade.java:34)
	at org.myftp.gattserver.grass3.pages.HomePage.createTagCloud(HomePage.java:117)
	at org.myftp.gattserver.grass3.pages.HomePage.createContent(HomePage.java:102)
	at org.myftp.gattserver.grass3.pages.template.GrassPage.init(GrassPage.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:344)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:295)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:130)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1479)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:461)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:314)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1129)
	at org.myftp.gattserver.grass3.pages.factories.template.PageFactory.createPage(PageFactory.java:43)
	at org.myftp.gattserver.grass3.GrassUI.init(GrassUI.java:65)
	at com.vaadin.ui.UI.doInit(UI.java:523)
	at com.vaadin.server.AbstractCommunicationManager.getBrowserDetailsUI(AbstractCommunicationManager.java:2457)
	at com.vaadin.server.AbstractCommunicationManager.handleBrowserDetailsRequest(AbstractCommunicationManager.java:2352)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:325)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:201)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:669)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1448)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:118)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:45)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(BasicAuthenticationFilter.java:150)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:183)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:192)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:160)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1419)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:455)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:557)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1075)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:384)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1009)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:255)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:154)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)
	at org.eclipse.jetty.server.Server.handle(Server.java:368)
	at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:488)
	at org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:932)
	at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:994)
	at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:640)
	at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235)
	at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:628)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)
	at java.lang.Thread.run(Thread.java:722)
Caused by: org.h2.jdbc.JdbcSQLException: The connection was not closed by the application and is garbage collected [90018-168]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:329)
	... 96 more
03-03 13:57:09 jdbc: java.lang.Exception: Open Stack Trace
	at org.h2.util.CloseWatcher.register(CloseWatcher.java:93)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:120)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:92)
	at org.h2.Driver.connect(Driver.java:72)
	at java.sql.DriverManager.getConnection(DriverManager.java:579)
	at java.sql.DriverManager.getConnection(DriverManager.java:190)
	at org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl.getConnection(DriverManagerConnectionProviderImpl.java:173)
	at org.hibernate.internal.AbstractSessionImpl$NonContextualJdbcConnectionAccess.obtainConnection(AbstractSessionImpl.java:276)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:297)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.getConnection(LogicalConnectionImpl.java:169)
	at org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:67)
	at org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:160)
	at org.hibernate.internal.SessionImpl.beginTransaction(SessionImpl.java:1263)
	at org.myftp.gattserver.grass3.model.AbstractDAO.findByID(AbstractDAO.java:133)
	at org.myftp.gattserver.grass3.facades.NodeFacade.getNodeById(NodeFacade.java:30)
	at org.myftp.gattserver.grass3.pages.template.ContentsTableFactory$ContentsTable.populateTable(ContentsTableFactory.java:118)
	at org.myftp.gattserver.grass3.pages.HomePage.createRecentMenus(HomePage.java:245)
	at org.myftp.gattserver.grass3.pages.HomePage.createContent(HomePage.java:99)
	at org.myftp.gattserver.grass3.pages.template.GrassPage.init(GrassPage.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:344)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:295)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:130)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1479)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:461)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:314)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1129)
	at org.myftp.gattserver.grass3.pages.factories.template.PageFactory.createPage(PageFactory.java:43)
	at org.myftp.gattserver.grass3.GrassUI.init(GrassUI.java:65)
	at com.vaadin.ui.UI.doInit(UI.java:523)
	at com.vaadin.server.AbstractCommunicationManager.getBrowserDetailsUI(AbstractCommunicationManager.java:2457)
	at com.vaadin.server.AbstractCommunicationManager.handleBrowserDetailsRequest(AbstractCommunicationManager.java:2352)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:325)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:201)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:669)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1448)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:118)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:45)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(BasicAuthenticationFilter.java:150)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:183)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:192)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:160)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1419)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:455)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:557)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1075)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:384)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1009)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:255)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:154)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)
	at org.eclipse.jetty.server.Server.handle(Server.java:368)
	at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:488)
	at org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:932)
	at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:994)
	at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:640)
	at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235)
	at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:628)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)
	at java.lang.Thread.run(Thread.java:722)

org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-168]
	at org.h2.message.DbException.get(DbException.java:169)
	at org.h2.message.DbException.get(DbException.java:146)
	at org.h2.message.DbException.get(DbException.java:135)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:172)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:119)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:92)
	at org.h2.Driver.connect(Driver.java:72)
	at java.sql.DriverManager.getConnection(DriverManager.java:579)
	at java.sql.DriverManager.getConnection(DriverManager.java:190)
	at org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl.getConnection(DriverManagerConnectionProviderImpl.java:173)
	at org.hibernate.internal.AbstractSessionImpl$NonContextualJdbcConnectionAccess.obtainConnection(AbstractSessionImpl.java:276)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:297)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.getConnection(LogicalConnectionImpl.java:169)
	at org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:67)
	at org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:160)
	at org.hibernate.internal.SessionImpl.beginTransaction(SessionImpl.java:1263)
	at org.myftp.gattserver.grass3.model.AbstractDAO.findAll(AbstractDAO.java:102)
	at org.myftp.gattserver.grass3.facades.ContentTagFacade.getAllContentTags(ContentTagFacade.java:34)
	at org.myftp.gattserver.grass3.pages.HomePage.createTagCloud(HomePage.java:117)
	at org.myftp.gattserver.grass3.pages.HomePage.createContent(HomePage.java:102)
	at org.myftp.gattserver.grass3.pages.template.GrassPage.init(GrassPage.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:344)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:295)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:130)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1479)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:461)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:314)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1129)
	at org.myftp.gattserver.grass3.pages.factories.template.PageFactory.createPage(PageFactory.java:43)
	at org.myftp.gattserver.grass3.GrassUI.init(GrassUI.java:65)
	at com.vaadin.ui.UI.doInit(UI.java:523)
	at com.vaadin.server.AbstractCommunicationManager.getBrowserDetailsUI(AbstractCommunicationManager.java:2457)
	at com.vaadin.server.AbstractCommunicationManager.handleBrowserDetailsRequest(AbstractCommunicationManager.java:2352)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:325)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:201)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:669)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1448)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:118)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:45)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(BasicAuthenticationFilter.java:150)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:183)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:192)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:160)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1419)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:455)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:557)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1075)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:384)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1009)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:255)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:154)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)
	at org.eclipse.jetty.server.Server.handle(Server.java:368)
	at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:488)
	at org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:932)
	at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:994)
	at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:640)
	at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235)
	at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:628)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)
	at java.lang.Thread.run(Thread.java:722)
Caused by: org.h2.jdbc.JdbcSQLException: The connection was not closed by the application and is garbage collected [90018-168]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:329)
	... 96 more
03-03 13:57:09 jdbc: java.lang.Exception: Open Stack Trace
	at org.h2.util.CloseWatcher.register(CloseWatcher.java:93)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:120)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:92)
	at org.h2.Driver.connect(Driver.java:72)
	at java.sql.DriverManager.getConnection(DriverManager.java:579)
	at java.sql.DriverManager.getConnection(DriverManager.java:190)
	at org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl.getConnection(DriverManagerConnectionProviderImpl.java:173)
	at org.hibernate.internal.AbstractSessionImpl$NonContextualJdbcConnectionAccess.obtainConnection(AbstractSessionImpl.java:276)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:297)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.getConnection(LogicalConnectionImpl.java:169)
	at org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:67)
	at org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:160)
	at org.hibernate.internal.SessionImpl.beginTransaction(SessionImpl.java:1263)
	at org.myftp.gattserver.grass3.model.AbstractDAO.findByID(AbstractDAO.java:133)
	at org.myftp.gattserver.grass3.facades.NodeFacade.getNodeById(NodeFacade.java:30)
	at org.myftp.gattserver.grass3.pages.template.ContentsTableFactory$ContentsTable.populateTable(ContentsTableFactory.java:118)
	at org.myftp.gattserver.grass3.pages.HomePage.createRecentMenus(HomePage.java:245)
	at org.myftp.gattserver.grass3.pages.HomePage.createContent(HomePage.java:99)
	at org.myftp.gattserver.grass3.pages.template.GrassPage.init(GrassPage.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:344)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:295)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:130)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1479)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:461)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:314)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1129)
	at org.myftp.gattserver.grass3.pages.factories.template.PageFactory.createPage(PageFactory.java:43)
	at org.myftp.gattserver.grass3.GrassUI.init(GrassUI.java:65)
	at com.vaadin.ui.UI.doInit(UI.java:523)
	at com.vaadin.server.AbstractCommunicationManager.getBrowserDetailsUI(AbstractCommunicationManager.java:2457)
	at com.vaadin.server.AbstractCommunicationManager.handleBrowserDetailsRequest(AbstractCommunicationManager.java:2352)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:325)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:201)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:669)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1448)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:118)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:45)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(BasicAuthenticationFilter.java:150)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:183)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:192)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:160)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1419)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:455)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:557)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1075)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:384)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1009)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:255)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:154)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)
	at org.eclipse.jetty.server.Server.handle(Server.java:368)
	at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:488)
	at org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:932)
	at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:994)
	at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:640)
	at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235)
	at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:628)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)
	at java.lang.Thread.run(Thread.java:722)

org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-168]
	at org.h2.message.DbException.get(DbException.java:169)
	at org.h2.message.DbException.get(DbException.java:146)
	at org.h2.message.DbException.get(DbException.java:135)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:172)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:119)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:92)
	at org.h2.Driver.connect(Driver.java:72)
	at java.sql.DriverManager.getConnection(DriverManager.java:579)
	at java.sql.DriverManager.getConnection(DriverManager.java:190)
	at org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl.getConnection(DriverManagerConnectionProviderImpl.java:173)
	at org.hibernate.internal.AbstractSessionImpl$NonContextualJdbcConnectionAccess.obtainConnection(AbstractSessionImpl.java:276)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:297)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.getConnection(LogicalConnectionImpl.java:169)
	at org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:67)
	at org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:160)
	at org.hibernate.internal.SessionImpl.beginTransaction(SessionImpl.java:1263)
	at org.myftp.gattserver.grass3.model.AbstractDAO.findAll(AbstractDAO.java:102)
	at org.myftp.gattserver.grass3.facades.ContentTagFacade.getAllContentTags(ContentTagFacade.java:34)
	at org.myftp.gattserver.grass3.pages.HomePage.createTagCloud(HomePage.java:117)
	at org.myftp.gattserver.grass3.pages.HomePage.createContent(HomePage.java:102)
	at org.myftp.gattserver.grass3.pages.template.GrassPage.init(GrassPage.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:344)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:295)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:130)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1479)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:461)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:314)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1129)
	at org.myftp.gattserver.grass3.pages.factories.template.PageFactory.createPage(PageFactory.java:43)
	at org.myftp.gattserver.grass3.GrassUI.init(GrassUI.java:65)
	at com.vaadin.ui.UI.doInit(UI.java:523)
	at com.vaadin.server.AbstractCommunicationManager.getBrowserDetailsUI(AbstractCommunicationManager.java:2457)
	at com.vaadin.server.AbstractCommunicationManager.handleBrowserDetailsRequest(AbstractCommunicationManager.java:2352)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:325)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:201)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:669)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1448)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:118)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:45)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(BasicAuthenticationFilter.java:150)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:183)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:192)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:160)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1419)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:455)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:557)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1075)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:384)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1009)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:255)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:154)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)
	at org.eclipse.jetty.server.Server.handle(Server.java:368)
	at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:488)
	at org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:932)
	at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:994)
	at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:640)
	at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235)
	at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:628)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)
	at java.lang.Thread.run(Thread.java:722)
Caused by: org.h2.jdbc.JdbcSQLException: The connection was not closed by the application and is garbage collected [90018-168]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:329)
	... 96 more
03-03 13:57:09 jdbc: java.lang.Exception: Open Stack Trace
	at org.h2.util.CloseWatcher.register(CloseWatcher.java:93)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:120)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:92)
	at org.h2.Driver.connect(Driver.java:72)
	at java.sql.DriverManager.getConnection(DriverManager.java:579)
	at java.sql.DriverManager.getConnection(DriverManager.java:190)
	at org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl.getConnection(DriverManagerConnectionProviderImpl.java:173)
	at org.hibernate.internal.AbstractSessionImpl$NonContextualJdbcConnectionAccess.obtainConnection(AbstractSessionImpl.java:276)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:297)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.getConnection(LogicalConnectionImpl.java:169)
	at org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:67)
	at org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:160)
	at org.hibernate.internal.SessionImpl.beginTransaction(SessionImpl.java:1263)
	at org.myftp.gattserver.grass3.model.AbstractDAO.findByID(AbstractDAO.java:133)
	at org.myftp.gattserver.grass3.facades.NodeFacade.getNodeById(NodeFacade.java:30)
	at org.myftp.gattserver.grass3.pages.template.ContentsTableFactory$ContentsTable.populateTable(ContentsTableFactory.java:118)
	at org.myftp.gattserver.grass3.pages.HomePage.createRecentMenus(HomePage.java:245)
	at org.myftp.gattserver.grass3.pages.HomePage.createContent(HomePage.java:99)
	at org.myftp.gattserver.grass3.pages.template.GrassPage.init(GrassPage.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:344)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:295)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:130)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1479)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:461)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:314)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1129)
	at org.myftp.gattserver.grass3.pages.factories.template.PageFactory.createPage(PageFactory.java:43)
	at org.myftp.gattserver.grass3.GrassUI.init(GrassUI.java:65)
	at com.vaadin.ui.UI.doInit(UI.java:523)
	at com.vaadin.server.AbstractCommunicationManager.getBrowserDetailsUI(AbstractCommunicationManager.java:2457)
	at com.vaadin.server.AbstractCommunicationManager.handleBrowserDetailsRequest(AbstractCommunicationManager.java:2352)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:325)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:201)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:669)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1448)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:118)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:45)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(BasicAuthenticationFilter.java:150)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:183)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:192)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:160)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1419)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:455)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:557)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1075)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:384)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1009)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:255)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:154)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)
	at org.eclipse.jetty.server.Server.handle(Server.java:368)
	at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:488)
	at org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:932)
	at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:994)
	at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:640)
	at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235)
	at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:628)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)
	at java.lang.Thread.run(Thread.java:722)

org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-168]
	at org.h2.message.DbException.get(DbException.java:169)
	at org.h2.message.DbException.get(DbException.java:146)
	at org.h2.message.DbException.get(DbException.java:135)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:172)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:119)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:92)
	at org.h2.Driver.connect(Driver.java:72)
	at java.sql.DriverManager.getConnection(DriverManager.java:579)
	at java.sql.DriverManager.getConnection(DriverManager.java:190)
	at org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl.getConnection(DriverManagerConnectionProviderImpl.java:173)
	at org.hibernate.internal.AbstractSessionImpl$NonContextualJdbcConnectionAccess.obtainConnection(AbstractSessionImpl.java:276)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:297)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.getConnection(LogicalConnectionImpl.java:169)
	at org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:67)
	at org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:160)
	at org.hibernate.internal.SessionImpl.beginTransaction(SessionImpl.java:1263)
	at org.myftp.gattserver.grass3.model.AbstractDAO.findAll(AbstractDAO.java:102)
	at org.myftp.gattserver.grass3.facades.ContentTagFacade.getAllContentTags(ContentTagFacade.java:34)
	at org.myftp.gattserver.grass3.pages.HomePage.createTagCloud(HomePage.java:117)
	at org.myftp.gattserver.grass3.pages.HomePage.createContent(HomePage.java:102)
	at org.myftp.gattserver.grass3.pages.template.GrassPage.init(GrassPage.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:344)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:295)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:130)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1479)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:461)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:314)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1129)
	at org.myftp.gattserver.grass3.pages.factories.template.PageFactory.createPage(PageFactory.java:43)
	at org.myftp.gattserver.grass3.GrassUI.init(GrassUI.java:65)
	at com.vaadin.ui.UI.doInit(UI.java:523)
	at com.vaadin.server.AbstractCommunicationManager.getBrowserDetailsUI(AbstractCommunicationManager.java:2457)
	at com.vaadin.server.AbstractCommunicationManager.handleBrowserDetailsRequest(AbstractCommunicationManager.java:2352)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:325)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:201)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:669)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1448)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:118)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:45)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(BasicAuthenticationFilter.java:150)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:183)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:192)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:160)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1419)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:455)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:557)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1075)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:384)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1009)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:255)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:154)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)
	at org.eclipse.jetty.server.Server.handle(Server.java:368)
	at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:488)
	at org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:932)
	at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:994)
	at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:640)
	at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235)
	at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:628)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)
	at java.lang.Thread.run(Thread.java:722)
Caused by: org.h2.jdbc.JdbcSQLException: The connection was not closed by the application and is garbage collected [90018-168]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:329)
	... 96 more
03-03 13:57:09 jdbc: java.lang.Exception: Open Stack Trace
	at org.h2.util.CloseWatcher.register(CloseWatcher.java:93)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:120)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:92)
	at org.h2.Driver.connect(Driver.java:72)
	at java.sql.DriverManager.getConnection(DriverManager.java:579)
	at java.sql.DriverManager.getConnection(DriverManager.java:190)
	at org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl.getConnection(DriverManagerConnectionProviderImpl.java:173)
	at org.hibernate.internal.AbstractSessionImpl$NonContextualJdbcConnectionAccess.obtainConnection(AbstractSessionImpl.java:276)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:297)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.getConnection(LogicalConnectionImpl.java:169)
	at org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:67)
	at org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:160)
	at org.hibernate.internal.SessionImpl.beginTransaction(SessionImpl.java:1263)
	at org.myftp.gattserver.grass3.model.AbstractDAO.findByID(AbstractDAO.java:133)
	at org.myftp.gattserver.grass3.facades.NodeFacade.getNodeById(NodeFacade.java:30)
	at org.myftp.gattserver.grass3.pages.template.ContentsTableFactory$ContentsTable.populateTable(ContentsTableFactory.java:118)
	at org.myftp.gattserver.grass3.pages.HomePage.createRecentMenus(HomePage.java:245)
	at org.myftp.gattserver.grass3.pages.HomePage.createContent(HomePage.java:99)
	at org.myftp.gattserver.grass3.pages.template.GrassPage.init(GrassPage.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:344)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:295)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:130)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1479)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:461)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:314)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1129)
	at org.myftp.gattserver.grass3.pages.factories.template.PageFactory.createPage(PageFactory.java:43)
	at org.myftp.gattserver.grass3.GrassUI.init(GrassUI.java:65)
	at com.vaadin.ui.UI.doInit(UI.java:523)
	at com.vaadin.server.AbstractCommunicationManager.getBrowserDetailsUI(AbstractCommunicationManager.java:2457)
	at com.vaadin.server.AbstractCommunicationManager.handleBrowserDetailsRequest(AbstractCommunicationManager.java:2352)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:325)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:201)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:669)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1448)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:118)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:45)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(BasicAuthenticationFilter.java:150)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:183)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:192)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:160)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1419)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:455)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:557)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1075)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:384)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1009)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:255)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:154)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)
	at org.eclipse.jetty.server.Server.handle(Server.java:368)
	at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:488)
	at org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:932)
	at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:994)
	at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:640)
	at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235)
	at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:628)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)
	at java.lang.Thread.run(Thread.java:722)

org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-168]
	at org.h2.message.DbException.get(DbException.java:169)
	at org.h2.message.DbException.get(DbException.java:146)
	at org.h2.message.DbException.get(DbException.java:135)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:172)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:119)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:92)
	at org.h2.Driver.connect(Driver.java:72)
	at java.sql.DriverManager.getConnection(DriverManager.java:579)
	at java.sql.DriverManager.getConnection(DriverManager.java:190)
	at org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl.getConnection(DriverManagerConnectionProviderImpl.java:173)
	at org.hibernate.internal.AbstractSessionImpl$NonContextualJdbcConnectionAccess.obtainConnection(AbstractSessionImpl.java:276)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:297)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.getConnection(LogicalConnectionImpl.java:169)
	at org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:67)
	at org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:160)
	at org.hibernate.internal.SessionImpl.beginTransaction(SessionImpl.java:1263)
	at org.myftp.gattserver.grass3.model.AbstractDAO.findAll(AbstractDAO.java:102)
	at org.myftp.gattserver.grass3.facades.ContentTagFacade.getAllContentTags(ContentTagFacade.java:34)
	at org.myftp.gattserver.grass3.pages.HomePage.createTagCloud(HomePage.java:117)
	at org.myftp.gattserver.grass3.pages.HomePage.createContent(HomePage.java:102)
	at org.myftp.gattserver.grass3.pages.template.GrassPage.init(GrassPage.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:344)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:295)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:130)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1479)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:461)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:314)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1129)
	at org.myftp.gattserver.grass3.pages.factories.template.PageFactory.createPage(PageFactory.java:43)
	at org.myftp.gattserver.grass3.GrassUI.init(GrassUI.java:65)
	at com.vaadin.ui.UI.doInit(UI.java:523)
	at com.vaadin.server.AbstractCommunicationManager.getBrowserDetailsUI(AbstractCommunicationManager.java:2457)
	at com.vaadin.server.AbstractCommunicationManager.handleBrowserDetailsRequest(AbstractCommunicationManager.java:2352)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:325)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:201)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:669)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1448)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:118)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:45)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(BasicAuthenticationFilter.java:150)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:183)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:192)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:160)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1419)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:455)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:557)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1075)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:384)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1009)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:255)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:154)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)
	at org.eclipse.jetty.server.Server.handle(Server.java:368)
	at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:488)
	at org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:932)
	at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:994)
	at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:640)
	at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235)
	at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:628)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)
	at java.lang.Thread.run(Thread.java:722)
Caused by: org.h2.jdbc.JdbcSQLException: The connection was not closed by the application and is garbage collected [90018-168]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:329)
	... 96 more
03-03 13:57:09 jdbc: java.lang.Exception: Open Stack Trace
	at org.h2.util.CloseWatcher.register(CloseWatcher.java:93)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:120)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:92)
	at org.h2.Driver.connect(Driver.java:72)
	at java.sql.DriverManager.getConnection(DriverManager.java:579)
	at java.sql.DriverManager.getConnection(DriverManager.java:190)
	at org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl.getConnection(DriverManagerConnectionProviderImpl.java:173)
	at org.hibernate.internal.AbstractSessionImpl$NonContextualJdbcConnectionAccess.obtainConnection(AbstractSessionImpl.java:276)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:297)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.getConnection(LogicalConnectionImpl.java:169)
	at org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:67)
	at org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:160)
	at org.hibernate.internal.SessionImpl.beginTransaction(SessionImpl.java:1263)
	at org.myftp.gattserver.grass3.model.AbstractDAO.findByID(AbstractDAO.java:133)
	at org.myftp.gattserver.grass3.facades.NodeFacade.getNodeById(NodeFacade.java:30)
	at org.myftp.gattserver.grass3.pages.template.ContentsTableFactory$ContentsTable.populateTable(ContentsTableFactory.java:118)
	at org.myftp.gattserver.grass3.pages.HomePage.createRecentMenus(HomePage.java:245)
	at org.myftp.gattserver.grass3.pages.HomePage.createContent(HomePage.java:99)
	at org.myftp.gattserver.grass3.pages.template.GrassPage.init(GrassPage.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:344)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:295)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:130)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1479)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:461)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:314)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1129)
	at org.myftp.gattserver.grass3.pages.factories.template.PageFactory.createPage(PageFactory.java:43)
	at org.myftp.gattserver.grass3.GrassUI.init(GrassUI.java:65)
	at com.vaadin.ui.UI.doInit(UI.java:523)
	at com.vaadin.server.AbstractCommunicationManager.getBrowserDetailsUI(AbstractCommunicationManager.java:2457)
	at com.vaadin.server.AbstractCommunicationManager.handleBrowserDetailsRequest(AbstractCommunicationManager.java:2352)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:325)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:201)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:669)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1448)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:118)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:45)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(BasicAuthenticationFilter.java:150)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:183)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:192)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:160)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1419)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:455)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:557)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1075)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:384)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1009)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:255)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:154)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)
	at org.eclipse.jetty.server.Server.handle(Server.java:368)
	at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:488)
	at org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:932)
	at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:994)
	at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:640)
	at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235)
	at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:628)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)
	at java.lang.Thread.run(Thread.java:722)

org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-168]
	at org.h2.message.DbException.get(DbException.java:169)
	at org.h2.message.DbException.get(DbException.java:146)
	at org.h2.message.DbException.get(DbException.java:135)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:172)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:119)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:92)
	at org.h2.Driver.connect(Driver.java:72)
	at java.sql.DriverManager.getConnection(DriverManager.java:579)
	at java.sql.DriverManager.getConnection(DriverManager.java:190)
	at org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl.getConnection(DriverManagerConnectionProviderImpl.java:173)
	at org.hibernate.internal.AbstractSessionImpl$NonContextualJdbcConnectionAccess.obtainConnection(AbstractSessionImpl.java:276)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:297)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.getConnection(LogicalConnectionImpl.java:169)
	at org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:67)
	at org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:160)
	at org.hibernate.internal.SessionImpl.beginTransaction(SessionImpl.java:1263)
	at org.myftp.gattserver.grass3.model.AbstractDAO.findAll(AbstractDAO.java:102)
	at org.myftp.gattserver.grass3.facades.ContentTagFacade.getAllContentTags(ContentTagFacade.java:34)
	at org.myftp.gattserver.grass3.pages.HomePage.createTagCloud(HomePage.java:117)
	at org.myftp.gattserver.grass3.pages.HomePage.createContent(HomePage.java:102)
	at org.myftp.gattserver.grass3.pages.template.GrassPage.init(GrassPage.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:344)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:295)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:130)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1479)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:461)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:314)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1129)
	at org.myftp.gattserver.grass3.pages.factories.template.PageFactory.createPage(PageFactory.java:43)
	at org.myftp.gattserver.grass3.GrassUI.init(GrassUI.java:65)
	at com.vaadin.ui.UI.doInit(UI.java:523)
	at com.vaadin.server.AbstractCommunicationManager.getBrowserDetailsUI(AbstractCommunicationManager.java:2457)
	at com.vaadin.server.AbstractCommunicationManager.handleBrowserDetailsRequest(AbstractCommunicationManager.java:2352)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:325)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:201)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:669)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1448)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:118)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:45)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(BasicAuthenticationFilter.java:150)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:183)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:192)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:160)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1419)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:455)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:557)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1075)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:384)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1009)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:255)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:154)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)
	at org.eclipse.jetty.server.Server.handle(Server.java:368)
	at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:488)
	at org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:932)
	at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:994)
	at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:640)
	at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235)
	at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:628)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)
	at java.lang.Thread.run(Thread.java:722)
Caused by: org.h2.jdbc.JdbcSQLException: The connection was not closed by the application and is garbage collected [90018-168]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:329)
	... 96 more
03-03 13:57:09 jdbc: 
/**/conn103.getAutoCommit();
03-03 13:57:09 jdbc: 
/**/conn103.setAutoCommit(false);
03-03 13:57:09 jdbc: SESSION_SET_AUTOCOMMIT 0
03-03 13:57:09 jdbc: 
/**/conn103.getAutoCommit();
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1149 = conn103.prepareStatement("select this_.id as id2_0_, this_.name as name2_0_ from CONTENT_TAG this_");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 0
03-03 13:57:09 jdbc: 
/**/ResultSet rs1150 = prep1149.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 0
03-03 13:57:09 jdbc: RESULT_CLOSE 1
03-03 13:57:09 jdbc: 
/**/rs1150.next();
03-03 13:57:09 jdbc: 
/**/rs1150.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.getString("name2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.next();
03-03 13:57:09 jdbc: 
/**/rs1150.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.getString("name2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.next();
03-03 13:57:09 jdbc: 
/**/rs1150.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.getString("name2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.next();
03-03 13:57:09 jdbc: 
/**/rs1150.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.getString("name2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.next();
03-03 13:57:09 jdbc: 
/**/rs1150.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.getString("name2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.next();
03-03 13:57:09 jdbc: 
/**/rs1150.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.getString("name2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.next();
03-03 13:57:09 jdbc: 
/**/rs1150.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.getString("name2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.next();
03-03 13:57:09 jdbc: 
/**/rs1150.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.getString("name2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.next();
03-03 13:57:09 jdbc: 
/**/rs1150.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.getString("name2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.next();
03-03 13:57:09 jdbc: 
/**/rs1150.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.getString("name2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.next();
03-03 13:57:09 jdbc: 
/**/rs1150.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.getString("name2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.next();
03-03 13:57:09 jdbc: 
/**/rs1150.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.getString("name2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.next();
03-03 13:57:09 jdbc: 
/**/rs1150.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.getString("name2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.next();
03-03 13:57:09 jdbc: 
/**/rs1150.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.getString("name2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.next();
03-03 13:57:09 jdbc: 
/**/rs1150.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.getString("name2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.next();
03-03 13:57:09 jdbc: 
/**/rs1150.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.getString("name2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.next();
03-03 13:57:09 jdbc: 
/**/rs1150.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.getString("name2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.next();
03-03 13:57:09 jdbc: 
/**/rs1150.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.getString("name2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.next();
03-03 13:57:09 jdbc: 
/**/rs1150.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.getString("name2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.next();
03-03 13:57:09 jdbc: 
/**/rs1150.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.getString("name2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.next();
03-03 13:57:09 jdbc: 
/**/rs1150.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.getString("name2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.next();
03-03 13:57:09 jdbc: 
/**/rs1150.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.getString("name2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.next();
03-03 13:57:09 jdbc: 
/**/rs1150.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.getString("name2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.next();
03-03 13:57:09 jdbc: 
/**/rs1150.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.getString("name2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.next();
03-03 13:57:09 jdbc: 
/**/rs1150.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.getString("name2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.next();
03-03 13:57:09 jdbc: 
/**/rs1150.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.getString("name2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.next();
03-03 13:57:09 jdbc: 
/**/rs1150.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.getString("name2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.next();
03-03 13:57:09 jdbc: 
/**/rs1150.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.getString("name2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.next();
03-03 13:57:09 jdbc: 
/**/rs1150.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.getString("name2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.next();
03-03 13:57:09 jdbc: 
/**/rs1150.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.getString("name2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.next();
03-03 13:57:09 jdbc: 
/**/rs1150.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.getString("name2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.next();
03-03 13:57:09 jdbc: 
/**/rs1150.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.getString("name2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.next();
03-03 13:57:09 jdbc: 
/**/rs1150.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.getString("name2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.next();
03-03 13:57:09 jdbc: 
/**/rs1150.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.getString("name2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.next();
03-03 13:57:09 jdbc: 
/**/rs1150.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.getString("name2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.next();
03-03 13:57:09 jdbc: 
/**/rs1150.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.getString("name2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.next();
03-03 13:57:09 jdbc: 
/**/rs1150.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.getString("name2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.next();
03-03 13:57:09 jdbc: 
/**/rs1150.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.getString("name2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.next();
03-03 13:57:09 jdbc: 
/**/rs1150.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.getString("name2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.next();
03-03 13:57:09 jdbc: 
/**/rs1150.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.getString("name2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.next();
03-03 13:57:09 jdbc: 
/**/rs1150.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.getString("name2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.next();
03-03 13:57:09 jdbc: 
/**/rs1150.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.getString("name2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.next();
03-03 13:57:09 jdbc: 
/**/rs1150.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.getString("name2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.next();
03-03 13:57:09 jdbc: 
/**/rs1150.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.getString("name2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.next();
03-03 13:57:09 jdbc: 
/**/rs1150.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.getString("name2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.next();
03-03 13:57:09 jdbc: 
/**/rs1150.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.getString("name2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.next();
03-03 13:57:09 jdbc: 
/**/rs1150.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.getString("name2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.next();
03-03 13:57:09 jdbc: 
/**/rs1150.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.getString("name2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.next();
03-03 13:57:09 jdbc: 
/**/rs1150.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.getString("name2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.next();
03-03 13:57:09 jdbc: 
/**/rs1150.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.getString("name2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.next();
03-03 13:57:09 jdbc: 
/**/rs1150.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.getString("name2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.next();
03-03 13:57:09 jdbc: 
/**/rs1150.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.getString("name2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.next();
03-03 13:57:09 jdbc: 
/**/rs1150.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.getString("name2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.next();
03-03 13:57:09 jdbc: 
/**/rs1150.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.getString("name2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.next();
03-03 13:57:09 jdbc: 
/**/rs1150.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.getString("name2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.next();
03-03 13:57:09 jdbc: 
/**/rs1150.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.getString("name2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.next();
03-03 13:57:09 jdbc: 
/**/rs1150.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.getString("name2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.next();
03-03 13:57:09 jdbc: 
/**/rs1150.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.getString("name2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.next();
03-03 13:57:09 jdbc: 
/**/rs1150.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.getString("name2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.next();
03-03 13:57:09 jdbc: 
/**/rs1150.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.getString("name2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.next();
03-03 13:57:09 jdbc: 
/**/rs1150.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.getString("name2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.next();
03-03 13:57:09 jdbc: 
/**/rs1150.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.getString("name2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.next();
03-03 13:57:09 jdbc: 
/**/rs1150.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.getString("name2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.next();
03-03 13:57:09 jdbc: 
/**/rs1150.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.getString("name2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.next();
03-03 13:57:09 jdbc: 
/**/rs1150.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.getString("name2_0_");
03-03 13:57:09 jdbc: 
/**/rs1150.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1150.next();
03-03 13:57:09 jdbc: 
/**/rs1150.close();
03-03 13:57:09 jdbc: 
/**/prep1149.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1149.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 2
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 2
03-03 13:57:09 jdbc: RESULT_CLOSE 3
03-03 13:57:09 jdbc: 
/**/prep1149.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 0
03-03 13:57:09 jdbc: 
/**/conn103.commit();
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 4
03-03 13:57:09 jdbc: COMMAND_EXECUTE_UPDATE 4
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1150 = conn103.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 5
03-03 13:57:09 jdbc: 
/**/prep1150.setLong(1, 9L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1151 = prep1150.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 5
03-03 13:57:09 jdbc: RESULT_CLOSE 6
03-03 13:57:09 jdbc: 
/**/rs1151.next();
03-03 13:57:09 jdbc: 
/**/rs1151.getLong("id1_0_");
03-03 13:57:09 jdbc: 
/**/rs1151.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1151.getLong("id0_1_");
03-03 13:57:09 jdbc: 
/**/rs1151.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1151.getLong("id4_2_");
03-03 13:57:09 jdbc: 
/**/rs1151.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1151.getLong("id4_3_");
03-03 13:57:09 jdbc: 
/**/rs1151.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1151.getLong("author8_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1151.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1151.getLong("contentId1_0_");
03-03 13:57:09 jdbc: 
/**/rs1151.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1151.getString("contentR3_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1151.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1151.getTimestamp("creation4_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1151.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1151.getTimestamp("lastModi5_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1151.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1151.getString("name1_0_");
03-03 13:57:09 jdbc: 
/**/rs1151.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1151.getLong("parent9_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1151.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1151.getBoolean("publicated1_0_");
03-03 13:57:09 jdbc: 
/**/rs1151.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1151.getBoolean("confirmed0_1_");
03-03 13:57:09 jdbc: 
/**/rs1151.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1151.getString("email0_1_");
03-03 13:57:09 jdbc: 
/**/rs1151.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1151.getTimestamp("LAST4_0_1_");
03-03 13:57:09 jdbc: 
/**/rs1151.getString("name0_1_");
03-03 13:57:09 jdbc: 
/**/rs1151.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1151.getString("password0_1_");
03-03 13:57:09 jdbc: 
/**/rs1151.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1151.getTimestamp("REGISTRA7_0_1_");
03-03 13:57:09 jdbc: 
/**/rs1151.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1151.getString("name4_2_");
03-03 13:57:09 jdbc: 
/**/rs1151.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1151.getLong("parent3_4_2_");
03-03 13:57:09 jdbc: 
/**/rs1151.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1151.getString("name4_3_");
03-03 13:57:09 jdbc: 
/**/rs1151.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1151.getLong("parent3_4_3_");
03-03 13:57:09 jdbc: 
/**/rs1151.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1151.getLong("contentT2_2_4_");
03-03 13:57:09 jdbc: 
/**/rs1151.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1151.getLong("contentN1_4_");
03-03 13:57:09 jdbc: 
/**/rs1151.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1151.next();
03-03 13:57:09 jdbc: 
/**/rs1151.close();
03-03 13:57:09 jdbc: 
/**/prep1150.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1150.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 2
03-03 13:57:09 jdbc: RESULT_CLOSE 7
03-03 13:57:09 jdbc: 
/**/prep1150.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 5
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1151 = conn103.prepareStatement("select node0_.id as id4_1_, node0_.name as name4_1_, node0_.parent_id as parent3_4_1_, node1_.id as id4_0_, node1_.name as name4_0_, node1_.parent_id as parent3_4_0_ from NODE node0_ left outer join NODE node1_ on node0_.parent_id=node1_.id where node0_.id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 8
03-03 13:57:09 jdbc: 
/**/prep1151.setLong(1, 1L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1152 = prep1151.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 8
03-03 13:57:09 jdbc: RESULT_CLOSE 9
03-03 13:57:09 jdbc: 
/**/rs1152.next();
03-03 13:57:09 jdbc: 
/**/rs1152.getLong("id4_0_");
03-03 13:57:09 jdbc: 
/**/rs1152.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1152.getString("name4_1_");
03-03 13:57:09 jdbc: 
/**/rs1152.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1152.getLong("parent3_4_1_");
03-03 13:57:09 jdbc: 
/**/rs1152.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1152.next();
03-03 13:57:09 jdbc: 
/**/rs1152.close();
03-03 13:57:09 jdbc: 
/**/prep1151.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1151.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 2
03-03 13:57:09 jdbc: RESULT_CLOSE 10
03-03 13:57:09 jdbc: 
/**/prep1151.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 8
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1152 = conn103.prepareStatement("select roles0_.User_id as User1_0_0_, roles0_.roles as roles0_ from User_roles roles0_ where roles0_.User_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 11
03-03 13:57:09 jdbc: 
/**/prep1152.setLong(1, 1L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1153 = prep1152.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 11
03-03 13:57:09 jdbc: RESULT_CLOSE 12
03-03 13:57:09 jdbc: 
/**/rs1153.next();
03-03 13:57:09 jdbc: 
/**/rs1153.getLong("User1_0_0_");
03-03 13:57:09 jdbc: 
/**/rs1153.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1153.getObject("roles0_");
03-03 13:57:09 jdbc: 
/**/rs1153.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1153.next();
03-03 13:57:09 jdbc: 
/**/rs1153.getLong("User1_0_0_");
03-03 13:57:09 jdbc: 
/**/rs1153.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1153.getObject("roles0_");
03-03 13:57:09 jdbc: 
/**/rs1153.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1153.next();
03-03 13:57:09 jdbc: 
/**/rs1153.getLong("User1_0_0_");
03-03 13:57:09 jdbc: 
/**/rs1153.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1153.getObject("roles0_");
03-03 13:57:09 jdbc: 
/**/rs1153.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1153.next();
03-03 13:57:09 jdbc: 
/**/rs1153.getLong("User1_0_0_");
03-03 13:57:09 jdbc: 
/**/rs1153.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1153.getObject("roles0_");
03-03 13:57:09 jdbc: 
/**/rs1153.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1153.next();
03-03 13:57:09 jdbc: 
/**/rs1153.getLong("User1_0_0_");
03-03 13:57:09 jdbc: 
/**/rs1153.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1153.getObject("roles0_");
03-03 13:57:09 jdbc: 
/**/rs1153.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1153.next();
03-03 13:57:09 jdbc: 
/**/rs1153.close();
03-03 13:57:09 jdbc: 
/**/prep1152.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1152.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 2
03-03 13:57:09 jdbc: RESULT_CLOSE 13
03-03 13:57:09 jdbc: 
/**/prep1152.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 11
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1153 = conn103.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 14
03-03 13:57:09 jdbc: 
/**/prep1153.setLong(1, 4L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1154 = prep1153.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 14
03-03 13:57:09 jdbc: RESULT_CLOSE 15
03-03 13:57:09 jdbc: 
/**/rs1154.next();
03-03 13:57:09 jdbc: 
/**/rs1154.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1154.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1154.getLong("contentN1_1_1_");
03-03 13:57:09 jdbc: 
/**/rs1154.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1154.getLong("contentT2_1_");
03-03 13:57:09 jdbc: 
/**/rs1154.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1154.next();
03-03 13:57:09 jdbc: 
/**/rs1154.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1154.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1154.getLong("contentN1_1_1_");
03-03 13:57:09 jdbc: 
/**/rs1154.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1154.getLong("contentT2_1_");
03-03 13:57:09 jdbc: 
/**/rs1154.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1154.next();
03-03 13:57:09 jdbc: 
/**/rs1154.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1154.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1154.getLong("contentN1_1_1_");
03-03 13:57:09 jdbc: 
/**/rs1154.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1154.getLong("contentT2_1_");
03-03 13:57:09 jdbc: 
/**/rs1154.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1154.next();
03-03 13:57:09 jdbc: 
/**/rs1154.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1154.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1154.getLong("contentN1_1_1_");
03-03 13:57:09 jdbc: 
/**/rs1154.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1154.getLong("contentT2_1_");
03-03 13:57:09 jdbc: 
/**/rs1154.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1154.next();
03-03 13:57:09 jdbc: 
/**/rs1154.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1154.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1154.getLong("contentN1_1_1_");
03-03 13:57:09 jdbc: 
/**/rs1154.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1154.getLong("contentT2_1_");
03-03 13:57:09 jdbc: 
/**/rs1154.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1154.next();
03-03 13:57:09 jdbc: 
/**/rs1154.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1154.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1154.getLong("contentN1_1_1_");
03-03 13:57:09 jdbc: 
/**/rs1154.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1154.getLong("contentT2_1_");
03-03 13:57:09 jdbc: 
/**/rs1154.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1154.next();
03-03 13:57:09 jdbc: 
/**/rs1154.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1154.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1154.getLong("contentN1_1_1_");
03-03 13:57:09 jdbc: 
/**/rs1154.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1154.getLong("contentT2_1_");
03-03 13:57:09 jdbc: 
/**/rs1154.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1154.next();
03-03 13:57:09 jdbc: 
/**/rs1154.close();
03-03 13:57:09 jdbc: 
/**/prep1153.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1153.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 2
03-03 13:57:09 jdbc: RESULT_CLOSE 16
03-03 13:57:09 jdbc: 
/**/prep1153.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 14
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1154 = conn103.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 17
03-03 13:57:09 jdbc: 
/**/prep1154.setLong(1, 10L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1155 = prep1154.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 17
03-03 13:57:09 jdbc: RESULT_CLOSE 18
03-03 13:57:09 jdbc: 
/**/rs1155.next();
03-03 13:57:09 jdbc: 
/**/rs1155.getLong("id1_0_");
03-03 13:57:09 jdbc: 
/**/rs1155.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1155.getLong("id0_1_");
03-03 13:57:09 jdbc: 
/**/rs1155.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1155.getLong("id4_2_");
03-03 13:57:09 jdbc: 
/**/rs1155.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1155.getLong("id4_3_");
03-03 13:57:09 jdbc: 
/**/rs1155.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1155.getLong("contentT2_2_4_");
03-03 13:57:09 jdbc: 
/**/rs1155.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1155.getLong("contentN1_4_");
03-03 13:57:09 jdbc: 
/**/rs1155.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1155.next();
03-03 13:57:09 jdbc: 
/**/rs1155.close();
03-03 13:57:09 jdbc: 
/**/prep1154.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1154.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 2
03-03 13:57:09 jdbc: RESULT_CLOSE 19
03-03 13:57:09 jdbc: 
/**/prep1154.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 17
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1155 = conn103.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 20
03-03 13:57:09 jdbc: 
/**/prep1155.setLong(1, 11L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1156 = prep1155.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 20
03-03 13:57:09 jdbc: RESULT_CLOSE 21
03-03 13:57:09 jdbc: 
/**/rs1156.next();
03-03 13:57:09 jdbc: 
/**/rs1156.getLong("id1_0_");
03-03 13:57:09 jdbc: 
/**/rs1156.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1156.getLong("id0_1_");
03-03 13:57:09 jdbc: 
/**/rs1156.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1156.getLong("id4_2_");
03-03 13:57:09 jdbc: 
/**/rs1156.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1156.getLong("id4_3_");
03-03 13:57:09 jdbc: 
/**/rs1156.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1156.getLong("contentT2_2_4_");
03-03 13:57:09 jdbc: 
/**/rs1156.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1156.getLong("contentN1_4_");
03-03 13:57:09 jdbc: 
/**/rs1156.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1156.next();
03-03 13:57:09 jdbc: 
/**/rs1156.close();
03-03 13:57:09 jdbc: 
/**/prep1155.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1155.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 2
03-03 13:57:09 jdbc: RESULT_CLOSE 22
03-03 13:57:09 jdbc: 
/**/prep1155.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 20
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1156 = conn103.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 23
03-03 13:57:09 jdbc: 
/**/prep1156.setLong(1, 12L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1157 = prep1156.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 23
03-03 13:57:09 jdbc: RESULT_CLOSE 24
03-03 13:57:09 jdbc: 
/**/rs1157.next();
03-03 13:57:09 jdbc: 
/**/rs1157.getLong("id1_0_");
03-03 13:57:09 jdbc: 
/**/rs1157.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1157.getLong("id0_1_");
03-03 13:57:09 jdbc: 
/**/rs1157.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1157.getLong("id4_2_");
03-03 13:57:09 jdbc: 
/**/rs1157.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1157.getLong("id4_3_");
03-03 13:57:09 jdbc: 
/**/rs1157.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1157.getLong("contentT2_2_4_");
03-03 13:57:09 jdbc: 
/**/rs1157.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1157.getLong("contentN1_4_");
03-03 13:57:09 jdbc: 
/**/rs1157.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1157.next();
03-03 13:57:09 jdbc: 
/**/rs1157.close();
03-03 13:57:09 jdbc: 
/**/prep1156.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1156.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 2
03-03 13:57:09 jdbc: RESULT_CLOSE 25
03-03 13:57:09 jdbc: 
/**/prep1156.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 23
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1157 = conn103.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 26
03-03 13:57:09 jdbc: 
/**/prep1157.setLong(1, 13L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1158 = prep1157.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 26
03-03 13:57:09 jdbc: RESULT_CLOSE 27
03-03 13:57:09 jdbc: 
/**/rs1158.next();
03-03 13:57:09 jdbc: 
/**/rs1158.getLong("id1_0_");
03-03 13:57:09 jdbc: 
/**/rs1158.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1158.getLong("id0_1_");
03-03 13:57:09 jdbc: 
/**/rs1158.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1158.getLong("id4_2_");
03-03 13:57:09 jdbc: 
/**/rs1158.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1158.getLong("id4_3_");
03-03 13:57:09 jdbc: 
/**/rs1158.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1158.getLong("contentT2_2_4_");
03-03 13:57:09 jdbc: 
/**/rs1158.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1158.getLong("contentN1_4_");
03-03 13:57:09 jdbc: 
/**/rs1158.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1158.next();
03-03 13:57:09 jdbc: 
/**/rs1158.close();
03-03 13:57:09 jdbc: 
/**/prep1157.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1157.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 2
03-03 13:57:09 jdbc: RESULT_CLOSE 28
03-03 13:57:09 jdbc: 
/**/prep1157.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 26
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1158 = conn103.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 29
03-03 13:57:09 jdbc: 
/**/prep1158.setLong(1, 15L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1159 = prep1158.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 29
03-03 13:57:09 jdbc: RESULT_CLOSE 30
03-03 13:57:09 jdbc: 
/**/rs1159.next();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("id1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("id0_1_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("id4_2_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("id4_3_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("contentT2_2_4_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("contentN1_4_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.next();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("id1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("id0_1_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("id4_2_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("id4_3_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("author8_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("contentId1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getString("contentR3_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getTimestamp("creation4_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getTimestamp("lastModi5_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getString("name1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("parent9_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getBoolean("publicated1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("contentT2_2_4_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("contentN1_4_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.next();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("id1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("id0_1_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("id4_2_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("id4_3_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("author8_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("contentId1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getString("contentR3_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getTimestamp("creation4_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getTimestamp("lastModi5_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getString("name1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("parent9_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getBoolean("publicated1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("contentT2_2_4_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("contentN1_4_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.next();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("id1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("id0_1_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("id4_2_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("id4_3_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("author8_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("contentId1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getString("contentR3_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getTimestamp("creation4_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getTimestamp("lastModi5_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getString("name1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("parent9_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getBoolean("publicated1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("contentT2_2_4_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("contentN1_4_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.next();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("id1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("id0_1_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("id4_2_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("id4_3_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("author8_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("contentId1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getString("contentR3_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getTimestamp("creation4_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getTimestamp("lastModi5_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getString("name1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("parent9_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getBoolean("publicated1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("contentT2_2_4_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("contentN1_4_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.next();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("id1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("id0_1_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("id4_2_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("id4_3_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("author8_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("contentId1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getString("contentR3_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getTimestamp("creation4_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getTimestamp("lastModi5_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getString("name1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("parent9_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getBoolean("publicated1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("contentT2_2_4_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("contentN1_4_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.next();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("id1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("id0_1_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("id4_2_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("id4_3_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("author8_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("contentId1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getString("contentR3_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getTimestamp("creation4_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getTimestamp("lastModi5_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getString("name1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("parent9_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getBoolean("publicated1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("contentT2_2_4_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("contentN1_4_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.next();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("id1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("id0_1_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("id4_2_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("id4_3_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("author8_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("contentId1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getString("contentR3_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getTimestamp("creation4_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getTimestamp("lastModi5_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getString("name1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("parent9_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getBoolean("publicated1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("contentT2_2_4_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("contentN1_4_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.next();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("id1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("id0_1_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("id4_2_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("id4_3_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("author8_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("contentId1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getString("contentR3_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getTimestamp("creation4_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getTimestamp("lastModi5_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getString("name1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("parent9_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getBoolean("publicated1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("contentT2_2_4_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("contentN1_4_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.next();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("id1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("id0_1_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("id4_2_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("id4_3_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("author8_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("contentId1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getString("contentR3_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getTimestamp("creation4_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getTimestamp("lastModi5_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getString("name1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("parent9_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getBoolean("publicated1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("contentT2_2_4_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("contentN1_4_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.next();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("id1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("id0_1_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("id4_2_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("id4_3_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("author8_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("contentId1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getString("contentR3_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getTimestamp("creation4_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getTimestamp("lastModi5_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getString("name1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("parent9_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getBoolean("publicated1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("contentT2_2_4_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("contentN1_4_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.next();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("id1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("id0_1_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("id4_2_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("id4_3_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("author8_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("contentId1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getString("contentR3_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getTimestamp("creation4_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getTimestamp("lastModi5_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getString("name1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("parent9_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getBoolean("publicated1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("contentT2_2_4_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("contentN1_4_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.next();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("id1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("id0_1_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("id4_2_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("id4_3_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("author8_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("contentId1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getString("contentR3_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getTimestamp("creation4_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getTimestamp("lastModi5_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getString("name1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("parent9_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getBoolean("publicated1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("contentT2_2_4_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("contentN1_4_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.next();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("id1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("id0_1_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("id4_2_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("id4_3_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("author8_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("contentId1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getString("contentR3_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getTimestamp("creation4_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getTimestamp("lastModi5_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getString("name1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("parent9_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getBoolean("publicated1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("contentT2_2_4_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("contentN1_4_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.next();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("id1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("id0_1_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("id4_2_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("id4_3_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("author8_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("contentId1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getString("contentR3_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getTimestamp("creation4_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getTimestamp("lastModi5_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getString("name1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("parent9_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getBoolean("publicated1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("contentT2_2_4_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("contentN1_4_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.next();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("id1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("id0_1_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("id4_2_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("id4_3_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("author8_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("contentId1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getString("contentR3_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getTimestamp("creation4_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getTimestamp("lastModi5_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getString("name1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("parent9_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getBoolean("publicated1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("contentT2_2_4_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("contentN1_4_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.next();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("id1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("id0_1_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("id4_2_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("id4_3_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("author8_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("contentId1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getString("contentR3_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getTimestamp("creation4_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getTimestamp("lastModi5_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getString("name1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("parent9_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getBoolean("publicated1_0_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("contentT2_2_4_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.getLong("contentN1_4_");
03-03 13:57:09 jdbc: 
/**/rs1159.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1159.next();
03-03 13:57:09 jdbc: 
/**/rs1159.close();
03-03 13:57:09 jdbc: 
/**/prep1158.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1158.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 2
03-03 13:57:09 jdbc: RESULT_CLOSE 31
03-03 13:57:09 jdbc: 
/**/prep1158.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 29
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1159 = conn103.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 32
03-03 13:57:09 jdbc: 
/**/prep1159.setLong(1, 6L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1160 = prep1159.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 32
03-03 13:57:09 jdbc: RESULT_CLOSE 33
03-03 13:57:09 jdbc: 
/**/rs1160.next();
03-03 13:57:09 jdbc: 
/**/rs1160.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1160.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1160.getLong("contentN1_1_1_");
03-03 13:57:09 jdbc: 
/**/rs1160.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1160.getLong("contentT2_1_");
03-03 13:57:09 jdbc: 
/**/rs1160.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1160.next();
03-03 13:57:09 jdbc: 
/**/rs1160.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1160.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1160.getLong("contentN1_1_1_");
03-03 13:57:09 jdbc: 
/**/rs1160.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1160.getLong("contentT2_1_");
03-03 13:57:09 jdbc: 
/**/rs1160.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1160.next();
03-03 13:57:09 jdbc: 
/**/rs1160.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1160.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1160.getLong("contentN1_1_1_");
03-03 13:57:09 jdbc: 
/**/rs1160.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1160.getLong("contentT2_1_");
03-03 13:57:09 jdbc: 
/**/rs1160.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1160.next();
03-03 13:57:09 jdbc: 
/**/rs1160.close();
03-03 13:57:09 jdbc: 
/**/prep1159.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1159.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 2
03-03 13:57:09 jdbc: RESULT_CLOSE 34
03-03 13:57:09 jdbc: 
/**/prep1159.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 32
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1160 = conn103.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 35
03-03 13:57:09 jdbc: 
/**/prep1160.setLong(1, 7L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1161 = prep1160.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 35
03-03 13:57:09 jdbc: RESULT_CLOSE 36
03-03 13:57:09 jdbc: 
/**/rs1161.next();
03-03 13:57:09 jdbc: 
/**/rs1161.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1161.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1161.getLong("contentN1_1_1_");
03-03 13:57:09 jdbc: 
/**/rs1161.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1161.getLong("contentT2_1_");
03-03 13:57:09 jdbc: 
/**/rs1161.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1161.next();
03-03 13:57:09 jdbc: 
/**/rs1161.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1161.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1161.getLong("contentN1_1_1_");
03-03 13:57:09 jdbc: 
/**/rs1161.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1161.getLong("contentT2_1_");
03-03 13:57:09 jdbc: 
/**/rs1161.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1161.next();
03-03 13:57:09 jdbc: 
/**/rs1161.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1161.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1161.getLong("contentN1_1_1_");
03-03 13:57:09 jdbc: 
/**/rs1161.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1161.getLong("contentT2_1_");
03-03 13:57:09 jdbc: 
/**/rs1161.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1161.next();
03-03 13:57:09 jdbc: 
/**/rs1161.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1161.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1161.getLong("contentN1_1_1_");
03-03 13:57:09 jdbc: 
/**/rs1161.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1161.getLong("contentT2_1_");
03-03 13:57:09 jdbc: 
/**/rs1161.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1161.next();
03-03 13:57:09 jdbc: 
/**/rs1161.close();
03-03 13:57:09 jdbc: 
/**/prep1160.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1160.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 2
03-03 13:57:09 jdbc: RESULT_CLOSE 37
03-03 13:57:09 jdbc: 
/**/prep1160.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 35
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1161 = conn103.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 38
03-03 13:57:09 jdbc: 
/**/prep1161.setLong(1, 11L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1162 = prep1161.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 38
03-03 13:57:09 jdbc: RESULT_CLOSE 39
03-03 13:57:09 jdbc: 
/**/rs1162.next();
03-03 13:57:09 jdbc: 
/**/rs1162.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1162.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1162.getLong("contentN1_1_1_");
03-03 13:57:09 jdbc: 
/**/rs1162.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1162.getLong("contentT2_1_");
03-03 13:57:09 jdbc: 
/**/rs1162.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1162.next();
03-03 13:57:09 jdbc: 
/**/rs1162.close();
03-03 13:57:09 jdbc: 
/**/prep1161.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1161.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 2
03-03 13:57:09 jdbc: RESULT_CLOSE 40
03-03 13:57:09 jdbc: 
/**/prep1161.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 38
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1162 = conn103.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 41
03-03 13:57:09 jdbc: 
/**/prep1162.setLong(1, 12L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1163 = prep1162.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 41
03-03 13:57:09 jdbc: RESULT_CLOSE 42
03-03 13:57:09 jdbc: 
/**/rs1163.next();
03-03 13:57:09 jdbc: 
/**/rs1163.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1163.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1163.getLong("contentN1_1_1_");
03-03 13:57:09 jdbc: 
/**/rs1163.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1163.getLong("contentT2_1_");
03-03 13:57:09 jdbc: 
/**/rs1163.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1163.next();
03-03 13:57:09 jdbc: 
/**/rs1163.close();
03-03 13:57:09 jdbc: 
/**/prep1162.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1162.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 2
03-03 13:57:09 jdbc: RESULT_CLOSE 43
03-03 13:57:09 jdbc: 
/**/prep1162.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 41
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1163 = conn103.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 44
03-03 13:57:09 jdbc: 
/**/prep1163.setLong(1, 13L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1164 = prep1163.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 44
03-03 13:57:09 jdbc: RESULT_CLOSE 45
03-03 13:57:09 jdbc: 
/**/rs1164.next();
03-03 13:57:09 jdbc: 
/**/rs1164.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1164.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1164.getLong("contentN1_1_1_");
03-03 13:57:09 jdbc: 
/**/rs1164.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1164.getLong("contentT2_1_");
03-03 13:57:09 jdbc: 
/**/rs1164.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1164.next();
03-03 13:57:09 jdbc: 
/**/rs1164.close();
03-03 13:57:09 jdbc: 
/**/prep1163.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1163.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 2
03-03 13:57:09 jdbc: RESULT_CLOSE 46
03-03 13:57:09 jdbc: 
/**/prep1163.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 44
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1164 = conn103.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 47
03-03 13:57:09 jdbc: 
/**/prep1164.setLong(1, 14L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1165 = prep1164.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 47
03-03 13:57:09 jdbc: RESULT_CLOSE 48
03-03 13:57:09 jdbc: 
/**/rs1165.next();
03-03 13:57:09 jdbc: 
/**/rs1165.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1165.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1165.getLong("contentN1_1_1_");
03-03 13:57:09 jdbc: 
/**/rs1165.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1165.getLong("contentT2_1_");
03-03 13:57:09 jdbc: 
/**/rs1165.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1165.next();
03-03 13:57:09 jdbc: 
/**/rs1165.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1165.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1165.getLong("contentN1_1_1_");
03-03 13:57:09 jdbc: 
/**/rs1165.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1165.getLong("contentT2_1_");
03-03 13:57:09 jdbc: 
/**/rs1165.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1165.next();
03-03 13:57:09 jdbc: 
/**/rs1165.close();
03-03 13:57:09 jdbc: 
/**/prep1164.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1164.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 2
03-03 13:57:09 jdbc: RESULT_CLOSE 49
03-03 13:57:09 jdbc: 
/**/prep1164.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 47
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1165 = conn103.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 50
03-03 13:57:09 jdbc: 
/**/prep1165.setLong(1, 15L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1166 = prep1165.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 50
03-03 13:57:09 jdbc: RESULT_CLOSE 51
03-03 13:57:09 jdbc: 
/**/rs1166.next();
03-03 13:57:09 jdbc: 
/**/rs1166.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1166.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1166.getLong("contentN1_1_1_");
03-03 13:57:09 jdbc: 
/**/rs1166.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1166.getLong("contentT2_1_");
03-03 13:57:09 jdbc: 
/**/rs1166.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1166.next();
03-03 13:57:09 jdbc: 
/**/rs1166.close();
03-03 13:57:09 jdbc: 
/**/prep1165.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1165.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 2
03-03 13:57:09 jdbc: RESULT_CLOSE 52
03-03 13:57:09 jdbc: 
/**/prep1165.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 50
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1166 = conn103.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 53
03-03 13:57:09 jdbc: 
/**/prep1166.setLong(1, 17L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1167 = prep1166.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 53
03-03 13:57:09 jdbc: RESULT_CLOSE 54
03-03 13:57:09 jdbc: 
/**/rs1167.next();
03-03 13:57:09 jdbc: 
/**/rs1167.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1167.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1167.getLong("contentN1_1_1_");
03-03 13:57:09 jdbc: 
/**/rs1167.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1167.getLong("contentT2_1_");
03-03 13:57:09 jdbc: 
/**/rs1167.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1167.next();
03-03 13:57:09 jdbc: 
/**/rs1167.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1167.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1167.getLong("contentN1_1_1_");
03-03 13:57:09 jdbc: 
/**/rs1167.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1167.getLong("contentT2_1_");
03-03 13:57:09 jdbc: 
/**/rs1167.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1167.next();
03-03 13:57:09 jdbc: 
/**/rs1167.close();
03-03 13:57:09 jdbc: 
/**/prep1166.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1166.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 2
03-03 13:57:09 jdbc: RESULT_CLOSE 55
03-03 13:57:09 jdbc: 
/**/prep1166.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 53
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1167 = conn103.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 56
03-03 13:57:09 jdbc: 
/**/prep1167.setLong(1, 16L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1168 = prep1167.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 56
03-03 13:57:09 jdbc: RESULT_CLOSE 57
03-03 13:57:09 jdbc: 
/**/rs1168.next();
03-03 13:57:09 jdbc: 
/**/rs1168.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1168.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1168.getLong("contentN1_1_1_");
03-03 13:57:09 jdbc: 
/**/rs1168.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1168.getLong("contentT2_1_");
03-03 13:57:09 jdbc: 
/**/rs1168.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1168.next();
03-03 13:57:09 jdbc: 
/**/rs1168.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1168.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1168.getLong("contentN1_1_1_");
03-03 13:57:09 jdbc: 
/**/rs1168.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1168.getLong("contentT2_1_");
03-03 13:57:09 jdbc: 
/**/rs1168.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1168.next();
03-03 13:57:09 jdbc: 
/**/rs1168.close();
03-03 13:57:09 jdbc: 
/**/prep1167.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1167.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 2
03-03 13:57:09 jdbc: RESULT_CLOSE 58
03-03 13:57:09 jdbc: 
/**/prep1167.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 56
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1168 = conn103.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 59
03-03 13:57:09 jdbc: 
/**/prep1168.setLong(1, 19L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1169 = prep1168.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 59
03-03 13:57:09 jdbc: RESULT_CLOSE 60
03-03 13:57:09 jdbc: 
/**/rs1169.next();
03-03 13:57:09 jdbc: 
/**/rs1169.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1169.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1169.getLong("contentN1_1_1_");
03-03 13:57:09 jdbc: 
/**/rs1169.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1169.getLong("contentT2_1_");
03-03 13:57:09 jdbc: 
/**/rs1169.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1169.next();
03-03 13:57:09 jdbc: 
/**/rs1169.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1169.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1169.getLong("contentN1_1_1_");
03-03 13:57:09 jdbc: 
/**/rs1169.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1169.getLong("contentT2_1_");
03-03 13:57:09 jdbc: 
/**/rs1169.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1169.next();
03-03 13:57:09 jdbc: 
/**/rs1169.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1169.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1169.getLong("contentN1_1_1_");
03-03 13:57:09 jdbc: 
/**/rs1169.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1169.getLong("contentT2_1_");
03-03 13:57:09 jdbc: 
/**/rs1169.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1169.next();
03-03 13:57:09 jdbc: 
/**/rs1169.close();
03-03 13:57:09 jdbc: 
/**/prep1168.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1168.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 2
03-03 13:57:09 jdbc: RESULT_CLOSE 61
03-03 13:57:09 jdbc: 
/**/prep1168.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 59
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1169 = conn103.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 62
03-03 13:57:09 jdbc: 
/**/prep1169.setLong(1, 18L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1170 = prep1169.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 62
03-03 13:57:09 jdbc: RESULT_CLOSE 63
03-03 13:57:09 jdbc: 
/**/rs1170.next();
03-03 13:57:09 jdbc: 
/**/rs1170.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1170.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1170.getLong("contentN1_1_1_");
03-03 13:57:09 jdbc: 
/**/rs1170.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1170.getLong("contentT2_1_");
03-03 13:57:09 jdbc: 
/**/rs1170.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1170.next();
03-03 13:57:09 jdbc: 
/**/rs1170.close();
03-03 13:57:09 jdbc: 
/**/prep1169.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1169.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 2
03-03 13:57:09 jdbc: RESULT_CLOSE 64
03-03 13:57:09 jdbc: 
/**/prep1169.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 62
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1170 = conn103.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 65
03-03 13:57:09 jdbc: 
/**/prep1170.setLong(1, 21L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1171 = prep1170.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 65
03-03 13:57:09 jdbc: RESULT_CLOSE 66
03-03 13:57:09 jdbc: 
/**/rs1171.next();
03-03 13:57:09 jdbc: 
/**/rs1171.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1171.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1171.getLong("contentN1_1_1_");
03-03 13:57:09 jdbc: 
/**/rs1171.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1171.getLong("contentT2_1_");
03-03 13:57:09 jdbc: 
/**/rs1171.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1171.next();
03-03 13:57:09 jdbc: 
/**/rs1171.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1171.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1171.getLong("contentN1_1_1_");
03-03 13:57:09 jdbc: 
/**/rs1171.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1171.getLong("contentT2_1_");
03-03 13:57:09 jdbc: 
/**/rs1171.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1171.next();
03-03 13:57:09 jdbc: 
/**/rs1171.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1171.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1171.getLong("contentN1_1_1_");
03-03 13:57:09 jdbc: 
/**/rs1171.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1171.getLong("contentT2_1_");
03-03 13:57:09 jdbc: 
/**/rs1171.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1171.next();
03-03 13:57:09 jdbc: 
/**/rs1171.close();
03-03 13:57:09 jdbc: 
/**/prep1170.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1170.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: SESSION_PREPARE 68
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 68
03-03 13:57:09 jdbc: RESULT_CLOSE 67
03-03 13:57:09 jdbc: 
/**/prep1170.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 65
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1171 = conn103.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 69
03-03 13:57:09 jdbc: 
/**/prep1171.setLong(1, 20L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1172 = prep1171.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 69
03-03 13:57:09 jdbc: RESULT_CLOSE 70
03-03 13:57:09 jdbc: 
/**/rs1172.next();
03-03 13:57:09 jdbc: 
/**/rs1172.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1172.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1172.getLong("contentN1_1_1_");
03-03 13:57:09 jdbc: 
/**/rs1172.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1172.getLong("contentT2_1_");
03-03 13:57:09 jdbc: 
/**/rs1172.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1172.next();
03-03 13:57:09 jdbc: 
/**/rs1172.close();
03-03 13:57:09 jdbc: 
/**/prep1171.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1171.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 68
03-03 13:57:09 jdbc: RESULT_CLOSE 71
03-03 13:57:09 jdbc: 
/**/prep1171.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 69
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1172 = conn103.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 72
03-03 13:57:09 jdbc: 
/**/prep1172.setLong(1, 23L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1173 = prep1172.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 72
03-03 13:57:09 jdbc: RESULT_CLOSE 73
03-03 13:57:09 jdbc: 
/**/rs1173.next();
03-03 13:57:09 jdbc: 
/**/rs1173.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1173.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1173.getLong("contentN1_1_1_");
03-03 13:57:09 jdbc: 
/**/rs1173.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1173.getLong("contentT2_1_");
03-03 13:57:09 jdbc: 
/**/rs1173.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1173.next();
03-03 13:57:09 jdbc: 
/**/rs1173.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1173.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1173.getLong("contentN1_1_1_");
03-03 13:57:09 jdbc: 
/**/rs1173.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1173.getLong("contentT2_1_");
03-03 13:57:09 jdbc: 
/**/rs1173.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1173.next();
03-03 13:57:09 jdbc: 
/**/rs1173.close();
03-03 13:57:09 jdbc: 
/**/prep1172.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1172.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 68
03-03 13:57:09 jdbc: RESULT_CLOSE 74
03-03 13:57:09 jdbc: 
/**/prep1172.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 72
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1173 = conn103.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 75
03-03 13:57:09 jdbc: 
/**/prep1173.setLong(1, 22L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1174 = prep1173.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 75
03-03 13:57:09 jdbc: RESULT_CLOSE 76
03-03 13:57:09 jdbc: 
/**/rs1174.next();
03-03 13:57:09 jdbc: 
/**/rs1174.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1174.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1174.getLong("contentN1_1_1_");
03-03 13:57:09 jdbc: 
/**/rs1174.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1174.getLong("contentT2_1_");
03-03 13:57:09 jdbc: 
/**/rs1174.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1174.next();
03-03 13:57:09 jdbc: 
/**/rs1174.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1174.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1174.getLong("contentN1_1_1_");
03-03 13:57:09 jdbc: 
/**/rs1174.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1174.getLong("contentT2_1_");
03-03 13:57:09 jdbc: 
/**/rs1174.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1174.next();
03-03 13:57:09 jdbc: 
/**/rs1174.close();
03-03 13:57:09 jdbc: 
/**/prep1173.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1173.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 68
03-03 13:57:09 jdbc: RESULT_CLOSE 77
03-03 13:57:09 jdbc: 
/**/prep1173.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 75
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1174 = conn103.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 78
03-03 13:57:09 jdbc: 
/**/prep1174.setLong(1, 24L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1175 = prep1174.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 78
03-03 13:57:09 jdbc: RESULT_CLOSE 79
03-03 13:57:09 jdbc: 
/**/rs1175.next();
03-03 13:57:09 jdbc: 
/**/rs1175.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1175.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1175.getLong("contentN1_1_1_");
03-03 13:57:09 jdbc: 
/**/rs1175.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1175.getLong("contentT2_1_");
03-03 13:57:09 jdbc: 
/**/rs1175.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1175.next();
03-03 13:57:09 jdbc: 
/**/rs1175.close();
03-03 13:57:09 jdbc: 
/**/prep1174.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1174.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 68
03-03 13:57:09 jdbc: RESULT_CLOSE 80
03-03 13:57:09 jdbc: 
/**/prep1174.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 78
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1175 = conn103.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 81
03-03 13:57:09 jdbc: 
/**/prep1175.setLong(1, 16L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1176 = prep1175.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 81
03-03 13:57:09 jdbc: RESULT_CLOSE 82
03-03 13:57:09 jdbc: 
/**/rs1176.next();
03-03 13:57:09 jdbc: 
/**/rs1176.getLong("id1_0_");
03-03 13:57:09 jdbc: 
/**/rs1176.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1176.getLong("id0_1_");
03-03 13:57:09 jdbc: 
/**/rs1176.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1176.getLong("id4_2_");
03-03 13:57:09 jdbc: 
/**/rs1176.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1176.getLong("id4_3_");
03-03 13:57:09 jdbc: 
/**/rs1176.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1176.getLong("contentT2_2_4_");
03-03 13:57:09 jdbc: 
/**/rs1176.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1176.getLong("contentN1_4_");
03-03 13:57:09 jdbc: 
/**/rs1176.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1176.next();
03-03 13:57:09 jdbc: 
/**/rs1176.close();
03-03 13:57:09 jdbc: 
/**/prep1175.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1175.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 68
03-03 13:57:09 jdbc: RESULT_CLOSE 83
03-03 13:57:09 jdbc: 
/**/prep1175.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 81
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1176 = conn103.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 84
03-03 13:57:09 jdbc: 
/**/prep1176.setLong(1, 17L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1177 = prep1176.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 84
03-03 13:57:09 jdbc: RESULT_CLOSE 85
03-03 13:57:09 jdbc: 
/**/rs1177.next();
03-03 13:57:09 jdbc: 
/**/rs1177.getLong("id1_0_");
03-03 13:57:09 jdbc: 
/**/rs1177.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1177.getLong("id0_1_");
03-03 13:57:09 jdbc: 
/**/rs1177.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1177.getLong("id4_2_");
03-03 13:57:09 jdbc: 
/**/rs1177.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1177.getLong("id4_3_");
03-03 13:57:09 jdbc: 
/**/rs1177.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1177.getLong("contentT2_2_4_");
03-03 13:57:09 jdbc: 
/**/rs1177.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1177.getLong("contentN1_4_");
03-03 13:57:09 jdbc: 
/**/rs1177.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1177.next();
03-03 13:57:09 jdbc: 
/**/rs1177.close();
03-03 13:57:09 jdbc: 
/**/prep1176.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1176.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 68
03-03 13:57:09 jdbc: RESULT_CLOSE 86
03-03 13:57:09 jdbc: 
/**/prep1176.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 84
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1177 = conn103.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 87
03-03 13:57:09 jdbc: 
/**/prep1177.setLong(1, 19L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1178 = prep1177.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 87
03-03 13:57:09 jdbc: RESULT_CLOSE 88
03-03 13:57:09 jdbc: 
/**/rs1178.next();
03-03 13:57:09 jdbc: 
/**/rs1178.getLong("id1_0_");
03-03 13:57:09 jdbc: 
/**/rs1178.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1178.getLong("id0_1_");
03-03 13:57:09 jdbc: 
/**/rs1178.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1178.getLong("id4_2_");
03-03 13:57:09 jdbc: 
/**/rs1178.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1178.getLong("id4_3_");
03-03 13:57:09 jdbc: 
/**/rs1178.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1178.getLong("contentT2_2_4_");
03-03 13:57:09 jdbc: 
/**/rs1178.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1178.getLong("contentN1_4_");
03-03 13:57:09 jdbc: 
/**/rs1178.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1178.next();
03-03 13:57:09 jdbc: 
/**/rs1178.close();
03-03 13:57:09 jdbc: 
/**/prep1177.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1177.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 68
03-03 13:57:09 jdbc: RESULT_CLOSE 89
03-03 13:57:09 jdbc: 
/**/prep1177.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 87
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1178 = conn103.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 90
03-03 13:57:09 jdbc: 
/**/prep1178.setLong(1, 20L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1179 = prep1178.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 90
03-03 13:57:09 jdbc: RESULT_CLOSE 91
03-03 13:57:09 jdbc: 
/**/rs1179.next();
03-03 13:57:09 jdbc: 
/**/rs1179.getLong("id1_0_");
03-03 13:57:09 jdbc: 
/**/rs1179.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1179.getLong("id0_1_");
03-03 13:57:09 jdbc: 
/**/rs1179.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1179.getLong("id4_2_");
03-03 13:57:09 jdbc: 
/**/rs1179.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1179.getLong("id4_3_");
03-03 13:57:09 jdbc: 
/**/rs1179.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1179.getLong("contentT2_2_4_");
03-03 13:57:09 jdbc: 
/**/rs1179.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1179.getLong("contentN1_4_");
03-03 13:57:09 jdbc: 
/**/rs1179.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1179.next();
03-03 13:57:09 jdbc: 
/**/rs1179.close();
03-03 13:57:09 jdbc: 
/**/prep1178.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1178.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 68
03-03 13:57:09 jdbc: RESULT_CLOSE 92
03-03 13:57:09 jdbc: 
/**/prep1178.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 90
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1179 = conn103.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 93
03-03 13:57:09 jdbc: 
/**/prep1179.setLong(1, 22L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1180 = prep1179.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 93
03-03 13:57:09 jdbc: RESULT_CLOSE 94
03-03 13:57:09 jdbc: 
/**/rs1180.next();
03-03 13:57:09 jdbc: 
/**/rs1180.getLong("id1_0_");
03-03 13:57:09 jdbc: 
/**/rs1180.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1180.getLong("id0_1_");
03-03 13:57:09 jdbc: 
/**/rs1180.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1180.getLong("id4_2_");
03-03 13:57:09 jdbc: 
/**/rs1180.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1180.getLong("id4_3_");
03-03 13:57:09 jdbc: 
/**/rs1180.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1180.getLong("contentT2_2_4_");
03-03 13:57:09 jdbc: 
/**/rs1180.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1180.getLong("contentN1_4_");
03-03 13:57:09 jdbc: 
/**/rs1180.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1180.next();
03-03 13:57:09 jdbc: 
/**/rs1180.close();
03-03 13:57:09 jdbc: 
/**/prep1179.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1179.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 68
03-03 13:57:09 jdbc: RESULT_CLOSE 95
03-03 13:57:09 jdbc: 
/**/prep1179.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 93
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1180 = conn103.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 96
03-03 13:57:09 jdbc: 
/**/prep1180.setLong(1, 24L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1181 = prep1180.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 96
03-03 13:57:09 jdbc: RESULT_CLOSE 97
03-03 13:57:09 jdbc: 
/**/rs1181.next();
03-03 13:57:09 jdbc: 
/**/rs1181.getLong("id1_0_");
03-03 13:57:09 jdbc: 
/**/rs1181.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1181.getLong("id0_1_");
03-03 13:57:09 jdbc: 
/**/rs1181.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1181.getLong("id4_2_");
03-03 13:57:09 jdbc: 
/**/rs1181.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1181.getLong("id4_3_");
03-03 13:57:09 jdbc: 
/**/rs1181.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1181.getLong("author8_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1181.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1181.getLong("contentId1_0_");
03-03 13:57:09 jdbc: 
/**/rs1181.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1181.getString("contentR3_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1181.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1181.getTimestamp("creation4_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1181.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1181.getTimestamp("lastModi5_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1181.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1181.getString("name1_0_");
03-03 13:57:09 jdbc: 
/**/rs1181.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1181.getLong("parent9_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1181.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1181.getBoolean("publicated1_0_");
03-03 13:57:09 jdbc: 
/**/rs1181.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1181.getString("name4_2_");
03-03 13:57:09 jdbc: 
/**/rs1181.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1181.getLong("parent3_4_2_");
03-03 13:57:09 jdbc: 
/**/rs1181.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1181.getLong("contentT2_2_4_");
03-03 13:57:09 jdbc: 
/**/rs1181.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1181.getLong("contentN1_4_");
03-03 13:57:09 jdbc: 
/**/rs1181.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1181.next();
03-03 13:57:09 jdbc: 
/**/rs1181.close();
03-03 13:57:09 jdbc: 
/**/prep1180.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1180.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 68
03-03 13:57:09 jdbc: RESULT_CLOSE 98
03-03 13:57:09 jdbc: 
/**/prep1180.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 96
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1181 = conn103.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 99
03-03 13:57:09 jdbc: 
/**/prep1181.setLong(1, 9L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1182 = prep1181.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 99
03-03 13:57:09 jdbc: RESULT_CLOSE 100
03-03 13:57:09 jdbc: 
/**/rs1182.next();
03-03 13:57:09 jdbc: 
/**/rs1182.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1182.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1182.getLong("contentN1_1_1_");
03-03 13:57:09 jdbc: 
/**/rs1182.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1182.getLong("contentT2_1_");
03-03 13:57:09 jdbc: 
/**/rs1182.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1182.next();
03-03 13:57:09 jdbc: 
/**/rs1182.close();
03-03 13:57:09 jdbc: 
/**/prep1181.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1181.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 68
03-03 13:57:09 jdbc: RESULT_CLOSE 101
03-03 13:57:09 jdbc: 
/**/prep1181.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 99
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1182 = conn103.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 102
03-03 13:57:09 jdbc: 
/**/prep1182.setLong(1, 26L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1183 = prep1182.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 102
03-03 13:57:09 jdbc: RESULT_CLOSE 103
03-03 13:57:09 jdbc: 
/**/rs1183.next();
03-03 13:57:09 jdbc: 
/**/rs1183.getLong("id1_0_");
03-03 13:57:09 jdbc: 
/**/rs1183.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1183.getLong("id0_1_");
03-03 13:57:09 jdbc: 
/**/rs1183.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1183.getLong("id4_2_");
03-03 13:57:09 jdbc: 
/**/rs1183.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1183.getLong("id4_3_");
03-03 13:57:09 jdbc: 
/**/rs1183.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1183.getLong("contentT2_2_4_");
03-03 13:57:09 jdbc: 
/**/rs1183.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1183.getLong("contentN1_4_");
03-03 13:57:09 jdbc: 
/**/rs1183.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1183.next();
03-03 13:57:09 jdbc: 
/**/rs1183.close();
03-03 13:57:09 jdbc: 
/**/prep1182.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1182.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 68
03-03 13:57:09 jdbc: RESULT_CLOSE 104
03-03 13:57:09 jdbc: 
/**/prep1182.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 102
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1183 = conn103.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 105
03-03 13:57:09 jdbc: 
/**/prep1183.setLong(1, 34L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1184 = prep1183.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 105
03-03 13:57:09 jdbc: RESULT_CLOSE 106
03-03 13:57:09 jdbc: 
/**/rs1184.next();
03-03 13:57:09 jdbc: 
/**/rs1184.getLong("id1_0_");
03-03 13:57:09 jdbc: 
/**/rs1184.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1184.getLong("id0_1_");
03-03 13:57:09 jdbc: 
/**/rs1184.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1184.getLong("id4_2_");
03-03 13:57:09 jdbc: 
/**/rs1184.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1184.getLong("id4_3_");
03-03 13:57:09 jdbc: 
/**/rs1184.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1184.getLong("contentT2_2_4_");
03-03 13:57:09 jdbc: 
/**/rs1184.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1184.getLong("contentN1_4_");
03-03 13:57:09 jdbc: 
/**/rs1184.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1184.next();
03-03 13:57:09 jdbc: 
/**/rs1184.close();
03-03 13:57:09 jdbc: 
/**/prep1183.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1183.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 68
03-03 13:57:09 jdbc: RESULT_CLOSE 107
03-03 13:57:09 jdbc: 
/**/prep1183.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 105
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1184 = conn103.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 108
03-03 13:57:09 jdbc: 
/**/prep1184.setLong(1, 51L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1185 = prep1184.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 108
03-03 13:57:09 jdbc: RESULT_CLOSE 109
03-03 13:57:09 jdbc: 
/**/rs1185.next();
03-03 13:57:09 jdbc: 
/**/rs1185.getLong("id1_0_");
03-03 13:57:09 jdbc: 
/**/rs1185.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1185.getLong("id0_1_");
03-03 13:57:09 jdbc: 
/**/rs1185.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1185.getLong("id4_2_");
03-03 13:57:09 jdbc: 
/**/rs1185.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1185.getLong("id4_3_");
03-03 13:57:09 jdbc: 
/**/rs1185.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1185.getLong("contentT2_2_4_");
03-03 13:57:09 jdbc: 
/**/rs1185.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1185.getLong("contentN1_4_");
03-03 13:57:09 jdbc: 
/**/rs1185.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1185.next();
03-03 13:57:09 jdbc: 
/**/rs1185.close();
03-03 13:57:09 jdbc: 
/**/prep1184.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1184.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 68
03-03 13:57:09 jdbc: RESULT_CLOSE 110
03-03 13:57:09 jdbc: 
/**/prep1184.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 108
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1185 = conn103.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 111
03-03 13:57:09 jdbc: 
/**/prep1185.setLong(1, 58L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1186 = prep1185.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 111
03-03 13:57:09 jdbc: RESULT_CLOSE 112
03-03 13:57:09 jdbc: 
/**/rs1186.next();
03-03 13:57:09 jdbc: 
/**/rs1186.getLong("id1_0_");
03-03 13:57:09 jdbc: 
/**/rs1186.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1186.getLong("id0_1_");
03-03 13:57:09 jdbc: 
/**/rs1186.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1186.getLong("id4_2_");
03-03 13:57:09 jdbc: 
/**/rs1186.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1186.getLong("id4_3_");
03-03 13:57:09 jdbc: 
/**/rs1186.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1186.getLong("contentT2_2_4_");
03-03 13:57:09 jdbc: 
/**/rs1186.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1186.getLong("contentN1_4_");
03-03 13:57:09 jdbc: 
/**/rs1186.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1186.next();
03-03 13:57:09 jdbc: 
/**/rs1186.close();
03-03 13:57:09 jdbc: 
/**/prep1185.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1185.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 68
03-03 13:57:09 jdbc: RESULT_CLOSE 113
03-03 13:57:09 jdbc: 
/**/prep1185.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 111
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1186 = conn103.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 114
03-03 13:57:09 jdbc: 
/**/prep1186.setLong(1, 79L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1187 = prep1186.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 114
03-03 13:57:09 jdbc: RESULT_CLOSE 115
03-03 13:57:09 jdbc: 
/**/rs1187.next();
03-03 13:57:09 jdbc: 
/**/rs1187.getLong("id1_0_");
03-03 13:57:09 jdbc: 
/**/rs1187.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1187.getLong("id0_1_");
03-03 13:57:09 jdbc: 
/**/rs1187.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1187.getLong("id4_2_");
03-03 13:57:09 jdbc: 
/**/rs1187.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1187.getLong("id4_3_");
03-03 13:57:09 jdbc: 
/**/rs1187.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1187.getLong("contentT2_2_4_");
03-03 13:57:09 jdbc: 
/**/rs1187.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1187.getLong("contentN1_4_");
03-03 13:57:09 jdbc: 
/**/rs1187.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1187.next();
03-03 13:57:09 jdbc: 
/**/rs1187.getLong("id1_0_");
03-03 13:57:09 jdbc: 
/**/rs1187.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1187.getLong("id0_1_");
03-03 13:57:09 jdbc: 
/**/rs1187.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1187.getLong("id4_2_");
03-03 13:57:09 jdbc: 
/**/rs1187.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1187.getLong("id4_3_");
03-03 13:57:09 jdbc: 
/**/rs1187.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1187.getLong("author8_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1187.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1187.getLong("contentId1_0_");
03-03 13:57:09 jdbc: 
/**/rs1187.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1187.getString("contentR3_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1187.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1187.getTimestamp("creation4_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1187.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1187.getTimestamp("lastModi5_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1187.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1187.getString("name1_0_");
03-03 13:57:09 jdbc: 
/**/rs1187.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1187.getLong("parent9_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1187.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1187.getBoolean("publicated1_0_");
03-03 13:57:09 jdbc: 
/**/rs1187.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1187.getString("name4_2_");
03-03 13:57:09 jdbc: 
/**/rs1187.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1187.getLong("parent3_4_2_");
03-03 13:57:09 jdbc: 
/**/rs1187.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1187.getLong("contentT2_2_4_");
03-03 13:57:09 jdbc: 
/**/rs1187.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1187.getLong("contentN1_4_");
03-03 13:57:09 jdbc: 
/**/rs1187.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1187.next();
03-03 13:57:09 jdbc: 
/**/rs1187.close();
03-03 13:57:09 jdbc: 
/**/prep1186.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1186.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 68
03-03 13:57:09 jdbc: RESULT_CLOSE 116
03-03 13:57:09 jdbc: 
/**/prep1186.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 114
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1187 = conn103.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 117
03-03 13:57:09 jdbc: 
/**/prep1187.setLong(1, 50L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1188 = prep1187.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 117
03-03 13:57:09 jdbc: RESULT_CLOSE 118
03-03 13:57:09 jdbc: 
/**/rs1188.next();
03-03 13:57:09 jdbc: 
/**/rs1188.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1188.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1188.getLong("contentN1_1_1_");
03-03 13:57:09 jdbc: 
/**/rs1188.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1188.getLong("contentT2_1_");
03-03 13:57:09 jdbc: 
/**/rs1188.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1188.next();
03-03 13:57:09 jdbc: 
/**/rs1188.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1188.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1188.getLong("contentN1_1_1_");
03-03 13:57:09 jdbc: 
/**/rs1188.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1188.getLong("contentT2_1_");
03-03 13:57:09 jdbc: 
/**/rs1188.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1188.next();
03-03 13:57:09 jdbc: 
/**/rs1188.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1188.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1188.getLong("contentN1_1_1_");
03-03 13:57:09 jdbc: 
/**/rs1188.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1188.getLong("contentT2_1_");
03-03 13:57:09 jdbc: 
/**/rs1188.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1188.next();
03-03 13:57:09 jdbc: 
/**/rs1188.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1188.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1188.getLong("contentN1_1_1_");
03-03 13:57:09 jdbc: 
/**/rs1188.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1188.getLong("contentT2_1_");
03-03 13:57:09 jdbc: 
/**/rs1188.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1188.next();
03-03 13:57:09 jdbc: 
/**/rs1188.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1188.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1188.getLong("contentN1_1_1_");
03-03 13:57:09 jdbc: 
/**/rs1188.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1188.getLong("contentT2_1_");
03-03 13:57:09 jdbc: 
/**/rs1188.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1188.next();
03-03 13:57:09 jdbc: 
/**/rs1188.close();
03-03 13:57:09 jdbc: 
/**/prep1187.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1187.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 68
03-03 13:57:09 jdbc: RESULT_CLOSE 119
03-03 13:57:09 jdbc: 
/**/prep1187.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 117
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1188 = conn103.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 120
03-03 13:57:09 jdbc: 
/**/prep1188.setLong(1, 108L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1189 = prep1188.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 120
03-03 13:57:09 jdbc: RESULT_CLOSE 121
03-03 13:57:09 jdbc: 
/**/rs1189.next();
03-03 13:57:09 jdbc: 
/**/rs1189.getLong("id1_0_");
03-03 13:57:09 jdbc: 
/**/rs1189.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1189.getLong("id0_1_");
03-03 13:57:09 jdbc: 
/**/rs1189.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1189.getLong("id4_2_");
03-03 13:57:09 jdbc: 
/**/rs1189.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1189.getLong("id4_3_");
03-03 13:57:09 jdbc: 
/**/rs1189.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1189.getLong("contentT2_2_4_");
03-03 13:57:09 jdbc: 
/**/rs1189.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1189.getLong("contentN1_4_");
03-03 13:57:09 jdbc: 
/**/rs1189.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1189.next();
03-03 13:57:09 jdbc: 
/**/rs1189.close();
03-03 13:57:09 jdbc: 
/**/prep1188.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1188.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 68
03-03 13:57:09 jdbc: RESULT_CLOSE 122
03-03 13:57:09 jdbc: 
/**/prep1188.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 120
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1189 = conn103.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 123
03-03 13:57:09 jdbc: 
/**/prep1189.setLong(1, 112L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1190 = prep1189.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 123
03-03 13:57:09 jdbc: RESULT_CLOSE 124
03-03 13:57:09 jdbc: 
/**/rs1190.next();
03-03 13:57:09 jdbc: 
/**/rs1190.getLong("id1_0_");
03-03 13:57:09 jdbc: 
/**/rs1190.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1190.getLong("id0_1_");
03-03 13:57:09 jdbc: 
/**/rs1190.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1190.getLong("id4_2_");
03-03 13:57:09 jdbc: 
/**/rs1190.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1190.getLong("id4_3_");
03-03 13:57:09 jdbc: 
/**/rs1190.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1190.getLong("contentT2_2_4_");
03-03 13:57:09 jdbc: 
/**/rs1190.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1190.getLong("contentN1_4_");
03-03 13:57:09 jdbc: 
/**/rs1190.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1190.next();
03-03 13:57:09 jdbc: 
/**/rs1190.getLong("id1_0_");
03-03 13:57:09 jdbc: 
/**/rs1190.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1190.getLong("id0_1_");
03-03 13:57:09 jdbc: 
/**/rs1190.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1190.getLong("id4_2_");
03-03 13:57:09 jdbc: 
/**/rs1190.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1190.getLong("id4_3_");
03-03 13:57:09 jdbc: 
/**/rs1190.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1190.getLong("contentT2_2_4_");
03-03 13:57:09 jdbc: 
/**/rs1190.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1190.getLong("contentN1_4_");
03-03 13:57:09 jdbc: 
/**/rs1190.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1190.next();
03-03 13:57:09 jdbc: 
/**/rs1190.close();
03-03 13:57:09 jdbc: 
/**/prep1189.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1189.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 68
03-03 13:57:09 jdbc: RESULT_CLOSE 125
03-03 13:57:09 jdbc: 
/**/prep1189.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 123
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1190 = conn103.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 126
03-03 13:57:09 jdbc: 
/**/prep1190.setLong(1, 122L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1191 = prep1190.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 126
03-03 13:57:09 jdbc: RESULT_CLOSE 127
03-03 13:57:09 jdbc: 
/**/rs1191.next();
03-03 13:57:09 jdbc: 
/**/rs1191.getLong("id1_0_");
03-03 13:57:09 jdbc: 
/**/rs1191.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1191.getLong("id0_1_");
03-03 13:57:09 jdbc: 
/**/rs1191.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1191.getLong("id4_2_");
03-03 13:57:09 jdbc: 
/**/rs1191.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1191.getLong("id4_3_");
03-03 13:57:09 jdbc: 
/**/rs1191.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1191.getLong("author8_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1191.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1191.getLong("contentId1_0_");
03-03 13:57:09 jdbc: 
/**/rs1191.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1191.getString("contentR3_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1191.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1191.getTimestamp("creation4_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1191.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1191.getTimestamp("lastModi5_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1191.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1191.getString("name1_0_");
03-03 13:57:09 jdbc: 
/**/rs1191.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1191.getLong("parent9_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1191.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1191.getBoolean("publicated1_0_");
03-03 13:57:09 jdbc: 
/**/rs1191.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1191.getString("name4_2_");
03-03 13:57:09 jdbc: 
/**/rs1191.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1191.getLong("parent3_4_2_");
03-03 13:57:09 jdbc: 
/**/rs1191.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1191.getLong("contentT2_2_4_");
03-03 13:57:09 jdbc: 
/**/rs1191.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1191.getLong("contentN1_4_");
03-03 13:57:09 jdbc: 
/**/rs1191.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1191.next();
03-03 13:57:09 jdbc: 
/**/rs1191.close();
03-03 13:57:09 jdbc: 
/**/prep1190.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1190.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 68
03-03 13:57:09 jdbc: RESULT_CLOSE 128
03-03 13:57:09 jdbc: 
/**/prep1190.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 126
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1191 = conn103.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 129
03-03 13:57:09 jdbc: 
/**/prep1191.setLong(1, 25L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1192 = prep1191.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 129
03-03 13:57:09 jdbc: RESULT_CLOSE 130
03-03 13:57:09 jdbc: 
/**/rs1192.next();
03-03 13:57:09 jdbc: 
/**/rs1192.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1192.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1192.getLong("contentN1_1_1_");
03-03 13:57:09 jdbc: 
/**/rs1192.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1192.getLong("contentT2_1_");
03-03 13:57:09 jdbc: 
/**/rs1192.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1192.next();
03-03 13:57:09 jdbc: 
/**/rs1192.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1192.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1192.getLong("contentN1_1_1_");
03-03 13:57:09 jdbc: 
/**/rs1192.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1192.getLong("contentT2_1_");
03-03 13:57:09 jdbc: 
/**/rs1192.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1192.next();
03-03 13:57:09 jdbc: 
/**/rs1192.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1192.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1192.getLong("contentN1_1_1_");
03-03 13:57:09 jdbc: 
/**/rs1192.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1192.getLong("contentT2_1_");
03-03 13:57:09 jdbc: 
/**/rs1192.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1192.next();
03-03 13:57:09 jdbc: 
/**/rs1192.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1192.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1192.getLong("contentN1_1_1_");
03-03 13:57:09 jdbc: 
/**/rs1192.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1192.getLong("contentT2_1_");
03-03 13:57:09 jdbc: 
/**/rs1192.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1192.next();
03-03 13:57:09 jdbc: 
/**/rs1192.close();
03-03 13:57:09 jdbc: 
/**/prep1191.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1191.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: SESSION_PREPARE 132
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 132
03-03 13:57:09 jdbc: RESULT_CLOSE 131
03-03 13:57:09 jdbc: 
/**/prep1191.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 129
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1192 = conn103.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 133
03-03 13:57:09 jdbc: 
/**/prep1192.setLong(1, 123L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1193 = prep1192.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 133
03-03 13:57:09 jdbc: RESULT_CLOSE 134
03-03 13:57:09 jdbc: 
/**/rs1193.next();
03-03 13:57:09 jdbc: 
/**/rs1193.getLong("id1_0_");
03-03 13:57:09 jdbc: 
/**/rs1193.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1193.getLong("id0_1_");
03-03 13:57:09 jdbc: 
/**/rs1193.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1193.getLong("id4_2_");
03-03 13:57:09 jdbc: 
/**/rs1193.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1193.getLong("id4_3_");
03-03 13:57:09 jdbc: 
/**/rs1193.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1193.getLong("contentT2_2_4_");
03-03 13:57:09 jdbc: 
/**/rs1193.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1193.getLong("contentN1_4_");
03-03 13:57:09 jdbc: 
/**/rs1193.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1193.next();
03-03 13:57:09 jdbc: 
/**/rs1193.close();
03-03 13:57:09 jdbc: 
/**/prep1192.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1192.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 132
03-03 13:57:09 jdbc: RESULT_CLOSE 135
03-03 13:57:09 jdbc: 
/**/prep1192.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 133
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1193 = conn103.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 136
03-03 13:57:09 jdbc: 
/**/prep1193.setLong(1, 125L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1194 = prep1193.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 136
03-03 13:57:09 jdbc: RESULT_CLOSE 137
03-03 13:57:09 jdbc: 
/**/rs1194.next();
03-03 13:57:09 jdbc: 
/**/rs1194.getLong("id1_0_");
03-03 13:57:09 jdbc: 
/**/rs1194.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1194.getLong("id0_1_");
03-03 13:57:09 jdbc: 
/**/rs1194.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1194.getLong("id4_2_");
03-03 13:57:09 jdbc: 
/**/rs1194.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1194.getLong("id4_3_");
03-03 13:57:09 jdbc: 
/**/rs1194.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1194.getLong("contentT2_2_4_");
03-03 13:57:09 jdbc: 
/**/rs1194.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1194.getLong("contentN1_4_");
03-03 13:57:09 jdbc: 
/**/rs1194.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1194.next();
03-03 13:57:09 jdbc: 
/**/rs1194.close();
03-03 13:57:09 jdbc: 
/**/prep1193.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1193.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 132
03-03 13:57:09 jdbc: RESULT_CLOSE 138
03-03 13:57:09 jdbc: 
/**/prep1193.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 136
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1194 = conn103.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 139
03-03 13:57:09 jdbc: 
/**/prep1194.setLong(1, 126L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1195 = prep1194.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 139
03-03 13:57:09 jdbc: RESULT_CLOSE 140
03-03 13:57:09 jdbc: 
/**/rs1195.next();
03-03 13:57:09 jdbc: 
/**/rs1195.getLong("id1_0_");
03-03 13:57:09 jdbc: 
/**/rs1195.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1195.getLong("id0_1_");
03-03 13:57:09 jdbc: 
/**/rs1195.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1195.getLong("id4_2_");
03-03 13:57:09 jdbc: 
/**/rs1195.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1195.getLong("id4_3_");
03-03 13:57:09 jdbc: 
/**/rs1195.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1195.getLong("author8_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1195.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1195.getLong("contentId1_0_");
03-03 13:57:09 jdbc: 
/**/rs1195.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1195.getString("contentR3_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1195.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1195.getTimestamp("creation4_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1195.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1195.getTimestamp("lastModi5_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1195.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1195.getString("name1_0_");
03-03 13:57:09 jdbc: 
/**/rs1195.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1195.getLong("parent9_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1195.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1195.getBoolean("publicated1_0_");
03-03 13:57:09 jdbc: 
/**/rs1195.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1195.getLong("contentT2_2_4_");
03-03 13:57:09 jdbc: 
/**/rs1195.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1195.getLong("contentN1_4_");
03-03 13:57:09 jdbc: 
/**/rs1195.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1195.next();
03-03 13:57:09 jdbc: 
/**/rs1195.close();
03-03 13:57:09 jdbc: 
/**/prep1194.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1194.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 132
03-03 13:57:09 jdbc: RESULT_CLOSE 141
03-03 13:57:09 jdbc: 
/**/prep1194.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 139
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1195 = conn103.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 142
03-03 13:57:09 jdbc: 
/**/prep1195.setLong(1, 26L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1196 = prep1195.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 142
03-03 13:57:09 jdbc: RESULT_CLOSE 143
03-03 13:57:09 jdbc: 
/**/rs1196.next();
03-03 13:57:09 jdbc: 
/**/rs1196.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1196.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1196.getLong("contentN1_1_1_");
03-03 13:57:09 jdbc: 
/**/rs1196.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1196.getLong("contentT2_1_");
03-03 13:57:09 jdbc: 
/**/rs1196.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1196.next();
03-03 13:57:09 jdbc: 
/**/rs1196.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1196.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1196.getLong("contentN1_1_1_");
03-03 13:57:09 jdbc: 
/**/rs1196.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1196.getLong("contentT2_1_");
03-03 13:57:09 jdbc: 
/**/rs1196.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1196.next();
03-03 13:57:09 jdbc: 
/**/rs1196.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1196.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1196.getLong("contentN1_1_1_");
03-03 13:57:09 jdbc: 
/**/rs1196.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1196.getLong("contentT2_1_");
03-03 13:57:09 jdbc: 
/**/rs1196.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1196.next();
03-03 13:57:09 jdbc: 
/**/rs1196.close();
03-03 13:57:09 jdbc: 
/**/prep1195.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1195.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 132
03-03 13:57:09 jdbc: RESULT_CLOSE 144
03-03 13:57:09 jdbc: 
/**/prep1195.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 142
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1196 = conn103.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 145
03-03 13:57:09 jdbc: 
/**/prep1196.setLong(1, 128L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1197 = prep1196.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 145
03-03 13:57:09 jdbc: RESULT_CLOSE 146
03-03 13:57:09 jdbc: 
/**/rs1197.next();
03-03 13:57:09 jdbc: 
/**/rs1197.getLong("id1_0_");
03-03 13:57:09 jdbc: 
/**/rs1197.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1197.getLong("id0_1_");
03-03 13:57:09 jdbc: 
/**/rs1197.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1197.getLong("id4_2_");
03-03 13:57:09 jdbc: 
/**/rs1197.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1197.getLong("id4_3_");
03-03 13:57:09 jdbc: 
/**/rs1197.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1197.getLong("contentT2_2_4_");
03-03 13:57:09 jdbc: 
/**/rs1197.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1197.getLong("contentN1_4_");
03-03 13:57:09 jdbc: 
/**/rs1197.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1197.next();
03-03 13:57:09 jdbc: 
/**/rs1197.getLong("id1_0_");
03-03 13:57:09 jdbc: 
/**/rs1197.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1197.getLong("id0_1_");
03-03 13:57:09 jdbc: 
/**/rs1197.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1197.getLong("id4_2_");
03-03 13:57:09 jdbc: 
/**/rs1197.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1197.getLong("id4_3_");
03-03 13:57:09 jdbc: 
/**/rs1197.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1197.getLong("author8_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1197.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1197.getLong("contentId1_0_");
03-03 13:57:09 jdbc: 
/**/rs1197.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1197.getString("contentR3_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1197.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1197.getTimestamp("creation4_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1197.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1197.getTimestamp("lastModi5_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1197.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1197.getString("name1_0_");
03-03 13:57:09 jdbc: 
/**/rs1197.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1197.getLong("parent9_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1197.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1197.getBoolean("publicated1_0_");
03-03 13:57:09 jdbc: 
/**/rs1197.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1197.getString("name4_2_");
03-03 13:57:09 jdbc: 
/**/rs1197.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1197.getLong("parent3_4_2_");
03-03 13:57:09 jdbc: 
/**/rs1197.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1197.getLong("contentT2_2_4_");
03-03 13:57:09 jdbc: 
/**/rs1197.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1197.getLong("contentN1_4_");
03-03 13:57:09 jdbc: 
/**/rs1197.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1197.next();
03-03 13:57:09 jdbc: 
/**/rs1197.close();
03-03 13:57:09 jdbc: 
/**/prep1196.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1196.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 132
03-03 13:57:09 jdbc: RESULT_CLOSE 147
03-03 13:57:09 jdbc: 
/**/prep1196.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 145
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1197 = conn103.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 148
03-03 13:57:09 jdbc: 
/**/prep1197.setLong(1, 30L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1198 = prep1197.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 148
03-03 13:57:09 jdbc: RESULT_CLOSE 149
03-03 13:57:09 jdbc: 
/**/rs1198.next();
03-03 13:57:09 jdbc: 
/**/rs1198.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1198.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1198.getLong("contentN1_1_1_");
03-03 13:57:09 jdbc: 
/**/rs1198.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1198.getLong("contentT2_1_");
03-03 13:57:09 jdbc: 
/**/rs1198.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1198.next();
03-03 13:57:09 jdbc: 
/**/rs1198.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1198.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1198.getLong("contentN1_1_1_");
03-03 13:57:09 jdbc: 
/**/rs1198.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1198.getLong("contentT2_1_");
03-03 13:57:09 jdbc: 
/**/rs1198.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1198.next();
03-03 13:57:09 jdbc: 
/**/rs1198.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1198.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1198.getLong("contentN1_1_1_");
03-03 13:57:09 jdbc: 
/**/rs1198.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1198.getLong("contentT2_1_");
03-03 13:57:09 jdbc: 
/**/rs1198.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1198.next();
03-03 13:57:09 jdbc: 
/**/rs1198.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1198.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1198.getLong("contentN1_1_1_");
03-03 13:57:09 jdbc: 
/**/rs1198.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1198.getLong("contentT2_1_");
03-03 13:57:09 jdbc: 
/**/rs1198.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1198.next();
03-03 13:57:09 jdbc: 
/**/rs1198.close();
03-03 13:57:09 jdbc: 
/**/prep1197.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1197.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 132
03-03 13:57:09 jdbc: RESULT_CLOSE 150
03-03 13:57:09 jdbc: 
/**/prep1197.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 148
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1198 = conn103.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 151
03-03 13:57:09 jdbc: 
/**/prep1198.setLong(1, 130L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1199 = prep1198.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 151
03-03 13:57:09 jdbc: RESULT_CLOSE 152
03-03 13:57:09 jdbc: 
/**/rs1199.next();
03-03 13:57:09 jdbc: 
/**/rs1199.getLong("id1_0_");
03-03 13:57:09 jdbc: 
/**/rs1199.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1199.getLong("id0_1_");
03-03 13:57:09 jdbc: 
/**/rs1199.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1199.getLong("id4_2_");
03-03 13:57:09 jdbc: 
/**/rs1199.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1199.getLong("id4_3_");
03-03 13:57:09 jdbc: 
/**/rs1199.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1199.getLong("author8_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1199.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1199.getLong("contentId1_0_");
03-03 13:57:09 jdbc: 
/**/rs1199.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1199.getString("contentR3_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1199.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1199.getTimestamp("creation4_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1199.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1199.getTimestamp("lastModi5_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1199.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1199.getString("name1_0_");
03-03 13:57:09 jdbc: 
/**/rs1199.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1199.getLong("parent9_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1199.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1199.getBoolean("publicated1_0_");
03-03 13:57:09 jdbc: 
/**/rs1199.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1199.getLong("contentT2_2_4_");
03-03 13:57:09 jdbc: 
/**/rs1199.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1199.getLong("contentN1_4_");
03-03 13:57:09 jdbc: 
/**/rs1199.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1199.next();
03-03 13:57:09 jdbc: 
/**/rs1199.close();
03-03 13:57:09 jdbc: 
/**/prep1198.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1198.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 132
03-03 13:57:09 jdbc: RESULT_CLOSE 153
03-03 13:57:09 jdbc: 
/**/prep1198.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 151
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1199 = conn103.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 154
03-03 13:57:09 jdbc: 
/**/prep1199.setLong(1, 28L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1200 = prep1199.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 154
03-03 13:57:09 jdbc: RESULT_CLOSE 155
03-03 13:57:09 jdbc: 
/**/rs1200.next();
03-03 13:57:09 jdbc: 
/**/rs1200.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1200.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1200.getLong("contentN1_1_1_");
03-03 13:57:09 jdbc: 
/**/rs1200.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1200.getLong("contentT2_1_");
03-03 13:57:09 jdbc: 
/**/rs1200.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1200.next();
03-03 13:57:09 jdbc: 
/**/rs1200.close();
03-03 13:57:09 jdbc: 
/**/prep1199.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1199.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 132
03-03 13:57:09 jdbc: RESULT_CLOSE 156
03-03 13:57:09 jdbc: 
/**/prep1199.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 154
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1200 = conn103.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 157
03-03 13:57:09 jdbc: 
/**/prep1200.setLong(1, 132L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1201 = prep1200.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 157
03-03 13:57:09 jdbc: RESULT_CLOSE 158
03-03 13:57:09 jdbc: 
/**/rs1201.next();
03-03 13:57:09 jdbc: 
/**/rs1201.getLong("id1_0_");
03-03 13:57:09 jdbc: 
/**/rs1201.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1201.getLong("id0_1_");
03-03 13:57:09 jdbc: 
/**/rs1201.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1201.getLong("id4_2_");
03-03 13:57:09 jdbc: 
/**/rs1201.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1201.getLong("id4_3_");
03-03 13:57:09 jdbc: 
/**/rs1201.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1201.getLong("author8_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1201.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1201.getLong("contentId1_0_");
03-03 13:57:09 jdbc: 
/**/rs1201.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1201.getString("contentR3_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1201.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1201.getTimestamp("creation4_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1201.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1201.getTimestamp("lastModi5_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1201.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1201.getString("name1_0_");
03-03 13:57:09 jdbc: 
/**/rs1201.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1201.getLong("parent9_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1201.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1201.getBoolean("publicated1_0_");
03-03 13:57:09 jdbc: 
/**/rs1201.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1201.getLong("contentT2_2_4_");
03-03 13:57:09 jdbc: 
/**/rs1201.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1201.getLong("contentN1_4_");
03-03 13:57:09 jdbc: 
/**/rs1201.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1201.next();
03-03 13:57:09 jdbc: 
/**/rs1201.close();
03-03 13:57:09 jdbc: 
/**/prep1200.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1200.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 132
03-03 13:57:09 jdbc: RESULT_CLOSE 159
03-03 13:57:09 jdbc: 
/**/prep1200.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 157
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1201 = conn103.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 160
03-03 13:57:09 jdbc: 
/**/prep1201.setLong(1, 29L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1202 = prep1201.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 160
03-03 13:57:09 jdbc: RESULT_CLOSE 161
03-03 13:57:09 jdbc: 
/**/rs1202.next();
03-03 13:57:09 jdbc: 
/**/rs1202.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1202.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1202.getLong("contentN1_1_1_");
03-03 13:57:09 jdbc: 
/**/rs1202.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1202.getLong("contentT2_1_");
03-03 13:57:09 jdbc: 
/**/rs1202.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1202.next();
03-03 13:57:09 jdbc: 
/**/rs1202.close();
03-03 13:57:09 jdbc: 
/**/prep1201.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1201.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 132
03-03 13:57:09 jdbc: RESULT_CLOSE 162
03-03 13:57:09 jdbc: 
/**/prep1201.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 160
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1202 = conn103.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 163
03-03 13:57:09 jdbc: 
/**/prep1202.setLong(1, 133L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1203 = prep1202.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 163
03-03 13:57:09 jdbc: RESULT_CLOSE 164
03-03 13:57:09 jdbc: 
/**/rs1203.next();
03-03 13:57:09 jdbc: 
/**/rs1203.getLong("id1_0_");
03-03 13:57:09 jdbc: 
/**/rs1203.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1203.getLong("id0_1_");
03-03 13:57:09 jdbc: 
/**/rs1203.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1203.getLong("id4_2_");
03-03 13:57:09 jdbc: 
/**/rs1203.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1203.getLong("id4_3_");
03-03 13:57:09 jdbc: 
/**/rs1203.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1203.getLong("contentT2_2_4_");
03-03 13:57:09 jdbc: 
/**/rs1203.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1203.getLong("contentN1_4_");
03-03 13:57:09 jdbc: 
/**/rs1203.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1203.next();
03-03 13:57:09 jdbc: 
/**/rs1203.close();
03-03 13:57:09 jdbc: 
/**/prep1202.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1202.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 132
03-03 13:57:09 jdbc: RESULT_CLOSE 165
03-03 13:57:09 jdbc: 
/**/prep1202.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 163
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1203 = conn103.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 166
03-03 13:57:09 jdbc: 
/**/prep1203.setLong(1, 135L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1204 = prep1203.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 166
03-03 13:57:09 jdbc: RESULT_CLOSE 167
03-03 13:57:09 jdbc: 
/**/rs1204.next();
03-03 13:57:09 jdbc: 
/**/rs1204.getLong("id1_0_");
03-03 13:57:09 jdbc: 
/**/rs1204.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1204.getLong("id0_1_");
03-03 13:57:09 jdbc: 
/**/rs1204.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1204.getLong("id4_2_");
03-03 13:57:09 jdbc: 
/**/rs1204.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1204.getLong("id4_3_");
03-03 13:57:09 jdbc: 
/**/rs1204.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1204.getLong("contentT2_2_4_");
03-03 13:57:09 jdbc: 
/**/rs1204.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1204.getLong("contentN1_4_");
03-03 13:57:09 jdbc: 
/**/rs1204.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1204.next();
03-03 13:57:09 jdbc: 
/**/rs1204.close();
03-03 13:57:09 jdbc: 
/**/prep1203.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1203.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 132
03-03 13:57:09 jdbc: RESULT_CLOSE 168
03-03 13:57:09 jdbc: 
/**/prep1203.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 166
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1204 = conn103.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 169
03-03 13:57:09 jdbc: 
/**/prep1204.setLong(1, 138L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1205 = prep1204.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 169
03-03 13:57:09 jdbc: RESULT_CLOSE 170
03-03 13:57:09 jdbc: 
/**/rs1205.next();
03-03 13:57:09 jdbc: 
/**/rs1205.getLong("id1_0_");
03-03 13:57:09 jdbc: 
/**/rs1205.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1205.getLong("id0_1_");
03-03 13:57:09 jdbc: 
/**/rs1205.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1205.getLong("id4_2_");
03-03 13:57:09 jdbc: 
/**/rs1205.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1205.getLong("id4_3_");
03-03 13:57:09 jdbc: 
/**/rs1205.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1205.getLong("author8_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1205.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1205.getLong("contentId1_0_");
03-03 13:57:09 jdbc: 
/**/rs1205.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1205.getString("contentR3_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1205.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1205.getTimestamp("creation4_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1205.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1205.getTimestamp("lastModi5_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1205.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1205.getString("name1_0_");
03-03 13:57:09 jdbc: 
/**/rs1205.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1205.getLong("parent9_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1205.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1205.getBoolean("publicated1_0_");
03-03 13:57:09 jdbc: 
/**/rs1205.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1205.getLong("contentT2_2_4_");
03-03 13:57:09 jdbc: 
/**/rs1205.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1205.getLong("contentN1_4_");
03-03 13:57:09 jdbc: 
/**/rs1205.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1205.next();
03-03 13:57:09 jdbc: 
/**/rs1205.close();
03-03 13:57:09 jdbc: 
/**/prep1204.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1204.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 132
03-03 13:57:09 jdbc: RESULT_CLOSE 171
03-03 13:57:09 jdbc: 
/**/prep1204.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 169
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1205 = conn103.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 172
03-03 13:57:09 jdbc: 
/**/prep1205.setLong(1, 32L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1206 = prep1205.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 172
03-03 13:57:09 jdbc: RESULT_CLOSE 173
03-03 13:57:09 jdbc: 
/**/rs1206.next();
03-03 13:57:09 jdbc: 
/**/rs1206.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1206.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1206.getLong("contentN1_1_1_");
03-03 13:57:09 jdbc: 
/**/rs1206.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1206.getLong("contentT2_1_");
03-03 13:57:09 jdbc: 
/**/rs1206.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1206.next();
03-03 13:57:09 jdbc: 
/**/rs1206.close();
03-03 13:57:09 jdbc: 
/**/prep1205.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1205.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 132
03-03 13:57:09 jdbc: RESULT_CLOSE 174
03-03 13:57:09 jdbc: 
/**/prep1205.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 172
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1206 = conn103.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 175
03-03 13:57:09 jdbc: 
/**/prep1206.setLong(1, 140L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1207 = prep1206.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 175
03-03 13:57:09 jdbc: RESULT_CLOSE 176
03-03 13:57:09 jdbc: 
/**/rs1207.next();
03-03 13:57:09 jdbc: 
/**/rs1207.getLong("id1_0_");
03-03 13:57:09 jdbc: 
/**/rs1207.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1207.getLong("id0_1_");
03-03 13:57:09 jdbc: 
/**/rs1207.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1207.getLong("id4_2_");
03-03 13:57:09 jdbc: 
/**/rs1207.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1207.getLong("id4_3_");
03-03 13:57:09 jdbc: 
/**/rs1207.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1207.getLong("author8_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1207.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1207.getLong("contentId1_0_");
03-03 13:57:09 jdbc: 
/**/rs1207.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1207.getString("contentR3_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1207.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1207.getTimestamp("creation4_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1207.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1207.getTimestamp("lastModi5_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1207.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1207.getString("name1_0_");
03-03 13:57:09 jdbc: 
/**/rs1207.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1207.getLong("parent9_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1207.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1207.getBoolean("publicated1_0_");
03-03 13:57:09 jdbc: 
/**/rs1207.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1207.getLong("contentT2_2_4_");
03-03 13:57:09 jdbc: 
/**/rs1207.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1207.getLong("contentN1_4_");
03-03 13:57:09 jdbc: 
/**/rs1207.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1207.next();
03-03 13:57:09 jdbc: 
/**/rs1207.close();
03-03 13:57:09 jdbc: 
/**/prep1206.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1206.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 132
03-03 13:57:09 jdbc: RESULT_CLOSE 177
03-03 13:57:09 jdbc: 
/**/prep1206.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 175
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1207 = conn103.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 178
03-03 13:57:09 jdbc: 
/**/prep1207.setLong(1, 33L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1208 = prep1207.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 178
03-03 13:57:09 jdbc: RESULT_CLOSE 179
03-03 13:57:09 jdbc: 
/**/rs1208.next();
03-03 13:57:09 jdbc: 
/**/rs1208.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1208.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1208.getLong("contentN1_1_1_");
03-03 13:57:09 jdbc: 
/**/rs1208.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1208.getLong("contentT2_1_");
03-03 13:57:09 jdbc: 
/**/rs1208.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1208.next();
03-03 13:57:09 jdbc: 
/**/rs1208.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1208.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1208.getLong("contentN1_1_1_");
03-03 13:57:09 jdbc: 
/**/rs1208.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1208.getLong("contentT2_1_");
03-03 13:57:09 jdbc: 
/**/rs1208.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1208.next();
03-03 13:57:09 jdbc: 
/**/rs1208.close();
03-03 13:57:09 jdbc: 
/**/prep1207.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1207.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 132
03-03 13:57:09 jdbc: RESULT_CLOSE 180
03-03 13:57:09 jdbc: 
/**/prep1207.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 178
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1208 = conn103.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 181
03-03 13:57:09 jdbc: 
/**/prep1208.setLong(1, 141L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1209 = prep1208.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 181
03-03 13:57:09 jdbc: RESULT_CLOSE 182
03-03 13:57:09 jdbc: 
/**/rs1209.next();
03-03 13:57:09 jdbc: 
/**/rs1209.getLong("id1_0_");
03-03 13:57:09 jdbc: 
/**/rs1209.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1209.getLong("id0_1_");
03-03 13:57:09 jdbc: 
/**/rs1209.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1209.getLong("id4_2_");
03-03 13:57:09 jdbc: 
/**/rs1209.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1209.getLong("id4_3_");
03-03 13:57:09 jdbc: 
/**/rs1209.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1209.getLong("contentT2_2_4_");
03-03 13:57:09 jdbc: 
/**/rs1209.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1209.getLong("contentN1_4_");
03-03 13:57:09 jdbc: 
/**/rs1209.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1209.next();
03-03 13:57:09 jdbc: 
/**/rs1209.close();
03-03 13:57:09 jdbc: 
/**/prep1208.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1208.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 132
03-03 13:57:09 jdbc: RESULT_CLOSE 183
03-03 13:57:09 jdbc: 
/**/prep1208.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 181
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1209 = conn103.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 184
03-03 13:57:09 jdbc: 
/**/prep1209.setLong(1, 143L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1210 = prep1209.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 184
03-03 13:57:09 jdbc: RESULT_CLOSE 185
03-03 13:57:09 jdbc: 
/**/rs1210.next();
03-03 13:57:09 jdbc: 
/**/rs1210.getLong("id1_0_");
03-03 13:57:09 jdbc: 
/**/rs1210.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1210.getLong("id0_1_");
03-03 13:57:09 jdbc: 
/**/rs1210.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1210.getLong("id4_2_");
03-03 13:57:09 jdbc: 
/**/rs1210.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1210.getLong("id4_3_");
03-03 13:57:09 jdbc: 
/**/rs1210.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1210.getLong("author8_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1210.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1210.getLong("contentId1_0_");
03-03 13:57:09 jdbc: 
/**/rs1210.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1210.getString("contentR3_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1210.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1210.getTimestamp("creation4_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1210.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1210.getTimestamp("lastModi5_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1210.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1210.getString("name1_0_");
03-03 13:57:09 jdbc: 
/**/rs1210.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1210.getLong("parent9_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1210.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1210.getBoolean("publicated1_0_");
03-03 13:57:09 jdbc: 
/**/rs1210.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1210.getString("name4_2_");
03-03 13:57:09 jdbc: 
/**/rs1210.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1210.getLong("parent3_4_2_");
03-03 13:57:09 jdbc: 
/**/rs1210.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1210.getString("name4_3_");
03-03 13:57:09 jdbc: 
/**/rs1210.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1210.getLong("parent3_4_3_");
03-03 13:57:09 jdbc: 
/**/rs1210.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1210.getLong("contentT2_2_4_");
03-03 13:57:09 jdbc: 
/**/rs1210.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1210.getLong("contentN1_4_");
03-03 13:57:09 jdbc: 
/**/rs1210.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1210.next();
03-03 13:57:09 jdbc: 
/**/rs1210.getLong("id1_0_");
03-03 13:57:09 jdbc: 
/**/rs1210.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1210.getLong("id0_1_");
03-03 13:57:09 jdbc: 
/**/rs1210.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1210.getLong("id4_2_");
03-03 13:57:09 jdbc: 
/**/rs1210.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1210.getLong("id4_3_");
03-03 13:57:09 jdbc: 
/**/rs1210.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1210.getLong("author8_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1210.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1210.getLong("contentId1_0_");
03-03 13:57:09 jdbc: 
/**/rs1210.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1210.getString("contentR3_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1210.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1210.getTimestamp("creation4_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1210.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1210.getTimestamp("lastModi5_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1210.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1210.getString("name1_0_");
03-03 13:57:09 jdbc: 
/**/rs1210.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1210.getLong("parent9_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1210.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1210.getBoolean("publicated1_0_");
03-03 13:57:09 jdbc: 
/**/rs1210.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1210.getLong("contentT2_2_4_");
03-03 13:57:09 jdbc: 
/**/rs1210.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1210.getLong("contentN1_4_");
03-03 13:57:09 jdbc: 
/**/rs1210.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1210.next();
03-03 13:57:09 jdbc: 
/**/rs1210.getLong("id1_0_");
03-03 13:57:09 jdbc: 
/**/rs1210.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1210.getLong("id0_1_");
03-03 13:57:09 jdbc: 
/**/rs1210.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1210.getLong("id4_2_");
03-03 13:57:09 jdbc: 
/**/rs1210.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1210.getLong("id4_3_");
03-03 13:57:09 jdbc: 
/**/rs1210.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1210.getLong("author8_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1210.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1210.getLong("contentId1_0_");
03-03 13:57:09 jdbc: 
/**/rs1210.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1210.getString("contentR3_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1210.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1210.getTimestamp("creation4_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1210.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1210.getTimestamp("lastModi5_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1210.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1210.getString("name1_0_");
03-03 13:57:09 jdbc: 
/**/rs1210.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1210.getLong("parent9_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1210.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1210.getBoolean("publicated1_0_");
03-03 13:57:09 jdbc: 
/**/rs1210.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1210.getLong("contentT2_2_4_");
03-03 13:57:09 jdbc: 
/**/rs1210.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1210.getLong("contentN1_4_");
03-03 13:57:09 jdbc: 
/**/rs1210.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1210.next();
03-03 13:57:09 jdbc: 
/**/rs1210.getLong("id1_0_");
03-03 13:57:09 jdbc: 
/**/rs1210.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1210.getLong("id0_1_");
03-03 13:57:09 jdbc: 
/**/rs1210.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1210.getLong("id4_2_");
03-03 13:57:09 jdbc: 
/**/rs1210.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1210.getLong("id4_3_");
03-03 13:57:09 jdbc: 
/**/rs1210.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1210.getLong("author8_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1210.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1210.getLong("contentId1_0_");
03-03 13:57:09 jdbc: 
/**/rs1210.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1210.getString("contentR3_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1210.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1210.getTimestamp("creation4_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1210.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1210.getTimestamp("lastModi5_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1210.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1210.getString("name1_0_");
03-03 13:57:09 jdbc: 
/**/rs1210.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1210.getLong("parent9_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1210.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1210.getBoolean("publicated1_0_");
03-03 13:57:09 jdbc: 
/**/rs1210.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1210.getLong("contentT2_2_4_");
03-03 13:57:09 jdbc: 
/**/rs1210.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1210.getLong("contentN1_4_");
03-03 13:57:09 jdbc: 
/**/rs1210.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1210.next();
03-03 13:57:09 jdbc: 
/**/rs1210.getLong("id1_0_");
03-03 13:57:09 jdbc: 
/**/rs1210.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1210.getLong("id0_1_");
03-03 13:57:09 jdbc: 
/**/rs1210.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1210.getLong("id4_2_");
03-03 13:57:09 jdbc: 
/**/rs1210.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1210.getLong("id4_3_");
03-03 13:57:09 jdbc: 
/**/rs1210.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1210.getLong("author8_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1210.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1210.getLong("contentId1_0_");
03-03 13:57:09 jdbc: 
/**/rs1210.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1210.getString("contentR3_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1210.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1210.getTimestamp("creation4_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1210.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1210.getTimestamp("lastModi5_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1210.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1210.getString("name1_0_");
03-03 13:57:09 jdbc: 
/**/rs1210.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1210.getLong("parent9_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1210.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1210.getBoolean("publicated1_0_");
03-03 13:57:09 jdbc: 
/**/rs1210.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1210.getLong("contentT2_2_4_");
03-03 13:57:09 jdbc: 
/**/rs1210.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1210.getLong("contentN1_4_");
03-03 13:57:09 jdbc: 
/**/rs1210.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1210.next();
03-03 13:57:09 jdbc: 
/**/rs1210.close();
03-03 13:57:09 jdbc: 
/**/prep1209.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1209.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 132
03-03 13:57:09 jdbc: RESULT_CLOSE 186
03-03 13:57:09 jdbc: 
/**/prep1209.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 184
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1210 = conn103.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 187
03-03 13:57:09 jdbc: 
/**/prep1210.setLong(1, 39L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1211 = prep1210.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 187
03-03 13:57:09 jdbc: RESULT_CLOSE 188
03-03 13:57:09 jdbc: 
/**/rs1211.next();
03-03 13:57:09 jdbc: 
/**/rs1211.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1211.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1211.getLong("contentN1_1_1_");
03-03 13:57:09 jdbc: 
/**/rs1211.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1211.getLong("contentT2_1_");
03-03 13:57:09 jdbc: 
/**/rs1211.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1211.next();
03-03 13:57:09 jdbc: 
/**/rs1211.close();
03-03 13:57:09 jdbc: 
/**/prep1210.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1210.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 132
03-03 13:57:09 jdbc: RESULT_CLOSE 189
03-03 13:57:09 jdbc: 
/**/prep1210.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 187
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1211 = conn103.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 190
03-03 13:57:09 jdbc: 
/**/prep1211.setLong(1, 42L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1212 = prep1211.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 190
03-03 13:57:09 jdbc: RESULT_CLOSE 191
03-03 13:57:09 jdbc: 
/**/rs1212.next();
03-03 13:57:09 jdbc: 
/**/rs1212.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1212.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1212.getLong("contentN1_1_1_");
03-03 13:57:09 jdbc: 
/**/rs1212.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1212.getLong("contentT2_1_");
03-03 13:57:09 jdbc: 
/**/rs1212.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1212.next();
03-03 13:57:09 jdbc: 
/**/rs1212.close();
03-03 13:57:09 jdbc: 
/**/prep1211.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1211.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 132
03-03 13:57:09 jdbc: RESULT_CLOSE 192
03-03 13:57:09 jdbc: 
/**/prep1211.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 190
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1212 = conn103.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 193
03-03 13:57:09 jdbc: 
/**/prep1212.setLong(1, 43L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1213 = prep1212.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 193
03-03 13:57:09 jdbc: RESULT_CLOSE 194
03-03 13:57:09 jdbc: 
/**/rs1213.next();
03-03 13:57:09 jdbc: 
/**/rs1213.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1213.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1213.getLong("contentN1_1_1_");
03-03 13:57:09 jdbc: 
/**/rs1213.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1213.getLong("contentT2_1_");
03-03 13:57:09 jdbc: 
/**/rs1213.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1213.next();
03-03 13:57:09 jdbc: 
/**/rs1213.close();
03-03 13:57:09 jdbc: 
/**/prep1212.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1212.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: SESSION_PREPARE 196
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 196
03-03 13:57:09 jdbc: RESULT_CLOSE 195
03-03 13:57:09 jdbc: 
/**/prep1212.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 193
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1213 = conn103.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 197
03-03 13:57:09 jdbc: 
/**/prep1213.setLong(1, 40L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1214 = prep1213.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 197
03-03 13:57:09 jdbc: RESULT_CLOSE 198
03-03 13:57:09 jdbc: 
/**/rs1214.next();
03-03 13:57:09 jdbc: 
/**/rs1214.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1214.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1214.getLong("contentN1_1_1_");
03-03 13:57:09 jdbc: 
/**/rs1214.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1214.getLong("contentT2_1_");
03-03 13:57:09 jdbc: 
/**/rs1214.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1214.next();
03-03 13:57:09 jdbc: 
/**/rs1214.close();
03-03 13:57:09 jdbc: 
/**/prep1213.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1213.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 196
03-03 13:57:09 jdbc: RESULT_CLOSE 199
03-03 13:57:09 jdbc: 
/**/prep1213.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 197
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1214 = conn103.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 200
03-03 13:57:09 jdbc: 
/**/prep1214.setLong(1, 41L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1215 = prep1214.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 200
03-03 13:57:09 jdbc: RESULT_CLOSE 201
03-03 13:57:09 jdbc: 
/**/rs1215.next();
03-03 13:57:09 jdbc: 
/**/rs1215.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1215.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1215.getLong("contentN1_1_1_");
03-03 13:57:09 jdbc: 
/**/rs1215.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1215.getLong("contentT2_1_");
03-03 13:57:09 jdbc: 
/**/rs1215.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1215.next();
03-03 13:57:09 jdbc: 
/**/rs1215.close();
03-03 13:57:09 jdbc: 
/**/prep1214.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1214.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 196
03-03 13:57:09 jdbc: RESULT_CLOSE 202
03-03 13:57:09 jdbc: 
/**/prep1214.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 200
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1215 = conn103.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 203
03-03 13:57:09 jdbc: 
/**/prep1215.setLong(1, 149L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1216 = prep1215.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 203
03-03 13:57:09 jdbc: RESULT_CLOSE 204
03-03 13:57:09 jdbc: 
/**/rs1216.next();
03-03 13:57:09 jdbc: 
/**/rs1216.getLong("id1_0_");
03-03 13:57:09 jdbc: 
/**/rs1216.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1216.getLong("id0_1_");
03-03 13:57:09 jdbc: 
/**/rs1216.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1216.getLong("id4_2_");
03-03 13:57:09 jdbc: 
/**/rs1216.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1216.getLong("id4_3_");
03-03 13:57:09 jdbc: 
/**/rs1216.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1216.getLong("author8_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1216.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1216.getLong("contentId1_0_");
03-03 13:57:09 jdbc: 
/**/rs1216.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1216.getString("contentR3_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1216.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1216.getTimestamp("creation4_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1216.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1216.getTimestamp("lastModi5_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1216.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1216.getString("name1_0_");
03-03 13:57:09 jdbc: 
/**/rs1216.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1216.getLong("parent9_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1216.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1216.getBoolean("publicated1_0_");
03-03 13:57:09 jdbc: 
/**/rs1216.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1216.getLong("contentT2_2_4_");
03-03 13:57:09 jdbc: 
/**/rs1216.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1216.getLong("contentN1_4_");
03-03 13:57:09 jdbc: 
/**/rs1216.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1216.next();
03-03 13:57:09 jdbc: 
/**/rs1216.close();
03-03 13:57:09 jdbc: 
/**/prep1215.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1215.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 196
03-03 13:57:09 jdbc: RESULT_CLOSE 205
03-03 13:57:09 jdbc: 
/**/prep1215.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 203
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1216 = conn103.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 206
03-03 13:57:09 jdbc: 
/**/prep1216.setLong(1, 45L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1217 = prep1216.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 206
03-03 13:57:09 jdbc: RESULT_CLOSE 207
03-03 13:57:09 jdbc: 
/**/rs1217.next();
03-03 13:57:09 jdbc: 
/**/rs1217.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1217.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1217.getLong("contentN1_1_1_");
03-03 13:57:09 jdbc: 
/**/rs1217.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1217.getLong("contentT2_1_");
03-03 13:57:09 jdbc: 
/**/rs1217.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1217.next();
03-03 13:57:09 jdbc: 
/**/rs1217.close();
03-03 13:57:09 jdbc: 
/**/prep1216.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1216.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 196
03-03 13:57:09 jdbc: RESULT_CLOSE 208
03-03 13:57:09 jdbc: 
/**/prep1216.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 206
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1217 = conn103.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 209
03-03 13:57:09 jdbc: 
/**/prep1217.setLong(1, 150L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1218 = prep1217.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 209
03-03 13:57:09 jdbc: RESULT_CLOSE 210
03-03 13:57:09 jdbc: 
/**/rs1218.next();
03-03 13:57:09 jdbc: 
/**/rs1218.getLong("id1_0_");
03-03 13:57:09 jdbc: 
/**/rs1218.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1218.getLong("id0_1_");
03-03 13:57:09 jdbc: 
/**/rs1218.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1218.getLong("id4_2_");
03-03 13:57:09 jdbc: 
/**/rs1218.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1218.getLong("id4_3_");
03-03 13:57:09 jdbc: 
/**/rs1218.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1218.getLong("author8_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1218.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1218.getLong("contentId1_0_");
03-03 13:57:09 jdbc: 
/**/rs1218.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1218.getString("contentR3_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1218.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1218.getTimestamp("creation4_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1218.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1218.getTimestamp("lastModi5_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1218.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1218.getString("name1_0_");
03-03 13:57:09 jdbc: 
/**/rs1218.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1218.getLong("parent9_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1218.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1218.getBoolean("publicated1_0_");
03-03 13:57:09 jdbc: 
/**/rs1218.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1218.getLong("contentT2_2_4_");
03-03 13:57:09 jdbc: 
/**/rs1218.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1218.getLong("contentN1_4_");
03-03 13:57:09 jdbc: 
/**/rs1218.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1218.next();
03-03 13:57:09 jdbc: 
/**/rs1218.close();
03-03 13:57:09 jdbc: 
/**/prep1217.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1217.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 196
03-03 13:57:09 jdbc: RESULT_CLOSE 211
03-03 13:57:09 jdbc: 
/**/prep1217.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 209
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1218 = conn103.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 212
03-03 13:57:09 jdbc: 
/**/prep1218.setLong(1, 46L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1219 = prep1218.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 212
03-03 13:57:09 jdbc: RESULT_CLOSE 213
03-03 13:57:09 jdbc: 
/**/rs1219.next();
03-03 13:57:09 jdbc: 
/**/rs1219.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1219.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1219.getLong("contentN1_1_1_");
03-03 13:57:09 jdbc: 
/**/rs1219.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1219.getLong("contentT2_1_");
03-03 13:57:09 jdbc: 
/**/rs1219.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1219.next();
03-03 13:57:09 jdbc: 
/**/rs1219.close();
03-03 13:57:09 jdbc: 
/**/prep1218.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1218.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 196
03-03 13:57:09 jdbc: RESULT_CLOSE 214
03-03 13:57:09 jdbc: 
/**/prep1218.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 212
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1219 = conn103.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 215
03-03 13:57:09 jdbc: 
/**/prep1219.setLong(1, 152L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1220 = prep1219.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 215
03-03 13:57:09 jdbc: RESULT_CLOSE 216
03-03 13:57:09 jdbc: 
/**/rs1220.next();
03-03 13:57:09 jdbc: 
/**/rs1220.getLong("id1_0_");
03-03 13:57:09 jdbc: 
/**/rs1220.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1220.getLong("id0_1_");
03-03 13:57:09 jdbc: 
/**/rs1220.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1220.getLong("id4_2_");
03-03 13:57:09 jdbc: 
/**/rs1220.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1220.getLong("id4_3_");
03-03 13:57:09 jdbc: 
/**/rs1220.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1220.getLong("author8_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1220.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1220.getLong("contentId1_0_");
03-03 13:57:09 jdbc: 
/**/rs1220.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1220.getString("contentR3_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1220.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1220.getTimestamp("creation4_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1220.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1220.getTimestamp("lastModi5_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1220.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1220.getString("name1_0_");
03-03 13:57:09 jdbc: 
/**/rs1220.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1220.getLong("parent9_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1220.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1220.getBoolean("publicated1_0_");
03-03 13:57:09 jdbc: 
/**/rs1220.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1220.getLong("contentT2_2_4_");
03-03 13:57:09 jdbc: 
/**/rs1220.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1220.getLong("contentN1_4_");
03-03 13:57:09 jdbc: 
/**/rs1220.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1220.next();
03-03 13:57:09 jdbc: 
/**/rs1220.close();
03-03 13:57:09 jdbc: 
/**/prep1219.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1219.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 196
03-03 13:57:09 jdbc: RESULT_CLOSE 217
03-03 13:57:09 jdbc: 
/**/prep1219.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 215
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1220 = conn103.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 218
03-03 13:57:09 jdbc: 
/**/prep1220.setLong(1, 48L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1221 = prep1220.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 218
03-03 13:57:09 jdbc: RESULT_CLOSE 219
03-03 13:57:09 jdbc: 
/**/rs1221.next();
03-03 13:57:09 jdbc: 
/**/rs1221.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1221.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1221.getLong("contentN1_1_1_");
03-03 13:57:09 jdbc: 
/**/rs1221.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1221.getLong("contentT2_1_");
03-03 13:57:09 jdbc: 
/**/rs1221.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1221.next();
03-03 13:57:09 jdbc: 
/**/rs1221.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1221.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1221.getLong("contentN1_1_1_");
03-03 13:57:09 jdbc: 
/**/rs1221.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1221.getLong("contentT2_1_");
03-03 13:57:09 jdbc: 
/**/rs1221.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1221.next();
03-03 13:57:09 jdbc: 
/**/rs1221.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1221.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1221.getLong("contentN1_1_1_");
03-03 13:57:09 jdbc: 
/**/rs1221.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1221.getLong("contentT2_1_");
03-03 13:57:09 jdbc: 
/**/rs1221.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1221.next();
03-03 13:57:09 jdbc: 
/**/rs1221.close();
03-03 13:57:09 jdbc: 
/**/prep1220.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1220.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 196
03-03 13:57:09 jdbc: RESULT_CLOSE 220
03-03 13:57:09 jdbc: 
/**/prep1220.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 218
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1221 = conn103.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 221
03-03 13:57:09 jdbc: 
/**/prep1221.setLong(1, 153L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1222 = prep1221.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 221
03-03 13:57:09 jdbc: RESULT_CLOSE 222
03-03 13:57:09 jdbc: 
/**/rs1222.next();
03-03 13:57:09 jdbc: 
/**/rs1222.getLong("id1_0_");
03-03 13:57:09 jdbc: 
/**/rs1222.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1222.getLong("id0_1_");
03-03 13:57:09 jdbc: 
/**/rs1222.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1222.getLong("id4_2_");
03-03 13:57:09 jdbc: 
/**/rs1222.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1222.getLong("id4_3_");
03-03 13:57:09 jdbc: 
/**/rs1222.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1222.getLong("contentT2_2_4_");
03-03 13:57:09 jdbc: 
/**/rs1222.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1222.getLong("contentN1_4_");
03-03 13:57:09 jdbc: 
/**/rs1222.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1222.next();
03-03 13:57:09 jdbc: 
/**/rs1222.close();
03-03 13:57:09 jdbc: 
/**/prep1221.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1221.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 196
03-03 13:57:09 jdbc: RESULT_CLOSE 223
03-03 13:57:09 jdbc: 
/**/prep1221.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 221
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1222 = conn103.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 224
03-03 13:57:09 jdbc: 
/**/prep1222.setLong(1, 154L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1223 = prep1222.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 224
03-03 13:57:09 jdbc: RESULT_CLOSE 225
03-03 13:57:09 jdbc: 
/**/rs1223.next();
03-03 13:57:09 jdbc: 
/**/rs1223.getLong("id1_0_");
03-03 13:57:09 jdbc: 
/**/rs1223.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1223.getLong("id0_1_");
03-03 13:57:09 jdbc: 
/**/rs1223.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1223.getLong("id4_2_");
03-03 13:57:09 jdbc: 
/**/rs1223.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1223.getLong("id4_3_");
03-03 13:57:09 jdbc: 
/**/rs1223.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1223.getLong("contentT2_2_4_");
03-03 13:57:09 jdbc: 
/**/rs1223.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1223.getLong("contentN1_4_");
03-03 13:57:09 jdbc: 
/**/rs1223.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1223.next();
03-03 13:57:09 jdbc: 
/**/rs1223.close();
03-03 13:57:09 jdbc: 
/**/prep1222.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1222.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 196
03-03 13:57:09 jdbc: RESULT_CLOSE 226
03-03 13:57:09 jdbc: 
/**/prep1222.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 224
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1223 = conn103.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 227
03-03 13:57:09 jdbc: 
/**/prep1223.setLong(1, 155L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1224 = prep1223.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 227
03-03 13:57:09 jdbc: RESULT_CLOSE 228
03-03 13:57:09 jdbc: 
/**/rs1224.next();
03-03 13:57:09 jdbc: 
/**/rs1224.getLong("id1_0_");
03-03 13:57:09 jdbc: 
/**/rs1224.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1224.getLong("id0_1_");
03-03 13:57:09 jdbc: 
/**/rs1224.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1224.getLong("id4_2_");
03-03 13:57:09 jdbc: 
/**/rs1224.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1224.getLong("id4_3_");
03-03 13:57:09 jdbc: 
/**/rs1224.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1224.getLong("author8_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1224.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1224.getLong("contentId1_0_");
03-03 13:57:09 jdbc: 
/**/rs1224.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1224.getString("contentR3_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1224.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1224.getTimestamp("creation4_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1224.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1224.getTimestamp("lastModi5_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1224.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1224.getString("name1_0_");
03-03 13:57:09 jdbc: 
/**/rs1224.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1224.getLong("parent9_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1224.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1224.getBoolean("publicated1_0_");
03-03 13:57:09 jdbc: 
/**/rs1224.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1224.getLong("contentT2_2_4_");
03-03 13:57:09 jdbc: 
/**/rs1224.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1224.getLong("contentN1_4_");
03-03 13:57:09 jdbc: 
/**/rs1224.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1224.next();
03-03 13:57:09 jdbc: 
/**/rs1224.close();
03-03 13:57:09 jdbc: 
/**/prep1223.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1223.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 196
03-03 13:57:09 jdbc: RESULT_CLOSE 229
03-03 13:57:09 jdbc: 
/**/prep1223.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 227
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1224 = conn103.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 230
03-03 13:57:09 jdbc: 
/**/prep1224.setLong(1, 49L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1225 = prep1224.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 230
03-03 13:57:09 jdbc: RESULT_CLOSE 231
03-03 13:57:09 jdbc: 
/**/rs1225.next();
03-03 13:57:09 jdbc: 
/**/rs1225.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1225.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1225.getLong("contentN1_1_1_");
03-03 13:57:09 jdbc: 
/**/rs1225.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1225.getLong("contentT2_1_");
03-03 13:57:09 jdbc: 
/**/rs1225.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1225.next();
03-03 13:57:09 jdbc: 
/**/rs1225.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1225.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1225.getLong("contentN1_1_1_");
03-03 13:57:09 jdbc: 
/**/rs1225.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1225.getLong("contentT2_1_");
03-03 13:57:09 jdbc: 
/**/rs1225.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1225.next();
03-03 13:57:09 jdbc: 
/**/rs1225.close();
03-03 13:57:09 jdbc: 
/**/prep1224.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1224.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 196
03-03 13:57:09 jdbc: RESULT_CLOSE 232
03-03 13:57:09 jdbc: 
/**/prep1224.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 230
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1225 = conn103.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 233
03-03 13:57:09 jdbc: 
/**/prep1225.setLong(1, 156L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1226 = prep1225.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 233
03-03 13:57:09 jdbc: RESULT_CLOSE 234
03-03 13:57:09 jdbc: 
/**/rs1226.next();
03-03 13:57:09 jdbc: 
/**/rs1226.getLong("id1_0_");
03-03 13:57:09 jdbc: 
/**/rs1226.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1226.getLong("id0_1_");
03-03 13:57:09 jdbc: 
/**/rs1226.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1226.getLong("id4_2_");
03-03 13:57:09 jdbc: 
/**/rs1226.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1226.getLong("id4_3_");
03-03 13:57:09 jdbc: 
/**/rs1226.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1226.getLong("contentT2_2_4_");
03-03 13:57:09 jdbc: 
/**/rs1226.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1226.getLong("contentN1_4_");
03-03 13:57:09 jdbc: 
/**/rs1226.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1226.next();
03-03 13:57:09 jdbc: 
/**/rs1226.close();
03-03 13:57:09 jdbc: 
/**/prep1225.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1225.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 196
03-03 13:57:09 jdbc: RESULT_CLOSE 235
03-03 13:57:09 jdbc: 
/**/prep1225.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 233
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1226 = conn103.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 236
03-03 13:57:09 jdbc: 
/**/prep1226.setLong(1, 157L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1227 = prep1226.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 236
03-03 13:57:09 jdbc: RESULT_CLOSE 237
03-03 13:57:09 jdbc: 
/**/rs1227.next();
03-03 13:57:09 jdbc: 
/**/rs1227.getLong("id1_0_");
03-03 13:57:09 jdbc: 
/**/rs1227.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1227.getLong("id0_1_");
03-03 13:57:09 jdbc: 
/**/rs1227.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1227.getLong("id4_2_");
03-03 13:57:09 jdbc: 
/**/rs1227.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1227.getLong("id4_3_");
03-03 13:57:09 jdbc: 
/**/rs1227.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1227.getLong("contentT2_2_4_");
03-03 13:57:09 jdbc: 
/**/rs1227.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1227.getLong("contentN1_4_");
03-03 13:57:09 jdbc: 
/**/rs1227.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1227.next();
03-03 13:57:09 jdbc: 
/**/rs1227.close();
03-03 13:57:09 jdbc: 
/**/prep1226.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1226.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 196
03-03 13:57:09 jdbc: RESULT_CLOSE 238
03-03 13:57:09 jdbc: 
/**/prep1226.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 236
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1227 = conn103.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 239
03-03 13:57:09 jdbc: 
/**/prep1227.setLong(1, 158L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1228 = prep1227.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 239
03-03 13:57:09 jdbc: RESULT_CLOSE 240
03-03 13:57:09 jdbc: 
/**/rs1228.next();
03-03 13:57:09 jdbc: 
/**/rs1228.getLong("id1_0_");
03-03 13:57:09 jdbc: 
/**/rs1228.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1228.getLong("id0_1_");
03-03 13:57:09 jdbc: 
/**/rs1228.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1228.getLong("id4_2_");
03-03 13:57:09 jdbc: 
/**/rs1228.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1228.getLong("id4_3_");
03-03 13:57:09 jdbc: 
/**/rs1228.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1228.getLong("contentT2_2_4_");
03-03 13:57:09 jdbc: 
/**/rs1228.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1228.getLong("contentN1_4_");
03-03 13:57:09 jdbc: 
/**/rs1228.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1228.next();
03-03 13:57:09 jdbc: 
/**/rs1228.close();
03-03 13:57:09 jdbc: 
/**/prep1227.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1227.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 196
03-03 13:57:09 jdbc: RESULT_CLOSE 241
03-03 13:57:09 jdbc: 
/**/prep1227.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 239
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1228 = conn103.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 242
03-03 13:57:09 jdbc: 
/**/prep1228.setLong(1, 161L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1229 = prep1228.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 242
03-03 13:57:09 jdbc: RESULT_CLOSE 243
03-03 13:57:09 jdbc: 
/**/rs1229.next();
03-03 13:57:09 jdbc: 
/**/rs1229.getLong("id1_0_");
03-03 13:57:09 jdbc: 
/**/rs1229.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1229.getLong("id0_1_");
03-03 13:57:09 jdbc: 
/**/rs1229.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1229.getLong("id4_2_");
03-03 13:57:09 jdbc: 
/**/rs1229.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1229.getLong("id4_3_");
03-03 13:57:09 jdbc: 
/**/rs1229.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1229.getLong("contentT2_2_4_");
03-03 13:57:09 jdbc: 
/**/rs1229.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1229.getLong("contentN1_4_");
03-03 13:57:09 jdbc: 
/**/rs1229.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1229.next();
03-03 13:57:09 jdbc: 
/**/rs1229.close();
03-03 13:57:09 jdbc: 
/**/prep1228.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1228.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 196
03-03 13:57:09 jdbc: RESULT_CLOSE 244
03-03 13:57:09 jdbc: 
/**/prep1228.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 242
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1229 = conn103.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 245
03-03 13:57:09 jdbc: 
/**/prep1229.setLong(1, 163L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1230 = prep1229.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 245
03-03 13:57:09 jdbc: RESULT_CLOSE 246
03-03 13:57:09 jdbc: 
/**/rs1230.next();
03-03 13:57:09 jdbc: 
/**/rs1230.getLong("id1_0_");
03-03 13:57:09 jdbc: 
/**/rs1230.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1230.getLong("id0_1_");
03-03 13:57:09 jdbc: 
/**/rs1230.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1230.getLong("id4_2_");
03-03 13:57:09 jdbc: 
/**/rs1230.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1230.getLong("id4_3_");
03-03 13:57:09 jdbc: 
/**/rs1230.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1230.getLong("author8_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1230.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1230.getLong("contentId1_0_");
03-03 13:57:09 jdbc: 
/**/rs1230.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1230.getString("contentR3_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1230.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1230.getTimestamp("creation4_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1230.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1230.getTimestamp("lastModi5_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1230.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1230.getString("name1_0_");
03-03 13:57:09 jdbc: 
/**/rs1230.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1230.getLong("parent9_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1230.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1230.getBoolean("publicated1_0_");
03-03 13:57:09 jdbc: 
/**/rs1230.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1230.getString("name4_2_");
03-03 13:57:09 jdbc: 
/**/rs1230.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1230.getLong("parent3_4_2_");
03-03 13:57:09 jdbc: 
/**/rs1230.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1230.getLong("contentT2_2_4_");
03-03 13:57:09 jdbc: 
/**/rs1230.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1230.getLong("contentN1_4_");
03-03 13:57:09 jdbc: 
/**/rs1230.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1230.next();
03-03 13:57:09 jdbc: 
/**/rs1230.close();
03-03 13:57:09 jdbc: 
/**/prep1229.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1229.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 196
03-03 13:57:09 jdbc: RESULT_CLOSE 247
03-03 13:57:09 jdbc: 
/**/prep1229.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 245
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1230 = conn103.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 248
03-03 13:57:09 jdbc: 
/**/prep1230.setLong(1, 51L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1231 = prep1230.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 248
03-03 13:57:09 jdbc: RESULT_CLOSE 249
03-03 13:57:09 jdbc: 
/**/rs1231.next();
03-03 13:57:09 jdbc: 
/**/rs1231.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1231.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1231.getLong("contentN1_1_1_");
03-03 13:57:09 jdbc: 
/**/rs1231.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1231.getLong("contentT2_1_");
03-03 13:57:09 jdbc: 
/**/rs1231.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1231.next();
03-03 13:57:09 jdbc: 
/**/rs1231.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1231.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1231.getLong("contentN1_1_1_");
03-03 13:57:09 jdbc: 
/**/rs1231.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1231.getLong("contentT2_1_");
03-03 13:57:09 jdbc: 
/**/rs1231.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1231.next();
03-03 13:57:09 jdbc: 
/**/rs1231.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1231.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1231.getLong("contentN1_1_1_");
03-03 13:57:09 jdbc: 
/**/rs1231.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1231.getLong("contentT2_1_");
03-03 13:57:09 jdbc: 
/**/rs1231.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1231.next();
03-03 13:57:09 jdbc: 
/**/rs1231.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1231.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1231.getLong("contentN1_1_1_");
03-03 13:57:09 jdbc: 
/**/rs1231.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1231.getLong("contentT2_1_");
03-03 13:57:09 jdbc: 
/**/rs1231.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1231.next();
03-03 13:57:09 jdbc: 
/**/rs1231.close();
03-03 13:57:09 jdbc: 
/**/prep1230.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1230.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 196
03-03 13:57:09 jdbc: RESULT_CLOSE 250
03-03 13:57:09 jdbc: 
/**/prep1230.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 248
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1231 = conn103.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 251
03-03 13:57:09 jdbc: 
/**/prep1231.setLong(1, 164L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1232 = prep1231.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 251
03-03 13:57:09 jdbc: RESULT_CLOSE 252
03-03 13:57:09 jdbc: 
/**/rs1232.next();
03-03 13:57:09 jdbc: 
/**/rs1232.getLong("id1_0_");
03-03 13:57:09 jdbc: 
/**/rs1232.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1232.getLong("id0_1_");
03-03 13:57:09 jdbc: 
/**/rs1232.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1232.getLong("id4_2_");
03-03 13:57:09 jdbc: 
/**/rs1232.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1232.getLong("id4_3_");
03-03 13:57:09 jdbc: 
/**/rs1232.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1232.getLong("contentT2_2_4_");
03-03 13:57:09 jdbc: 
/**/rs1232.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1232.getLong("contentN1_4_");
03-03 13:57:09 jdbc: 
/**/rs1232.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1232.next();
03-03 13:57:09 jdbc: 
/**/rs1232.getLong("id1_0_");
03-03 13:57:09 jdbc: 
/**/rs1232.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1232.getLong("id0_1_");
03-03 13:57:09 jdbc: 
/**/rs1232.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1232.getLong("id4_2_");
03-03 13:57:09 jdbc: 
/**/rs1232.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1232.getLong("id4_3_");
03-03 13:57:09 jdbc: 
/**/rs1232.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1232.getLong("author8_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1232.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1232.getLong("contentId1_0_");
03-03 13:57:09 jdbc: 
/**/rs1232.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1232.getString("contentR3_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1232.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1232.getTimestamp("creation4_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1232.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1232.getTimestamp("lastModi5_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1232.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1232.getString("name1_0_");
03-03 13:57:09 jdbc: 
/**/rs1232.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1232.getLong("parent9_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1232.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1232.getBoolean("publicated1_0_");
03-03 13:57:09 jdbc: 
/**/rs1232.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1232.getString("name4_2_");
03-03 13:57:09 jdbc: 
/**/rs1232.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1232.getLong("parent3_4_2_");
03-03 13:57:09 jdbc: 
/**/rs1232.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1232.getLong("contentT2_2_4_");
03-03 13:57:09 jdbc: 
/**/rs1232.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1232.getLong("contentN1_4_");
03-03 13:57:09 jdbc: 
/**/rs1232.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1232.next();
03-03 13:57:09 jdbc: 
/**/rs1232.close();
03-03 13:57:09 jdbc: 
/**/prep1231.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1231.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 196
03-03 13:57:09 jdbc: RESULT_CLOSE 253
03-03 13:57:09 jdbc: 
/**/prep1231.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 251
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1232 = conn103.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 254
03-03 13:57:09 jdbc: 
/**/prep1232.setLong(1, 57L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1233 = prep1232.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 254
03-03 13:57:09 jdbc: RESULT_CLOSE 255
03-03 13:57:09 jdbc: 
/**/rs1233.next();
03-03 13:57:09 jdbc: 
/**/rs1233.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1233.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1233.getLong("contentN1_1_1_");
03-03 13:57:09 jdbc: 
/**/rs1233.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1233.getLong("contentT2_1_");
03-03 13:57:09 jdbc: 
/**/rs1233.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1233.next();
03-03 13:57:09 jdbc: 
/**/rs1233.close();
03-03 13:57:09 jdbc: 
/**/prep1232.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1232.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 196
03-03 13:57:09 jdbc: RESULT_CLOSE 256
03-03 13:57:09 jdbc: 
/**/prep1232.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 254
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1233 = conn103.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 257
03-03 13:57:09 jdbc: 
/**/prep1233.setLong(1, 165L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1234 = prep1233.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 257
03-03 13:57:09 jdbc: RESULT_CLOSE 258
03-03 13:57:09 jdbc: 
/**/rs1234.next();
03-03 13:57:09 jdbc: 
/**/rs1234.getLong("id1_0_");
03-03 13:57:09 jdbc: 
/**/rs1234.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1234.getLong("id0_1_");
03-03 13:57:09 jdbc: 
/**/rs1234.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1234.getLong("id4_2_");
03-03 13:57:09 jdbc: 
/**/rs1234.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1234.getLong("id4_3_");
03-03 13:57:09 jdbc: 
/**/rs1234.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1234.getLong("contentT2_2_4_");
03-03 13:57:09 jdbc: 
/**/rs1234.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1234.getLong("contentN1_4_");
03-03 13:57:09 jdbc: 
/**/rs1234.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1234.next();
03-03 13:57:09 jdbc: 
/**/rs1234.close();
03-03 13:57:09 jdbc: 
/**/prep1233.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1233.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: SESSION_PREPARE 260
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 260
03-03 13:57:09 jdbc: RESULT_CLOSE 259
03-03 13:57:09 jdbc: 
/**/prep1233.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 257
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1234 = conn103.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 261
03-03 13:57:09 jdbc: 
/**/prep1234.setLong(1, 166L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1235 = prep1234.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 261
03-03 13:57:09 jdbc: RESULT_CLOSE 262
03-03 13:57:09 jdbc: 
/**/rs1235.next();
03-03 13:57:09 jdbc: 
/**/rs1235.getLong("id1_0_");
03-03 13:57:09 jdbc: 
/**/rs1235.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1235.getLong("id0_1_");
03-03 13:57:09 jdbc: 
/**/rs1235.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1235.getLong("id4_2_");
03-03 13:57:09 jdbc: 
/**/rs1235.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1235.getLong("id4_3_");
03-03 13:57:09 jdbc: 
/**/rs1235.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1235.getLong("contentT2_2_4_");
03-03 13:57:09 jdbc: 
/**/rs1235.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1235.getLong("contentN1_4_");
03-03 13:57:09 jdbc: 
/**/rs1235.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1235.next();
03-03 13:57:09 jdbc: 
/**/rs1235.close();
03-03 13:57:09 jdbc: 
/**/prep1234.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1234.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 260
03-03 13:57:09 jdbc: RESULT_CLOSE 263
03-03 13:57:09 jdbc: 
/**/prep1234.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 261
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1235 = conn103.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 264
03-03 13:57:09 jdbc: 
/**/prep1235.setLong(1, 167L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1236 = prep1235.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 264
03-03 13:57:09 jdbc: RESULT_CLOSE 265
03-03 13:57:09 jdbc: 
/**/rs1236.next();
03-03 13:57:09 jdbc: 
/**/rs1236.getLong("id1_0_");
03-03 13:57:09 jdbc: 
/**/rs1236.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1236.getLong("id0_1_");
03-03 13:57:09 jdbc: 
/**/rs1236.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1236.getLong("id4_2_");
03-03 13:57:09 jdbc: 
/**/rs1236.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1236.getLong("id4_3_");
03-03 13:57:09 jdbc: 
/**/rs1236.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1236.getLong("author8_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1236.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1236.getLong("contentId1_0_");
03-03 13:57:09 jdbc: 
/**/rs1236.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1236.getString("contentR3_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1236.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1236.getTimestamp("creation4_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1236.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1236.getTimestamp("lastModi5_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1236.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1236.getString("name1_0_");
03-03 13:57:09 jdbc: 
/**/rs1236.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1236.getLong("parent9_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1236.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1236.getBoolean("publicated1_0_");
03-03 13:57:09 jdbc: 
/**/rs1236.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1236.getString("name4_2_");
03-03 13:57:09 jdbc: 
/**/rs1236.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1236.getLong("parent3_4_2_");
03-03 13:57:09 jdbc: 
/**/rs1236.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1236.getLong("contentT2_2_4_");
03-03 13:57:09 jdbc: 
/**/rs1236.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1236.getLong("contentN1_4_");
03-03 13:57:09 jdbc: 
/**/rs1236.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1236.next();
03-03 13:57:09 jdbc: 
/**/rs1236.close();
03-03 13:57:09 jdbc: 
/**/prep1235.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1235.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 260
03-03 13:57:09 jdbc: RESULT_CLOSE 266
03-03 13:57:09 jdbc: 
/**/prep1235.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 264
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1236 = conn103.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 267
03-03 13:57:09 jdbc: 
/**/prep1236.setLong(1, 53L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1237 = prep1236.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 267
03-03 13:57:09 jdbc: RESULT_CLOSE 268
03-03 13:57:09 jdbc: 
/**/rs1237.next();
03-03 13:57:09 jdbc: 
/**/rs1237.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1237.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1237.getLong("contentN1_1_1_");
03-03 13:57:09 jdbc: 
/**/rs1237.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1237.getLong("contentT2_1_");
03-03 13:57:09 jdbc: 
/**/rs1237.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1237.next();
03-03 13:57:09 jdbc: 
/**/rs1237.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1237.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1237.getLong("contentN1_1_1_");
03-03 13:57:09 jdbc: 
/**/rs1237.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1237.getLong("contentT2_1_");
03-03 13:57:09 jdbc: 
/**/rs1237.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1237.next();
03-03 13:57:09 jdbc: 
/**/rs1237.close();
03-03 13:57:09 jdbc: 
/**/prep1236.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1236.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 260
03-03 13:57:09 jdbc: RESULT_CLOSE 269
03-03 13:57:09 jdbc: 
/**/prep1236.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 267
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1237 = conn103.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 270
03-03 13:57:09 jdbc: 
/**/prep1237.setLong(1, 168L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1238 = prep1237.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 270
03-03 13:57:09 jdbc: RESULT_CLOSE 271
03-03 13:57:09 jdbc: 
/**/rs1238.next();
03-03 13:57:09 jdbc: 
/**/rs1238.getLong("id1_0_");
03-03 13:57:09 jdbc: 
/**/rs1238.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1238.getLong("id0_1_");
03-03 13:57:09 jdbc: 
/**/rs1238.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1238.getLong("id4_2_");
03-03 13:57:09 jdbc: 
/**/rs1238.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1238.getLong("id4_3_");
03-03 13:57:09 jdbc: 
/**/rs1238.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1238.getLong("author8_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1238.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1238.getLong("contentId1_0_");
03-03 13:57:09 jdbc: 
/**/rs1238.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1238.getString("contentR3_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1238.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1238.getTimestamp("creation4_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1238.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1238.getTimestamp("lastModi5_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1238.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1238.getString("name1_0_");
03-03 13:57:09 jdbc: 
/**/rs1238.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1238.getLong("parent9_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1238.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1238.getBoolean("publicated1_0_");
03-03 13:57:09 jdbc: 
/**/rs1238.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1238.getLong("contentT2_2_4_");
03-03 13:57:09 jdbc: 
/**/rs1238.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1238.getLong("contentN1_4_");
03-03 13:57:09 jdbc: 
/**/rs1238.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1238.next();
03-03 13:57:09 jdbc: 
/**/rs1238.close();
03-03 13:57:09 jdbc: 
/**/prep1237.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1237.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 260
03-03 13:57:09 jdbc: RESULT_CLOSE 272
03-03 13:57:09 jdbc: 
/**/prep1237.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 270
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1238 = conn103.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 273
03-03 13:57:09 jdbc: 
/**/prep1238.setLong(1, 54L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1239 = prep1238.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 273
03-03 13:57:09 jdbc: RESULT_CLOSE 274
03-03 13:57:09 jdbc: 
/**/rs1239.next();
03-03 13:57:09 jdbc: 
/**/rs1239.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1239.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1239.getLong("contentN1_1_1_");
03-03 13:57:09 jdbc: 
/**/rs1239.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1239.getLong("contentT2_1_");
03-03 13:57:09 jdbc: 
/**/rs1239.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1239.next();
03-03 13:57:09 jdbc: 
/**/rs1239.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1239.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1239.getLong("contentN1_1_1_");
03-03 13:57:09 jdbc: 
/**/rs1239.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1239.getLong("contentT2_1_");
03-03 13:57:09 jdbc: 
/**/rs1239.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1239.next();
03-03 13:57:09 jdbc: 
/**/rs1239.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1239.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1239.getLong("contentN1_1_1_");
03-03 13:57:09 jdbc: 
/**/rs1239.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1239.getLong("contentT2_1_");
03-03 13:57:09 jdbc: 
/**/rs1239.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1239.next();
03-03 13:57:09 jdbc: 
/**/rs1239.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1239.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1239.getLong("contentN1_1_1_");
03-03 13:57:09 jdbc: 
/**/rs1239.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1239.getLong("contentT2_1_");
03-03 13:57:09 jdbc: 
/**/rs1239.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1239.next();
03-03 13:57:09 jdbc: 
/**/rs1239.close();
03-03 13:57:09 jdbc: 
/**/prep1238.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1238.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 260
03-03 13:57:09 jdbc: RESULT_CLOSE 275
03-03 13:57:09 jdbc: 
/**/prep1238.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 273
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1239 = conn103.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 276
03-03 13:57:09 jdbc: 
/**/prep1239.setLong(1, 169L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1240 = prep1239.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 276
03-03 13:57:09 jdbc: RESULT_CLOSE 277
03-03 13:57:09 jdbc: 
/**/rs1240.next();
03-03 13:57:09 jdbc: 
/**/rs1240.getLong("id1_0_");
03-03 13:57:09 jdbc: 
/**/rs1240.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1240.getLong("id0_1_");
03-03 13:57:09 jdbc: 
/**/rs1240.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1240.getLong("id4_2_");
03-03 13:57:09 jdbc: 
/**/rs1240.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1240.getLong("id4_3_");
03-03 13:57:09 jdbc: 
/**/rs1240.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1240.getLong("contentT2_2_4_");
03-03 13:57:09 jdbc: 
/**/rs1240.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1240.getLong("contentN1_4_");
03-03 13:57:09 jdbc: 
/**/rs1240.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1240.next();
03-03 13:57:09 jdbc: 
/**/rs1240.close();
03-03 13:57:09 jdbc: 
/**/prep1239.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1239.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 260
03-03 13:57:09 jdbc: RESULT_CLOSE 278
03-03 13:57:09 jdbc: 
/**/prep1239.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 276
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1240 = conn103.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 279
03-03 13:57:09 jdbc: 
/**/prep1240.setLong(1, 170L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1241 = prep1240.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 279
03-03 13:57:09 jdbc: RESULT_CLOSE 280
03-03 13:57:09 jdbc: 
/**/rs1241.next();
03-03 13:57:09 jdbc: 
/**/rs1241.getLong("id1_0_");
03-03 13:57:09 jdbc: 
/**/rs1241.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1241.getLong("id0_1_");
03-03 13:57:09 jdbc: 
/**/rs1241.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1241.getLong("id4_2_");
03-03 13:57:09 jdbc: 
/**/rs1241.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1241.getLong("id4_3_");
03-03 13:57:09 jdbc: 
/**/rs1241.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1241.getLong("contentT2_2_4_");
03-03 13:57:09 jdbc: 
/**/rs1241.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1241.getLong("contentN1_4_");
03-03 13:57:09 jdbc: 
/**/rs1241.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1241.next();
03-03 13:57:09 jdbc: 
/**/rs1241.close();
03-03 13:57:09 jdbc: 
/**/prep1240.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1240.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 260
03-03 13:57:09 jdbc: RESULT_CLOSE 281
03-03 13:57:09 jdbc: 
/**/prep1240.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 279
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1241 = conn103.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 282
03-03 13:57:09 jdbc: 
/**/prep1241.setLong(1, 178L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1242 = prep1241.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 282
03-03 13:57:09 jdbc: RESULT_CLOSE 283
03-03 13:57:09 jdbc: 
/**/rs1242.next();
03-03 13:57:09 jdbc: 
/**/rs1242.getLong("id1_0_");
03-03 13:57:09 jdbc: 
/**/rs1242.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1242.getLong("id0_1_");
03-03 13:57:09 jdbc: 
/**/rs1242.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1242.getLong("id4_2_");
03-03 13:57:09 jdbc: 
/**/rs1242.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1242.getLong("id4_3_");
03-03 13:57:09 jdbc: 
/**/rs1242.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1242.getLong("author8_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1242.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1242.getLong("contentId1_0_");
03-03 13:57:09 jdbc: 
/**/rs1242.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1242.getString("contentR3_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1242.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1242.getTimestamp("creation4_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1242.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1242.getTimestamp("lastModi5_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1242.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1242.getString("name1_0_");
03-03 13:57:09 jdbc: 
/**/rs1242.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1242.getLong("parent9_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1242.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1242.getBoolean("publicated1_0_");
03-03 13:57:09 jdbc: 
/**/rs1242.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1242.getLong("contentT2_2_4_");
03-03 13:57:09 jdbc: 
/**/rs1242.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1242.getLong("contentN1_4_");
03-03 13:57:09 jdbc: 
/**/rs1242.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1242.next();
03-03 13:57:09 jdbc: 
/**/rs1242.close();
03-03 13:57:09 jdbc: 
/**/prep1241.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1241.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 260
03-03 13:57:09 jdbc: RESULT_CLOSE 284
03-03 13:57:09 jdbc: 
/**/prep1241.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 282
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1242 = conn103.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 285
03-03 13:57:09 jdbc: 
/**/prep1242.setLong(1, 65L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1243 = prep1242.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 285
03-03 13:57:09 jdbc: RESULT_CLOSE 286
03-03 13:57:09 jdbc: 
/**/rs1243.next();
03-03 13:57:09 jdbc: 
/**/rs1243.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1243.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1243.getLong("contentN1_1_1_");
03-03 13:57:09 jdbc: 
/**/rs1243.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1243.getLong("contentT2_1_");
03-03 13:57:09 jdbc: 
/**/rs1243.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1243.next();
03-03 13:57:09 jdbc: 
/**/rs1243.close();
03-03 13:57:09 jdbc: 
/**/prep1242.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1242.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 260
03-03 13:57:09 jdbc: RESULT_CLOSE 287
03-03 13:57:09 jdbc: 
/**/prep1242.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 285
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1243 = conn103.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 288
03-03 13:57:09 jdbc: 
/**/prep1243.setLong(1, 180L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1244 = prep1243.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 288
03-03 13:57:09 jdbc: RESULT_CLOSE 289
03-03 13:57:09 jdbc: 
/**/rs1244.next();
03-03 13:57:09 jdbc: 
/**/rs1244.getLong("id1_0_");
03-03 13:57:09 jdbc: 
/**/rs1244.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1244.getLong("id0_1_");
03-03 13:57:09 jdbc: 
/**/rs1244.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1244.getLong("id4_2_");
03-03 13:57:09 jdbc: 
/**/rs1244.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1244.getLong("id4_3_");
03-03 13:57:09 jdbc: 
/**/rs1244.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1244.getLong("author8_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1244.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1244.getLong("contentId1_0_");
03-03 13:57:09 jdbc: 
/**/rs1244.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1244.getString("contentR3_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1244.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1244.getTimestamp("creation4_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1244.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1244.getTimestamp("lastModi5_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1244.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1244.getString("name1_0_");
03-03 13:57:09 jdbc: 
/**/rs1244.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1244.getLong("parent9_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1244.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1244.getBoolean("publicated1_0_");
03-03 13:57:09 jdbc: 
/**/rs1244.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1244.getString("name4_2_");
03-03 13:57:09 jdbc: 
/**/rs1244.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1244.getLong("parent3_4_2_");
03-03 13:57:09 jdbc: 
/**/rs1244.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1244.getLong("contentT2_2_4_");
03-03 13:57:09 jdbc: 
/**/rs1244.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1244.getLong("contentN1_4_");
03-03 13:57:09 jdbc: 
/**/rs1244.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1244.next();
03-03 13:57:09 jdbc: 
/**/rs1244.close();
03-03 13:57:09 jdbc: 
/**/prep1243.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1243.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 260
03-03 13:57:09 jdbc: RESULT_CLOSE 290
03-03 13:57:09 jdbc: 
/**/prep1243.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 288
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1244 = conn103.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 291
03-03 13:57:09 jdbc: 
/**/prep1244.setLong(1, 66L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1245 = prep1244.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 291
03-03 13:57:09 jdbc: RESULT_CLOSE 292
03-03 13:57:09 jdbc: 
/**/rs1245.next();
03-03 13:57:09 jdbc: 
/**/rs1245.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1245.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1245.getLong("contentN1_1_1_");
03-03 13:57:09 jdbc: 
/**/rs1245.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1245.getLong("contentT2_1_");
03-03 13:57:09 jdbc: 
/**/rs1245.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1245.next();
03-03 13:57:09 jdbc: 
/**/rs1245.close();
03-03 13:57:09 jdbc: 
/**/prep1244.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1244.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 260
03-03 13:57:09 jdbc: RESULT_CLOSE 293
03-03 13:57:09 jdbc: 
/**/prep1244.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 291
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1245 = conn103.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 294
03-03 13:57:09 jdbc: 
/**/prep1245.setLong(1, 182L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1246 = prep1245.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 294
03-03 13:57:09 jdbc: RESULT_CLOSE 295
03-03 13:57:09 jdbc: 
/**/rs1246.next();
03-03 13:57:09 jdbc: 
/**/rs1246.getLong("id1_0_");
03-03 13:57:09 jdbc: 
/**/rs1246.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1246.getLong("id0_1_");
03-03 13:57:09 jdbc: 
/**/rs1246.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1246.getLong("id4_2_");
03-03 13:57:09 jdbc: 
/**/rs1246.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1246.getLong("id4_3_");
03-03 13:57:09 jdbc: 
/**/rs1246.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1246.getLong("author8_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1246.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1246.getLong("contentId1_0_");
03-03 13:57:09 jdbc: 
/**/rs1246.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1246.getString("contentR3_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1246.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1246.getTimestamp("creation4_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1246.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1246.getTimestamp("lastModi5_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1246.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1246.getString("name1_0_");
03-03 13:57:09 jdbc: 
/**/rs1246.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1246.getLong("parent9_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1246.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1246.getBoolean("publicated1_0_");
03-03 13:57:09 jdbc: 
/**/rs1246.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1246.getLong("contentT2_2_4_");
03-03 13:57:09 jdbc: 
/**/rs1246.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1246.getLong("contentN1_4_");
03-03 13:57:09 jdbc: 
/**/rs1246.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1246.next();
03-03 13:57:09 jdbc: 
/**/rs1246.getLong("id1_0_");
03-03 13:57:09 jdbc: 
/**/rs1246.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1246.getLong("id0_1_");
03-03 13:57:09 jdbc: 
/**/rs1246.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1246.getLong("id4_2_");
03-03 13:57:09 jdbc: 
/**/rs1246.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1246.getLong("id4_3_");
03-03 13:57:09 jdbc: 
/**/rs1246.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1246.getLong("author8_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1246.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1246.getLong("contentId1_0_");
03-03 13:57:09 jdbc: 
/**/rs1246.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1246.getString("contentR3_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1246.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1246.getTimestamp("creation4_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1246.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1246.getTimestamp("lastModi5_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1246.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1246.getString("name1_0_");
03-03 13:57:09 jdbc: 
/**/rs1246.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1246.getLong("parent9_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1246.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1246.getBoolean("publicated1_0_");
03-03 13:57:09 jdbc: 
/**/rs1246.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1246.getLong("contentT2_2_4_");
03-03 13:57:09 jdbc: 
/**/rs1246.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1246.getLong("contentN1_4_");
03-03 13:57:09 jdbc: 
/**/rs1246.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1246.next();
03-03 13:57:09 jdbc: 
/**/rs1246.close();
03-03 13:57:09 jdbc: 
/**/prep1245.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1245.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 260
03-03 13:57:09 jdbc: RESULT_CLOSE 296
03-03 13:57:09 jdbc: 
/**/prep1245.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 294
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1246 = conn103.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 297
03-03 13:57:09 jdbc: 
/**/prep1246.setLong(1, 68L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1247 = prep1246.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 297
03-03 13:57:09 jdbc: RESULT_CLOSE 298
03-03 13:57:09 jdbc: 
/**/rs1247.next();
03-03 13:57:09 jdbc: 
/**/rs1247.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1247.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1247.getLong("contentN1_1_1_");
03-03 13:57:09 jdbc: 
/**/rs1247.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1247.getLong("contentT2_1_");
03-03 13:57:09 jdbc: 
/**/rs1247.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1247.next();
03-03 13:57:09 jdbc: 
/**/rs1247.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1247.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1247.getLong("contentN1_1_1_");
03-03 13:57:09 jdbc: 
/**/rs1247.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1247.getLong("contentT2_1_");
03-03 13:57:09 jdbc: 
/**/rs1247.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1247.next();
03-03 13:57:09 jdbc: 
/**/rs1247.close();
03-03 13:57:09 jdbc: 
/**/prep1246.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1246.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 260
03-03 13:57:09 jdbc: RESULT_CLOSE 299
03-03 13:57:09 jdbc: 
/**/prep1246.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 297
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1247 = conn103.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 300
03-03 13:57:09 jdbc: 
/**/prep1247.setLong(1, 67L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1248 = prep1247.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 300
03-03 13:57:09 jdbc: RESULT_CLOSE 301
03-03 13:57:09 jdbc: 
/**/rs1248.next();
03-03 13:57:09 jdbc: 
/**/rs1248.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1248.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1248.getLong("contentN1_1_1_");
03-03 13:57:09 jdbc: 
/**/rs1248.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1248.getLong("contentT2_1_");
03-03 13:57:09 jdbc: 
/**/rs1248.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1248.next();
03-03 13:57:09 jdbc: 
/**/rs1248.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1248.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1248.getLong("contentN1_1_1_");
03-03 13:57:09 jdbc: 
/**/rs1248.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1248.getLong("contentT2_1_");
03-03 13:57:09 jdbc: 
/**/rs1248.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1248.next();
03-03 13:57:09 jdbc: 
/**/rs1248.close();
03-03 13:57:09 jdbc: 
/**/prep1247.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1247.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 260
03-03 13:57:09 jdbc: RESULT_CLOSE 302
03-03 13:57:09 jdbc: 
/**/prep1247.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 300
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1248 = conn103.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 303
03-03 13:57:09 jdbc: 
/**/prep1248.setLong(1, 183L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1249 = prep1248.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 303
03-03 13:57:09 jdbc: RESULT_CLOSE 304
03-03 13:57:09 jdbc: 
/**/rs1249.next();
03-03 13:57:09 jdbc: 
/**/rs1249.getLong("id1_0_");
03-03 13:57:09 jdbc: 
/**/rs1249.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1249.getLong("id0_1_");
03-03 13:57:09 jdbc: 
/**/rs1249.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1249.getLong("id4_2_");
03-03 13:57:09 jdbc: 
/**/rs1249.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1249.getLong("id4_3_");
03-03 13:57:09 jdbc: 
/**/rs1249.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1249.getLong("contentT2_2_4_");
03-03 13:57:09 jdbc: 
/**/rs1249.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1249.getLong("contentN1_4_");
03-03 13:57:09 jdbc: 
/**/rs1249.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1249.next();
03-03 13:57:09 jdbc: 
/**/rs1249.getLong("id1_0_");
03-03 13:57:09 jdbc: 
/**/rs1249.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1249.getLong("id0_1_");
03-03 13:57:09 jdbc: 
/**/rs1249.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1249.getLong("id4_2_");
03-03 13:57:09 jdbc: 
/**/rs1249.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1249.getLong("id4_3_");
03-03 13:57:09 jdbc: 
/**/rs1249.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1249.getLong("contentT2_2_4_");
03-03 13:57:09 jdbc: 
/**/rs1249.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1249.getLong("contentN1_4_");
03-03 13:57:09 jdbc: 
/**/rs1249.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1249.next();
03-03 13:57:09 jdbc: 
/**/rs1249.getLong("id1_0_");
03-03 13:57:09 jdbc: 
/**/rs1249.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1249.getLong("id0_1_");
03-03 13:57:09 jdbc: 
/**/rs1249.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1249.getLong("id4_2_");
03-03 13:57:09 jdbc: 
/**/rs1249.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1249.getLong("id4_3_");
03-03 13:57:09 jdbc: 
/**/rs1249.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1249.getLong("author8_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1249.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1249.getLong("contentId1_0_");
03-03 13:57:09 jdbc: 
/**/rs1249.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1249.getString("contentR3_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1249.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1249.getTimestamp("creation4_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1249.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1249.getTimestamp("lastModi5_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1249.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1249.getString("name1_0_");
03-03 13:57:09 jdbc: 
/**/rs1249.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1249.getLong("parent9_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1249.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1249.getBoolean("publicated1_0_");
03-03 13:57:09 jdbc: 
/**/rs1249.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1249.getLong("contentT2_2_4_");
03-03 13:57:09 jdbc: 
/**/rs1249.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1249.getLong("contentN1_4_");
03-03 13:57:09 jdbc: 
/**/rs1249.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1249.next();
03-03 13:57:09 jdbc: 
/**/rs1249.getLong("id1_0_");
03-03 13:57:09 jdbc: 
/**/rs1249.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1249.getLong("id0_1_");
03-03 13:57:09 jdbc: 
/**/rs1249.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1249.getLong("id4_2_");
03-03 13:57:09 jdbc: 
/**/rs1249.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1249.getLong("id4_3_");
03-03 13:57:09 jdbc: 
/**/rs1249.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1249.getLong("contentT2_2_4_");
03-03 13:57:09 jdbc: 
/**/rs1249.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1249.getLong("contentN1_4_");
03-03 13:57:09 jdbc: 
/**/rs1249.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1249.next();
03-03 13:57:09 jdbc: 
/**/rs1249.getLong("id1_0_");
03-03 13:57:09 jdbc: 
/**/rs1249.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1249.getLong("id0_1_");
03-03 13:57:09 jdbc: 
/**/rs1249.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1249.getLong("id4_2_");
03-03 13:57:09 jdbc: 
/**/rs1249.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1249.getLong("id4_3_");
03-03 13:57:09 jdbc: 
/**/rs1249.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1249.getLong("author8_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1249.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1249.getLong("contentId1_0_");
03-03 13:57:09 jdbc: 
/**/rs1249.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1249.getString("contentR3_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1249.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1249.getTimestamp("creation4_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1249.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1249.getTimestamp("lastModi5_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1249.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1249.getString("name1_0_");
03-03 13:57:09 jdbc: 
/**/rs1249.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1249.getLong("parent9_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1249.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1249.getBoolean("publicated1_0_");
03-03 13:57:09 jdbc: 
/**/rs1249.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1249.getLong("contentT2_2_4_");
03-03 13:57:09 jdbc: 
/**/rs1249.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1249.getLong("contentN1_4_");
03-03 13:57:09 jdbc: 
/**/rs1249.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1249.next();
03-03 13:57:09 jdbc: 
/**/rs1249.getLong("id1_0_");
03-03 13:57:09 jdbc: 
/**/rs1249.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1249.getLong("id0_1_");
03-03 13:57:09 jdbc: 
/**/rs1249.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1249.getLong("id4_2_");
03-03 13:57:09 jdbc: 
/**/rs1249.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1249.getLong("id4_3_");
03-03 13:57:09 jdbc: 
/**/rs1249.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1249.getLong("contentT2_2_4_");
03-03 13:57:09 jdbc: 
/**/rs1249.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1249.getLong("contentN1_4_");
03-03 13:57:09 jdbc: 
/**/rs1249.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1249.next();
03-03 13:57:09 jdbc: 
/**/rs1249.getLong("id1_0_");
03-03 13:57:09 jdbc: 
/**/rs1249.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1249.getLong("id0_1_");
03-03 13:57:09 jdbc: 
/**/rs1249.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1249.getLong("id4_2_");
03-03 13:57:09 jdbc: 
/**/rs1249.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1249.getLong("id4_3_");
03-03 13:57:09 jdbc: 
/**/rs1249.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1249.getLong("contentT2_2_4_");
03-03 13:57:09 jdbc: 
/**/rs1249.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1249.getLong("contentN1_4_");
03-03 13:57:09 jdbc: 
/**/rs1249.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1249.next();
03-03 13:57:09 jdbc: 
/**/rs1249.close();
03-03 13:57:09 jdbc: 
/**/prep1248.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1248.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 260
03-03 13:57:09 jdbc: RESULT_CLOSE 305
03-03 13:57:09 jdbc: 
/**/prep1248.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 303
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1249 = conn103.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 306
03-03 13:57:09 jdbc: 
/**/prep1249.setLong(1, 55L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1250 = prep1249.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 306
03-03 13:57:09 jdbc: RESULT_CLOSE 307
03-03 13:57:09 jdbc: 
/**/rs1250.next();
03-03 13:57:09 jdbc: 
/**/rs1250.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1250.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1250.getLong("contentN1_1_1_");
03-03 13:57:09 jdbc: 
/**/rs1250.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1250.getLong("contentT2_1_");
03-03 13:57:09 jdbc: 
/**/rs1250.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1250.next();
03-03 13:57:09 jdbc: 
/**/rs1250.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1250.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1250.getLong("contentN1_1_1_");
03-03 13:57:09 jdbc: 
/**/rs1250.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1250.getLong("contentT2_1_");
03-03 13:57:09 jdbc: 
/**/rs1250.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1250.next();
03-03 13:57:09 jdbc: 
/**/rs1250.close();
03-03 13:57:09 jdbc: 
/**/prep1249.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1249.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 260
03-03 13:57:09 jdbc: RESULT_CLOSE 308
03-03 13:57:09 jdbc: 
/**/prep1249.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 306
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1250 = conn103.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 309
03-03 13:57:09 jdbc: 
/**/prep1250.setLong(1, 52L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1251 = prep1250.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 309
03-03 13:57:09 jdbc: RESULT_CLOSE 310
03-03 13:57:09 jdbc: 
/**/rs1251.next();
03-03 13:57:09 jdbc: 
/**/rs1251.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1251.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1251.getLong("contentN1_1_1_");
03-03 13:57:09 jdbc: 
/**/rs1251.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1251.getLong("contentT2_1_");
03-03 13:57:09 jdbc: 
/**/rs1251.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1251.next();
03-03 13:57:09 jdbc: 
/**/rs1251.close();
03-03 13:57:09 jdbc: 
/**/prep1250.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1250.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 260
03-03 13:57:09 jdbc: RESULT_CLOSE 311
03-03 13:57:09 jdbc: 
/**/prep1250.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 309
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1251 = conn103.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 312
03-03 13:57:09 jdbc: 
/**/prep1251.setLong(1, 184L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1252 = prep1251.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 312
03-03 13:57:09 jdbc: RESULT_CLOSE 313
03-03 13:57:09 jdbc: 
/**/rs1252.next();
03-03 13:57:09 jdbc: 
/**/rs1252.getLong("id1_0_");
03-03 13:57:09 jdbc: 
/**/rs1252.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1252.getLong("id0_1_");
03-03 13:57:09 jdbc: 
/**/rs1252.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1252.getLong("id4_2_");
03-03 13:57:09 jdbc: 
/**/rs1252.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1252.getLong("id4_3_");
03-03 13:57:09 jdbc: 
/**/rs1252.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1252.getLong("author8_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1252.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1252.getLong("contentId1_0_");
03-03 13:57:09 jdbc: 
/**/rs1252.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1252.getString("contentR3_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1252.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1252.getTimestamp("creation4_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1252.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1252.getTimestamp("lastModi5_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1252.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1252.getString("name1_0_");
03-03 13:57:09 jdbc: 
/**/rs1252.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1252.getLong("parent9_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1252.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1252.getBoolean("publicated1_0_");
03-03 13:57:09 jdbc: 
/**/rs1252.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1252.getLong("contentT2_2_4_");
03-03 13:57:09 jdbc: 
/**/rs1252.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1252.getLong("contentN1_4_");
03-03 13:57:09 jdbc: 
/**/rs1252.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1252.next();
03-03 13:57:09 jdbc: 
/**/rs1252.close();
03-03 13:57:09 jdbc: 
/**/prep1251.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1251.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 260
03-03 13:57:09 jdbc: RESULT_CLOSE 314
03-03 13:57:09 jdbc: 
/**/prep1251.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 312
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1252 = conn103.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 315
03-03 13:57:09 jdbc: 
/**/prep1252.setLong(1, 8L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1253 = prep1252.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 315
03-03 13:57:09 jdbc: RESULT_CLOSE 316
03-03 13:57:09 jdbc: 
/**/rs1253.next();
03-03 13:57:09 jdbc: 
/**/rs1253.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1253.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1253.getLong("contentN1_1_1_");
03-03 13:57:09 jdbc: 
/**/rs1253.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1253.getLong("contentT2_1_");
03-03 13:57:09 jdbc: 
/**/rs1253.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1253.next();
03-03 13:57:09 jdbc: 
/**/rs1253.close();
03-03 13:57:09 jdbc: 
/**/prep1252.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1252.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 260
03-03 13:57:09 jdbc: RESULT_CLOSE 317
03-03 13:57:09 jdbc: 
/**/prep1252.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 315
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1253 = conn103.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 318
03-03 13:57:09 jdbc: 
/**/prep1253.setLong(1, 186L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1254 = prep1253.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 318
03-03 13:57:09 jdbc: RESULT_CLOSE 319
03-03 13:57:09 jdbc: 
/**/rs1254.next();
03-03 13:57:09 jdbc: 
/**/rs1254.getLong("id1_0_");
03-03 13:57:09 jdbc: 
/**/rs1254.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1254.getLong("id0_1_");
03-03 13:57:09 jdbc: 
/**/rs1254.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1254.getLong("id4_2_");
03-03 13:57:09 jdbc: 
/**/rs1254.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1254.getLong("id4_3_");
03-03 13:57:09 jdbc: 
/**/rs1254.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1254.getLong("contentT2_2_4_");
03-03 13:57:09 jdbc: 
/**/rs1254.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1254.getLong("contentN1_4_");
03-03 13:57:09 jdbc: 
/**/rs1254.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1254.next();
03-03 13:57:09 jdbc: 
/**/rs1254.close();
03-03 13:57:09 jdbc: 
/**/prep1253.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1253.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 260
03-03 13:57:09 jdbc: RESULT_CLOSE 320
03-03 13:57:09 jdbc: 
/**/prep1253.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 318
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1254 = conn103.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 321
03-03 13:57:09 jdbc: 
/**/prep1254.setLong(1, 187L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1255 = prep1254.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 321
03-03 13:57:09 jdbc: RESULT_CLOSE 322
03-03 13:57:09 jdbc: 
/**/rs1255.next();
03-03 13:57:09 jdbc: 
/**/rs1255.getLong("id1_0_");
03-03 13:57:09 jdbc: 
/**/rs1255.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1255.getLong("id0_1_");
03-03 13:57:09 jdbc: 
/**/rs1255.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1255.getLong("id4_2_");
03-03 13:57:09 jdbc: 
/**/rs1255.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1255.getLong("id4_3_");
03-03 13:57:09 jdbc: 
/**/rs1255.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1255.getLong("contentT2_2_4_");
03-03 13:57:09 jdbc: 
/**/rs1255.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1255.getLong("contentN1_4_");
03-03 13:57:09 jdbc: 
/**/rs1255.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1255.next();
03-03 13:57:09 jdbc: 
/**/rs1255.close();
03-03 13:57:09 jdbc: 
/**/prep1254.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1254.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: SESSION_PREPARE 324
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 324
03-03 13:57:09 jdbc: RESULT_CLOSE 323
03-03 13:57:09 jdbc: 
/**/prep1254.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 321
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1255 = conn103.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 325
03-03 13:57:09 jdbc: 
/**/prep1255.setLong(1, 188L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1256 = prep1255.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 325
03-03 13:57:09 jdbc: RESULT_CLOSE 326
03-03 13:57:09 jdbc: 
/**/rs1256.next();
03-03 13:57:09 jdbc: 
/**/rs1256.getLong("id1_0_");
03-03 13:57:09 jdbc: 
/**/rs1256.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1256.getLong("id0_1_");
03-03 13:57:09 jdbc: 
/**/rs1256.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1256.getLong("id4_2_");
03-03 13:57:09 jdbc: 
/**/rs1256.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1256.getLong("id4_3_");
03-03 13:57:09 jdbc: 
/**/rs1256.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1256.getLong("contentT2_2_4_");
03-03 13:57:09 jdbc: 
/**/rs1256.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1256.getLong("contentN1_4_");
03-03 13:57:09 jdbc: 
/**/rs1256.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1256.next();
03-03 13:57:09 jdbc: 
/**/rs1256.getLong("id1_0_");
03-03 13:57:09 jdbc: 
/**/rs1256.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1256.getLong("id0_1_");
03-03 13:57:09 jdbc: 
/**/rs1256.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1256.getLong("id4_2_");
03-03 13:57:09 jdbc: 
/**/rs1256.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1256.getLong("id4_3_");
03-03 13:57:09 jdbc: 
/**/rs1256.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1256.getLong("contentT2_2_4_");
03-03 13:57:09 jdbc: 
/**/rs1256.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1256.getLong("contentN1_4_");
03-03 13:57:09 jdbc: 
/**/rs1256.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1256.next();
03-03 13:57:09 jdbc: 
/**/rs1256.close();
03-03 13:57:09 jdbc: 
/**/prep1255.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1255.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 324
03-03 13:57:09 jdbc: RESULT_CLOSE 327
03-03 13:57:09 jdbc: 
/**/prep1255.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 325
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1256 = conn103.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 328
03-03 13:57:09 jdbc: 
/**/prep1256.setLong(1, 189L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1257 = prep1256.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 328
03-03 13:57:09 jdbc: RESULT_CLOSE 329
03-03 13:57:09 jdbc: 
/**/rs1257.next();
03-03 13:57:09 jdbc: 
/**/rs1257.getLong("id1_0_");
03-03 13:57:09 jdbc: 
/**/rs1257.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1257.getLong("id0_1_");
03-03 13:57:09 jdbc: 
/**/rs1257.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1257.getLong("id4_2_");
03-03 13:57:09 jdbc: 
/**/rs1257.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1257.getLong("id4_3_");
03-03 13:57:09 jdbc: 
/**/rs1257.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1257.getLong("contentT2_2_4_");
03-03 13:57:09 jdbc: 
/**/rs1257.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1257.getLong("contentN1_4_");
03-03 13:57:09 jdbc: 
/**/rs1257.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1257.next();
03-03 13:57:09 jdbc: 
/**/rs1257.close();
03-03 13:57:09 jdbc: 
/**/prep1256.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1256.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 324
03-03 13:57:09 jdbc: RESULT_CLOSE 330
03-03 13:57:09 jdbc: 
/**/prep1256.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 328
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1257 = conn103.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 331
03-03 13:57:09 jdbc: 
/**/prep1257.setLong(1, 192L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1258 = prep1257.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 331
03-03 13:57:09 jdbc: RESULT_CLOSE 332
03-03 13:57:09 jdbc: 
/**/rs1258.next();
03-03 13:57:09 jdbc: 
/**/rs1258.getLong("id1_0_");
03-03 13:57:09 jdbc: 
/**/rs1258.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1258.getLong("id0_1_");
03-03 13:57:09 jdbc: 
/**/rs1258.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1258.getLong("id4_2_");
03-03 13:57:09 jdbc: 
/**/rs1258.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1258.getLong("id4_3_");
03-03 13:57:09 jdbc: 
/**/rs1258.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1258.getLong("author8_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1258.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1258.getLong("contentId1_0_");
03-03 13:57:09 jdbc: 
/**/rs1258.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1258.getString("contentR3_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1258.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1258.getTimestamp("creation4_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1258.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1258.getTimestamp("lastModi5_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1258.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1258.getString("name1_0_");
03-03 13:57:09 jdbc: 
/**/rs1258.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1258.getLong("parent9_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1258.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1258.getBoolean("publicated1_0_");
03-03 13:57:09 jdbc: 
/**/rs1258.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1258.getLong("contentT2_2_4_");
03-03 13:57:09 jdbc: 
/**/rs1258.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1258.getLong("contentN1_4_");
03-03 13:57:09 jdbc: 
/**/rs1258.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1258.next();
03-03 13:57:09 jdbc: 
/**/rs1258.close();
03-03 13:57:09 jdbc: 
/**/prep1257.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1257.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 324
03-03 13:57:09 jdbc: RESULT_CLOSE 333
03-03 13:57:09 jdbc: 
/**/prep1257.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 331
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1258 = conn103.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 334
03-03 13:57:09 jdbc: 
/**/prep1258.setLong(1, 47L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1259 = prep1258.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 334
03-03 13:57:09 jdbc: RESULT_CLOSE 335
03-03 13:57:09 jdbc: 
/**/rs1259.next();
03-03 13:57:09 jdbc: 
/**/rs1259.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1259.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1259.getLong("contentN1_1_1_");
03-03 13:57:09 jdbc: 
/**/rs1259.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1259.getLong("contentT2_1_");
03-03 13:57:09 jdbc: 
/**/rs1259.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1259.next();
03-03 13:57:09 jdbc: 
/**/rs1259.close();
03-03 13:57:09 jdbc: 
/**/prep1258.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1258.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 324
03-03 13:57:09 jdbc: RESULT_CLOSE 336
03-03 13:57:09 jdbc: 
/**/prep1258.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 334
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1259 = conn103.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 337
03-03 13:57:09 jdbc: 
/**/prep1259.setLong(1, 193L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1260 = prep1259.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 337
03-03 13:57:09 jdbc: RESULT_CLOSE 338
03-03 13:57:09 jdbc: 
/**/rs1260.next();
03-03 13:57:09 jdbc: 
/**/rs1260.getLong("id1_0_");
03-03 13:57:09 jdbc: 
/**/rs1260.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1260.getLong("id0_1_");
03-03 13:57:09 jdbc: 
/**/rs1260.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1260.getLong("id4_2_");
03-03 13:57:09 jdbc: 
/**/rs1260.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1260.getLong("id4_3_");
03-03 13:57:09 jdbc: 
/**/rs1260.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1260.getLong("contentT2_2_4_");
03-03 13:57:09 jdbc: 
/**/rs1260.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1260.getLong("contentN1_4_");
03-03 13:57:09 jdbc: 
/**/rs1260.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1260.next();
03-03 13:57:09 jdbc: 
/**/rs1260.close();
03-03 13:57:09 jdbc: 
/**/prep1259.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1259.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 324
03-03 13:57:09 jdbc: RESULT_CLOSE 339
03-03 13:57:09 jdbc: 
/**/prep1259.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 337
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1260 = conn103.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 340
03-03 13:57:09 jdbc: 
/**/prep1260.setLong(1, 194L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1261 = prep1260.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 340
03-03 13:57:09 jdbc: RESULT_CLOSE 341
03-03 13:57:09 jdbc: 
/**/rs1261.next();
03-03 13:57:09 jdbc: 
/**/rs1261.getLong("id1_0_");
03-03 13:57:09 jdbc: 
/**/rs1261.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1261.getLong("id0_1_");
03-03 13:57:09 jdbc: 
/**/rs1261.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1261.getLong("id4_2_");
03-03 13:57:09 jdbc: 
/**/rs1261.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1261.getLong("id4_3_");
03-03 13:57:09 jdbc: 
/**/rs1261.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1261.getLong("author8_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1261.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1261.getLong("contentId1_0_");
03-03 13:57:09 jdbc: 
/**/rs1261.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1261.getString("contentR3_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1261.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1261.getTimestamp("creation4_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1261.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1261.getTimestamp("lastModi5_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1261.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1261.getString("name1_0_");
03-03 13:57:09 jdbc: 
/**/rs1261.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1261.getLong("parent9_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1261.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1261.getBoolean("publicated1_0_");
03-03 13:57:09 jdbc: 
/**/rs1261.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1261.getString("name4_2_");
03-03 13:57:09 jdbc: 
/**/rs1261.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1261.getLong("parent3_4_2_");
03-03 13:57:09 jdbc: 
/**/rs1261.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1261.getLong("contentT2_2_4_");
03-03 13:57:09 jdbc: 
/**/rs1261.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1261.getLong("contentN1_4_");
03-03 13:57:09 jdbc: 
/**/rs1261.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1261.next();
03-03 13:57:09 jdbc: 
/**/rs1261.close();
03-03 13:57:09 jdbc: 
/**/prep1260.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1260.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 324
03-03 13:57:09 jdbc: RESULT_CLOSE 342
03-03 13:57:09 jdbc: 
/**/prep1260.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 340
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1261 = conn103.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 343
03-03 13:57:09 jdbc: 
/**/prep1261.setLong(1, 56L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1262 = prep1261.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 343
03-03 13:57:09 jdbc: RESULT_CLOSE 344
03-03 13:57:09 jdbc: 
/**/rs1262.next();
03-03 13:57:09 jdbc: 
/**/rs1262.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1262.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1262.getLong("contentN1_1_1_");
03-03 13:57:09 jdbc: 
/**/rs1262.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1262.getLong("contentT2_1_");
03-03 13:57:09 jdbc: 
/**/rs1262.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1262.next();
03-03 13:57:09 jdbc: 
/**/rs1262.close();
03-03 13:57:09 jdbc: 
/**/prep1261.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1261.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 324
03-03 13:57:09 jdbc: RESULT_CLOSE 345
03-03 13:57:09 jdbc: 
/**/prep1261.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 343
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1262 = conn103.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 346
03-03 13:57:09 jdbc: 
/**/prep1262.setLong(1, 195L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1263 = prep1262.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 346
03-03 13:57:09 jdbc: RESULT_CLOSE 347
03-03 13:57:09 jdbc: 
/**/rs1263.next();
03-03 13:57:09 jdbc: 
/**/rs1263.getLong("id1_0_");
03-03 13:57:09 jdbc: 
/**/rs1263.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1263.getLong("id0_1_");
03-03 13:57:09 jdbc: 
/**/rs1263.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1263.getLong("id4_2_");
03-03 13:57:09 jdbc: 
/**/rs1263.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1263.getLong("id4_3_");
03-03 13:57:09 jdbc: 
/**/rs1263.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1263.getLong("author8_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1263.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1263.getLong("contentId1_0_");
03-03 13:57:09 jdbc: 
/**/rs1263.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1263.getString("contentR3_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1263.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1263.getTimestamp("creation4_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1263.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1263.getTimestamp("lastModi5_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1263.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1263.getString("name1_0_");
03-03 13:57:09 jdbc: 
/**/rs1263.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1263.getLong("parent9_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1263.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1263.getBoolean("publicated1_0_");
03-03 13:57:09 jdbc: 
/**/rs1263.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1263.getString("name4_2_");
03-03 13:57:09 jdbc: 
/**/rs1263.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1263.getLong("parent3_4_2_");
03-03 13:57:09 jdbc: 
/**/rs1263.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1263.getLong("contentT2_2_4_");
03-03 13:57:09 jdbc: 
/**/rs1263.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1263.getLong("contentN1_4_");
03-03 13:57:09 jdbc: 
/**/rs1263.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1263.next();
03-03 13:57:09 jdbc: 
/**/rs1263.close();
03-03 13:57:09 jdbc: 
/**/prep1262.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1262.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 324
03-03 13:57:09 jdbc: RESULT_CLOSE 348
03-03 13:57:09 jdbc: 
/**/prep1262.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 346
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1263 = conn103.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 349
03-03 13:57:09 jdbc: 
/**/prep1263.setLong(1, 58L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1264 = prep1263.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 349
03-03 13:57:09 jdbc: RESULT_CLOSE 350
03-03 13:57:09 jdbc: 
/**/rs1264.next();
03-03 13:57:09 jdbc: 
/**/rs1264.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1264.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1264.getLong("contentN1_1_1_");
03-03 13:57:09 jdbc: 
/**/rs1264.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1264.getLong("contentT2_1_");
03-03 13:57:09 jdbc: 
/**/rs1264.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1264.next();
03-03 13:57:09 jdbc: 
/**/rs1264.close();
03-03 13:57:09 jdbc: 
/**/prep1263.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1263.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 324
03-03 13:57:09 jdbc: RESULT_CLOSE 351
03-03 13:57:09 jdbc: 
/**/prep1263.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 349
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1264 = conn103.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 352
03-03 13:57:09 jdbc: 
/**/prep1264.setLong(1, 196L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1265 = prep1264.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 352
03-03 13:57:09 jdbc: RESULT_CLOSE 353
03-03 13:57:09 jdbc: 
/**/rs1265.next();
03-03 13:57:09 jdbc: 
/**/rs1265.getLong("id1_0_");
03-03 13:57:09 jdbc: 
/**/rs1265.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1265.getLong("id0_1_");
03-03 13:57:09 jdbc: 
/**/rs1265.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1265.getLong("id4_2_");
03-03 13:57:09 jdbc: 
/**/rs1265.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1265.getLong("id4_3_");
03-03 13:57:09 jdbc: 
/**/rs1265.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1265.getLong("author8_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1265.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1265.getLong("contentId1_0_");
03-03 13:57:09 jdbc: 
/**/rs1265.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1265.getString("contentR3_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1265.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1265.getTimestamp("creation4_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1265.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1265.getTimestamp("lastModi5_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1265.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1265.getString("name1_0_");
03-03 13:57:09 jdbc: 
/**/rs1265.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1265.getLong("parent9_1_0_");
03-03 13:57:09 jdbc: 
/**/rs1265.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1265.getBoolean("publicated1_0_");
03-03 13:57:09 jdbc: 
/**/rs1265.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1265.getLong("contentT2_2_4_");
03-03 13:57:09 jdbc: 
/**/rs1265.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1265.getLong("contentN1_4_");
03-03 13:57:09 jdbc: 
/**/rs1265.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1265.next();
03-03 13:57:09 jdbc: 
/**/rs1265.close();
03-03 13:57:09 jdbc: 
/**/prep1264.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1264.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 324
03-03 13:57:09 jdbc: RESULT_CLOSE 354
03-03 13:57:09 jdbc: 
/**/prep1264.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 352
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1265 = conn103.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 355
03-03 13:57:09 jdbc: 
/**/prep1265.setLong(1, 31L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1266 = prep1265.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 355
03-03 13:57:09 jdbc: RESULT_CLOSE 356
03-03 13:57:09 jdbc: 
/**/rs1266.next();
03-03 13:57:09 jdbc: 
/**/rs1266.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1266.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1266.getLong("contentN1_1_1_");
03-03 13:57:09 jdbc: 
/**/rs1266.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1266.getLong("contentT2_1_");
03-03 13:57:09 jdbc: 
/**/rs1266.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1266.next();
03-03 13:57:09 jdbc: 
/**/rs1266.getLong("id2_0_");
03-03 13:57:09 jdbc: 
/**/rs1266.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1266.getLong("contentN1_1_1_");
03-03 13:57:09 jdbc: 
/**/rs1266.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1266.getLong("contentT2_1_");
03-03 13:57:09 jdbc: 
/**/rs1266.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1266.next();
03-03 13:57:09 jdbc: 
/**/rs1266.close();
03-03 13:57:09 jdbc: 
/**/prep1265.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1265.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 324
03-03 13:57:09 jdbc: RESULT_CLOSE 357
03-03 13:57:09 jdbc: 
/**/prep1265.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 355
03-03 13:57:09 jdbc: 
/**/PreparedStatement prep1266 = conn103.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 13:57:09 jdbc: SESSION_PREPARE_READ_PARAMS 358
03-03 13:57:09 jdbc: 
/**/prep1266.setLong(1, 197L);
03-03 13:57:09 jdbc: 
/**/ResultSet rs1267 = prep1266.executeQuery();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 358
03-03 13:57:09 jdbc: RESULT_CLOSE 359
03-03 13:57:09 jdbc: 
/**/rs1267.next();
03-03 13:57:09 jdbc: 
/**/rs1267.getLong("id1_0_");
03-03 13:57:09 jdbc: 
/**/rs1267.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1267.getLong("id0_1_");
03-03 13:57:09 jdbc: 
/**/rs1267.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1267.getLong("id4_2_");
03-03 13:57:09 jdbc: 
/**/rs1267.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1267.getLong("id4_3_");
03-03 13:57:09 jdbc: 
/**/rs1267.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1267.getLong("contentT2_2_4_");
03-03 13:57:09 jdbc: 
/**/rs1267.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1267.getLong("contentN1_4_");
03-03 13:57:09 jdbc: 
/**/rs1267.wasNull();
03-03 13:57:09 jdbc: 
/**/rs1267.next();
03-03 13:57:09 jdbc: 
/**/rs1267.close();
03-03 13:57:09 jdbc: 
/**/prep1266.getMaxRows();
03-03 13:57:09 jdbc: 
/**/prep1266.getQueryTimeout();
03-03 13:57:09 jdbc: 
/**/conn103.getQueryTimeout();
03-03 13:57:09 jdbc: COMMAND_EXECUTE_QUERY 324
03-03 13:57:09 jdbc: RESULT_CLOSE 360
03-03 13:57:09 jdbc: 
/**/prep1266.close();
03-03 13:57:09 jdbc: COMMAND_CLOSE 358
