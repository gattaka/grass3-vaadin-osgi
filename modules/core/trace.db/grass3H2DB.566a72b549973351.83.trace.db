03-03 11:35:50 jdbc: 
/**/Connection conn83 = DriverManager.getConnection("jdbc:h2:tcp://localhost/grass3H2DB;TRACE_LEVEL_FIlE=3", "SA", "");
03-03 11:35:50 jdbc: java.lang.Exception: Open Stack Trace
	at org.h2.util.CloseWatcher.register(CloseWatcher.java:93)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:120)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:92)
	at org.h2.Driver.connect(Driver.java:72)
	at java.sql.DriverManager.getConnection(DriverManager.java:579)
	at java.sql.DriverManager.getConnection(DriverManager.java:190)
	at org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl.getConnection(DriverManagerConnectionProviderImpl.java:173)
	at org.hibernate.internal.AbstractSessionImpl$NonContextualJdbcConnectionAccess.obtainConnection(AbstractSessionImpl.java:276)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:297)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.getConnection(LogicalConnectionImpl.java:169)
	at org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:67)
	at org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:160)
	at org.hibernate.internal.SessionImpl.beginTransaction(SessionImpl.java:1263)
	at org.myftp.gattserver.grass3.model.AbstractDAO.findByID(AbstractDAO.java:133)
	at org.myftp.gattserver.grass3.facades.NodeFacade.getNodeById(NodeFacade.java:30)
	at org.myftp.gattserver.grass3.pages.template.ContentsTableFactory$ContentsTable.populateTable(ContentsTableFactory.java:118)
	at org.myftp.gattserver.grass3.pages.HomePage.createRecentMenus(HomePage.java:245)
	at org.myftp.gattserver.grass3.pages.HomePage.createContent(HomePage.java:99)
	at org.myftp.gattserver.grass3.pages.template.GrassPage.init(GrassPage.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:344)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:295)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:130)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1479)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:461)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:314)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1129)
	at org.myftp.gattserver.grass3.pages.factories.template.PageFactory.createPage(PageFactory.java:43)
	at org.myftp.gattserver.grass3.GrassUI.init(GrassUI.java:65)
	at com.vaadin.ui.UI.doInit(UI.java:523)
	at com.vaadin.server.AbstractCommunicationManager.getBrowserDetailsUI(AbstractCommunicationManager.java:2457)
	at com.vaadin.server.AbstractCommunicationManager.handleBrowserDetailsRequest(AbstractCommunicationManager.java:2352)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:325)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:201)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:669)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1448)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:118)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:45)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(BasicAuthenticationFilter.java:150)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:183)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:192)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:160)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1419)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:455)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:557)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1075)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:384)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1009)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:255)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:154)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)
	at org.eclipse.jetty.server.Server.handle(Server.java:368)
	at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:488)
	at org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:932)
	at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:994)
	at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:640)
	at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235)
	at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:628)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)
	at java.lang.Thread.run(Thread.java:722)

org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-168]
	at org.h2.message.DbException.get(DbException.java:169)
	at org.h2.message.DbException.get(DbException.java:146)
	at org.h2.message.DbException.get(DbException.java:135)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:172)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:119)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:92)
	at org.h2.Driver.connect(Driver.java:72)
	at java.sql.DriverManager.getConnection(DriverManager.java:579)
	at java.sql.DriverManager.getConnection(DriverManager.java:190)
	at org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl.getConnection(DriverManagerConnectionProviderImpl.java:173)
	at org.hibernate.internal.AbstractSessionImpl$NonContextualJdbcConnectionAccess.obtainConnection(AbstractSessionImpl.java:276)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:297)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.getConnection(LogicalConnectionImpl.java:169)
	at org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:67)
	at org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:160)
	at org.hibernate.internal.SessionImpl.beginTransaction(SessionImpl.java:1263)
	at org.myftp.gattserver.grass3.model.AbstractDAO.findAll(AbstractDAO.java:102)
	at org.myftp.gattserver.grass3.facades.ContentTagFacade.getAllContentTags(ContentTagFacade.java:34)
	at org.myftp.gattserver.grass3.pages.HomePage.createTagCloud(HomePage.java:117)
	at org.myftp.gattserver.grass3.pages.HomePage.createContent(HomePage.java:102)
	at org.myftp.gattserver.grass3.pages.template.GrassPage.init(GrassPage.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:344)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:295)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:130)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1479)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:461)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:314)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1129)
	at org.myftp.gattserver.grass3.pages.factories.template.PageFactory.createPage(PageFactory.java:43)
	at org.myftp.gattserver.grass3.GrassUI.init(GrassUI.java:65)
	at com.vaadin.ui.UI.doInit(UI.java:523)
	at com.vaadin.server.AbstractCommunicationManager.getBrowserDetailsUI(AbstractCommunicationManager.java:2457)
	at com.vaadin.server.AbstractCommunicationManager.handleBrowserDetailsRequest(AbstractCommunicationManager.java:2352)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:325)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:201)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:669)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1448)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:118)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:45)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(BasicAuthenticationFilter.java:150)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:183)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:192)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:160)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1419)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:455)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:557)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1075)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:384)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1009)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:255)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:154)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)
	at org.eclipse.jetty.server.Server.handle(Server.java:368)
	at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:488)
	at org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:932)
	at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:994)
	at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:640)
	at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235)
	at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:628)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)
	at java.lang.Thread.run(Thread.java:722)
Caused by: org.h2.jdbc.JdbcSQLException: The connection was not closed by the application and is garbage collected [90018-168]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:329)
	... 96 more
03-03 11:35:50 jdbc: java.lang.Exception: Open Stack Trace
	at org.h2.util.CloseWatcher.register(CloseWatcher.java:93)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:120)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:92)
	at org.h2.Driver.connect(Driver.java:72)
	at java.sql.DriverManager.getConnection(DriverManager.java:579)
	at java.sql.DriverManager.getConnection(DriverManager.java:190)
	at org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl.getConnection(DriverManagerConnectionProviderImpl.java:173)
	at org.hibernate.internal.AbstractSessionImpl$NonContextualJdbcConnectionAccess.obtainConnection(AbstractSessionImpl.java:276)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:297)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.getConnection(LogicalConnectionImpl.java:169)
	at org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:67)
	at org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:160)
	at org.hibernate.internal.SessionImpl.beginTransaction(SessionImpl.java:1263)
	at org.myftp.gattserver.grass3.model.AbstractDAO.findByID(AbstractDAO.java:133)
	at org.myftp.gattserver.grass3.facades.NodeFacade.getNodeById(NodeFacade.java:30)
	at org.myftp.gattserver.grass3.pages.template.ContentsTableFactory$ContentsTable.populateTable(ContentsTableFactory.java:118)
	at org.myftp.gattserver.grass3.pages.HomePage.createRecentMenus(HomePage.java:244)
	at org.myftp.gattserver.grass3.pages.HomePage.createContent(HomePage.java:99)
	at org.myftp.gattserver.grass3.pages.template.GrassPage.init(GrassPage.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:344)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:295)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:130)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1479)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:461)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:314)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1129)
	at org.myftp.gattserver.grass3.pages.factories.template.PageFactory.createPage(PageFactory.java:43)
	at org.myftp.gattserver.grass3.GrassUI.init(GrassUI.java:65)
	at com.vaadin.ui.UI.doInit(UI.java:523)
	at com.vaadin.server.AbstractCommunicationManager.getBrowserDetailsUI(AbstractCommunicationManager.java:2457)
	at com.vaadin.server.AbstractCommunicationManager.handleBrowserDetailsRequest(AbstractCommunicationManager.java:2352)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:325)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:201)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:669)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1448)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:118)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:45)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(BasicAuthenticationFilter.java:150)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:183)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:192)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:160)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1419)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:455)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:557)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1075)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:384)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1009)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:255)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:154)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)
	at org.eclipse.jetty.server.Server.handle(Server.java:368)
	at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:488)
	at org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:932)
	at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:994)
	at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:640)
	at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235)
	at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:628)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)
	at java.lang.Thread.run(Thread.java:722)

org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-168]
	at org.h2.message.DbException.get(DbException.java:169)
	at org.h2.message.DbException.get(DbException.java:146)
	at org.h2.message.DbException.get(DbException.java:135)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:172)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:119)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:92)
	at org.h2.Driver.connect(Driver.java:72)
	at java.sql.DriverManager.getConnection(DriverManager.java:579)
	at java.sql.DriverManager.getConnection(DriverManager.java:190)
	at org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl.getConnection(DriverManagerConnectionProviderImpl.java:173)
	at org.hibernate.internal.AbstractSessionImpl$NonContextualJdbcConnectionAccess.obtainConnection(AbstractSessionImpl.java:276)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:297)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.getConnection(LogicalConnectionImpl.java:169)
	at org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:67)
	at org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:160)
	at org.hibernate.internal.SessionImpl.beginTransaction(SessionImpl.java:1263)
	at org.myftp.gattserver.grass3.model.AbstractDAO.findAll(AbstractDAO.java:102)
	at org.myftp.gattserver.grass3.facades.ContentTagFacade.getAllContentTags(ContentTagFacade.java:34)
	at org.myftp.gattserver.grass3.pages.HomePage.createTagCloud(HomePage.java:117)
	at org.myftp.gattserver.grass3.pages.HomePage.createContent(HomePage.java:102)
	at org.myftp.gattserver.grass3.pages.template.GrassPage.init(GrassPage.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:344)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:295)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:130)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1479)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:461)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:314)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1129)
	at org.myftp.gattserver.grass3.pages.factories.template.PageFactory.createPage(PageFactory.java:43)
	at org.myftp.gattserver.grass3.GrassUI.init(GrassUI.java:65)
	at com.vaadin.ui.UI.doInit(UI.java:523)
	at com.vaadin.server.AbstractCommunicationManager.getBrowserDetailsUI(AbstractCommunicationManager.java:2457)
	at com.vaadin.server.AbstractCommunicationManager.handleBrowserDetailsRequest(AbstractCommunicationManager.java:2352)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:325)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:201)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:669)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1448)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:118)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:45)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(BasicAuthenticationFilter.java:150)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:183)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:192)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:160)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1419)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:455)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:557)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1075)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:384)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1009)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:255)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:154)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)
	at org.eclipse.jetty.server.Server.handle(Server.java:368)
	at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:488)
	at org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:932)
	at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:994)
	at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:640)
	at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235)
	at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:628)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)
	at java.lang.Thread.run(Thread.java:722)
Caused by: org.h2.jdbc.JdbcSQLException: The connection was not closed by the application and is garbage collected [90018-168]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:329)
	... 96 more
03-03 11:35:50 jdbc: java.lang.Exception: Open Stack Trace
	at org.h2.util.CloseWatcher.register(CloseWatcher.java:93)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:120)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:92)
	at org.h2.Driver.connect(Driver.java:72)
	at java.sql.DriverManager.getConnection(DriverManager.java:579)
	at java.sql.DriverManager.getConnection(DriverManager.java:190)
	at org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl.getConnection(DriverManagerConnectionProviderImpl.java:173)
	at org.hibernate.internal.AbstractSessionImpl$NonContextualJdbcConnectionAccess.obtainConnection(AbstractSessionImpl.java:276)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:297)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.getConnection(LogicalConnectionImpl.java:169)
	at org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:67)
	at org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:160)
	at org.hibernate.internal.SessionImpl.beginTransaction(SessionImpl.java:1263)
	at org.myftp.gattserver.grass3.model.AbstractDAO.findByID(AbstractDAO.java:133)
	at org.myftp.gattserver.grass3.facades.NodeFacade.getNodeById(NodeFacade.java:30)
	at org.myftp.gattserver.grass3.pages.template.ContentsTableFactory$ContentsTable.populateTable(ContentsTableFactory.java:118)
	at org.myftp.gattserver.grass3.pages.HomePage.createRecentMenus(HomePage.java:245)
	at org.myftp.gattserver.grass3.pages.HomePage.createContent(HomePage.java:99)
	at org.myftp.gattserver.grass3.pages.template.GrassPage.init(GrassPage.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:344)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:295)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:130)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1479)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:461)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:314)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1129)
	at org.myftp.gattserver.grass3.pages.factories.template.PageFactory.createPage(PageFactory.java:43)
	at org.myftp.gattserver.grass3.GrassUI.init(GrassUI.java:65)
	at com.vaadin.ui.UI.doInit(UI.java:523)
	at com.vaadin.server.AbstractCommunicationManager.getBrowserDetailsUI(AbstractCommunicationManager.java:2457)
	at com.vaadin.server.AbstractCommunicationManager.handleBrowserDetailsRequest(AbstractCommunicationManager.java:2352)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:325)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:201)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:669)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1448)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:118)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:45)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(BasicAuthenticationFilter.java:150)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:183)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:192)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:160)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1419)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:455)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:557)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1075)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:384)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1009)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:255)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:154)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)
	at org.eclipse.jetty.server.Server.handle(Server.java:368)
	at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:488)
	at org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:932)
	at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:994)
	at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:640)
	at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235)
	at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:628)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)
	at java.lang.Thread.run(Thread.java:722)

org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-168]
	at org.h2.message.DbException.get(DbException.java:169)
	at org.h2.message.DbException.get(DbException.java:146)
	at org.h2.message.DbException.get(DbException.java:135)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:172)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:119)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:92)
	at org.h2.Driver.connect(Driver.java:72)
	at java.sql.DriverManager.getConnection(DriverManager.java:579)
	at java.sql.DriverManager.getConnection(DriverManager.java:190)
	at org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl.getConnection(DriverManagerConnectionProviderImpl.java:173)
	at org.hibernate.internal.AbstractSessionImpl$NonContextualJdbcConnectionAccess.obtainConnection(AbstractSessionImpl.java:276)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:297)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.getConnection(LogicalConnectionImpl.java:169)
	at org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:67)
	at org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:160)
	at org.hibernate.internal.SessionImpl.beginTransaction(SessionImpl.java:1263)
	at org.myftp.gattserver.grass3.model.AbstractDAO.findAll(AbstractDAO.java:102)
	at org.myftp.gattserver.grass3.facades.ContentTagFacade.getAllContentTags(ContentTagFacade.java:34)
	at org.myftp.gattserver.grass3.pages.HomePage.createTagCloud(HomePage.java:117)
	at org.myftp.gattserver.grass3.pages.HomePage.createContent(HomePage.java:102)
	at org.myftp.gattserver.grass3.pages.template.GrassPage.init(GrassPage.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:344)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:295)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:130)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1479)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:461)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:314)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1129)
	at org.myftp.gattserver.grass3.pages.factories.template.PageFactory.createPage(PageFactory.java:43)
	at org.myftp.gattserver.grass3.GrassUI.init(GrassUI.java:65)
	at com.vaadin.ui.UI.doInit(UI.java:523)
	at com.vaadin.server.AbstractCommunicationManager.getBrowserDetailsUI(AbstractCommunicationManager.java:2457)
	at com.vaadin.server.AbstractCommunicationManager.handleBrowserDetailsRequest(AbstractCommunicationManager.java:2352)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:325)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:201)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:669)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1448)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:118)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:45)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(BasicAuthenticationFilter.java:150)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:183)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:192)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:160)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1419)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:455)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:557)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1075)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:384)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1009)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:255)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:154)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)
	at org.eclipse.jetty.server.Server.handle(Server.java:368)
	at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:488)
	at org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:932)
	at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:994)
	at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:640)
	at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235)
	at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:628)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)
	at java.lang.Thread.run(Thread.java:722)
Caused by: org.h2.jdbc.JdbcSQLException: The connection was not closed by the application and is garbage collected [90018-168]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:329)
	... 96 more
03-03 11:35:50 jdbc: java.lang.Exception: Open Stack Trace
	at org.h2.util.CloseWatcher.register(CloseWatcher.java:93)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:120)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:92)
	at org.h2.Driver.connect(Driver.java:72)
	at java.sql.DriverManager.getConnection(DriverManager.java:579)
	at java.sql.DriverManager.getConnection(DriverManager.java:190)
	at org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl.getConnection(DriverManagerConnectionProviderImpl.java:173)
	at org.hibernate.internal.AbstractSessionImpl$NonContextualJdbcConnectionAccess.obtainConnection(AbstractSessionImpl.java:276)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:297)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.getConnection(LogicalConnectionImpl.java:169)
	at org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:67)
	at org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:160)
	at org.hibernate.internal.SessionImpl.beginTransaction(SessionImpl.java:1263)
	at org.myftp.gattserver.grass3.model.AbstractDAO.findByID(AbstractDAO.java:133)
	at org.myftp.gattserver.grass3.facades.NodeFacade.getNodeById(NodeFacade.java:30)
	at org.myftp.gattserver.grass3.pages.template.ContentsTableFactory$ContentsTable.populateTable(ContentsTableFactory.java:118)
	at org.myftp.gattserver.grass3.pages.HomePage.createRecentMenus(HomePage.java:245)
	at org.myftp.gattserver.grass3.pages.HomePage.createContent(HomePage.java:99)
	at org.myftp.gattserver.grass3.pages.template.GrassPage.init(GrassPage.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:344)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:295)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:130)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1479)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:461)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:314)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1129)
	at org.myftp.gattserver.grass3.pages.factories.template.PageFactory.createPage(PageFactory.java:43)
	at org.myftp.gattserver.grass3.GrassUI.init(GrassUI.java:65)
	at com.vaadin.ui.UI.doInit(UI.java:523)
	at com.vaadin.server.AbstractCommunicationManager.getBrowserDetailsUI(AbstractCommunicationManager.java:2457)
	at com.vaadin.server.AbstractCommunicationManager.handleBrowserDetailsRequest(AbstractCommunicationManager.java:2352)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:325)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:201)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:669)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1448)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:118)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:45)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(BasicAuthenticationFilter.java:150)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:183)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:192)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:160)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1419)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:455)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:557)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1075)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:384)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1009)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:255)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:154)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)
	at org.eclipse.jetty.server.Server.handle(Server.java:368)
	at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:488)
	at org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:932)
	at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:994)
	at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:640)
	at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235)
	at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:628)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)
	at java.lang.Thread.run(Thread.java:722)

org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-168]
	at org.h2.message.DbException.get(DbException.java:169)
	at org.h2.message.DbException.get(DbException.java:146)
	at org.h2.message.DbException.get(DbException.java:135)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:172)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:119)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:92)
	at org.h2.Driver.connect(Driver.java:72)
	at java.sql.DriverManager.getConnection(DriverManager.java:579)
	at java.sql.DriverManager.getConnection(DriverManager.java:190)
	at org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl.getConnection(DriverManagerConnectionProviderImpl.java:173)
	at org.hibernate.internal.AbstractSessionImpl$NonContextualJdbcConnectionAccess.obtainConnection(AbstractSessionImpl.java:276)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:297)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.getConnection(LogicalConnectionImpl.java:169)
	at org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:67)
	at org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:160)
	at org.hibernate.internal.SessionImpl.beginTransaction(SessionImpl.java:1263)
	at org.myftp.gattserver.grass3.model.AbstractDAO.findAll(AbstractDAO.java:102)
	at org.myftp.gattserver.grass3.facades.ContentTagFacade.getAllContentTags(ContentTagFacade.java:34)
	at org.myftp.gattserver.grass3.pages.HomePage.createTagCloud(HomePage.java:117)
	at org.myftp.gattserver.grass3.pages.HomePage.createContent(HomePage.java:102)
	at org.myftp.gattserver.grass3.pages.template.GrassPage.init(GrassPage.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:344)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:295)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:130)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1479)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:461)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:314)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1129)
	at org.myftp.gattserver.grass3.pages.factories.template.PageFactory.createPage(PageFactory.java:43)
	at org.myftp.gattserver.grass3.GrassUI.init(GrassUI.java:65)
	at com.vaadin.ui.UI.doInit(UI.java:523)
	at com.vaadin.server.AbstractCommunicationManager.getBrowserDetailsUI(AbstractCommunicationManager.java:2457)
	at com.vaadin.server.AbstractCommunicationManager.handleBrowserDetailsRequest(AbstractCommunicationManager.java:2352)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:325)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:201)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:669)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1448)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:118)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:45)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(BasicAuthenticationFilter.java:150)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:183)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:192)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:160)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1419)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:455)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:557)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1075)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:384)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1009)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:255)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:154)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)
	at org.eclipse.jetty.server.Server.handle(Server.java:368)
	at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:488)
	at org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:932)
	at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:994)
	at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:640)
	at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235)
	at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:628)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)
	at java.lang.Thread.run(Thread.java:722)
Caused by: org.h2.jdbc.JdbcSQLException: The connection was not closed by the application and is garbage collected [90018-168]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:329)
	... 96 more
03-03 11:35:50 jdbc: java.lang.Exception: Open Stack Trace
	at org.h2.util.CloseWatcher.register(CloseWatcher.java:93)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:120)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:92)
	at org.h2.Driver.connect(Driver.java:72)
	at java.sql.DriverManager.getConnection(DriverManager.java:579)
	at java.sql.DriverManager.getConnection(DriverManager.java:190)
	at org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl.getConnection(DriverManagerConnectionProviderImpl.java:173)
	at org.hibernate.internal.AbstractSessionImpl$NonContextualJdbcConnectionAccess.obtainConnection(AbstractSessionImpl.java:276)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:297)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.getConnection(LogicalConnectionImpl.java:169)
	at org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:67)
	at org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:160)
	at org.hibernate.internal.SessionImpl.beginTransaction(SessionImpl.java:1263)
	at org.myftp.gattserver.grass3.model.AbstractDAO.findByID(AbstractDAO.java:133)
	at org.myftp.gattserver.grass3.facades.NodeFacade.getNodeById(NodeFacade.java:30)
	at org.myftp.gattserver.grass3.pages.template.ContentsTableFactory$ContentsTable.populateTable(ContentsTableFactory.java:118)
	at org.myftp.gattserver.grass3.pages.HomePage.createRecentMenus(HomePage.java:245)
	at org.myftp.gattserver.grass3.pages.HomePage.createContent(HomePage.java:99)
	at org.myftp.gattserver.grass3.pages.template.GrassPage.init(GrassPage.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:344)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:295)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:130)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1479)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:461)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:314)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1129)
	at org.myftp.gattserver.grass3.pages.factories.template.PageFactory.createPage(PageFactory.java:43)
	at org.myftp.gattserver.grass3.GrassUI.init(GrassUI.java:65)
	at com.vaadin.ui.UI.doInit(UI.java:523)
	at com.vaadin.server.AbstractCommunicationManager.getBrowserDetailsUI(AbstractCommunicationManager.java:2457)
	at com.vaadin.server.AbstractCommunicationManager.handleBrowserDetailsRequest(AbstractCommunicationManager.java:2352)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:325)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:201)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:669)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1448)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:118)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:45)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(BasicAuthenticationFilter.java:150)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:183)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:192)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:160)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1419)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:455)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:557)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1075)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:384)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1009)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:255)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:154)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)
	at org.eclipse.jetty.server.Server.handle(Server.java:368)
	at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:488)
	at org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:932)
	at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:994)
	at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:640)
	at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235)
	at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:628)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)
	at java.lang.Thread.run(Thread.java:722)

org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-168]
	at org.h2.message.DbException.get(DbException.java:169)
	at org.h2.message.DbException.get(DbException.java:146)
	at org.h2.message.DbException.get(DbException.java:135)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:172)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:119)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:92)
	at org.h2.Driver.connect(Driver.java:72)
	at java.sql.DriverManager.getConnection(DriverManager.java:579)
	at java.sql.DriverManager.getConnection(DriverManager.java:190)
	at org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl.getConnection(DriverManagerConnectionProviderImpl.java:173)
	at org.hibernate.internal.AbstractSessionImpl$NonContextualJdbcConnectionAccess.obtainConnection(AbstractSessionImpl.java:276)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:297)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.getConnection(LogicalConnectionImpl.java:169)
	at org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:67)
	at org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:160)
	at org.hibernate.internal.SessionImpl.beginTransaction(SessionImpl.java:1263)
	at org.myftp.gattserver.grass3.model.AbstractDAO.findAll(AbstractDAO.java:102)
	at org.myftp.gattserver.grass3.facades.ContentTagFacade.getAllContentTags(ContentTagFacade.java:34)
	at org.myftp.gattserver.grass3.pages.HomePage.createTagCloud(HomePage.java:117)
	at org.myftp.gattserver.grass3.pages.HomePage.createContent(HomePage.java:102)
	at org.myftp.gattserver.grass3.pages.template.GrassPage.init(GrassPage.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:344)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:295)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:130)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1479)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:461)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:314)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1129)
	at org.myftp.gattserver.grass3.pages.factories.template.PageFactory.createPage(PageFactory.java:43)
	at org.myftp.gattserver.grass3.GrassUI.init(GrassUI.java:65)
	at com.vaadin.ui.UI.doInit(UI.java:523)
	at com.vaadin.server.AbstractCommunicationManager.getBrowserDetailsUI(AbstractCommunicationManager.java:2457)
	at com.vaadin.server.AbstractCommunicationManager.handleBrowserDetailsRequest(AbstractCommunicationManager.java:2352)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:325)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:201)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:669)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1448)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:118)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:45)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(BasicAuthenticationFilter.java:150)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:183)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:192)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:160)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1419)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:455)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:557)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1075)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:384)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1009)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:255)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:154)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)
	at org.eclipse.jetty.server.Server.handle(Server.java:368)
	at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:488)
	at org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:932)
	at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:994)
	at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:640)
	at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235)
	at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:628)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)
	at java.lang.Thread.run(Thread.java:722)
Caused by: org.h2.jdbc.JdbcSQLException: The connection was not closed by the application and is garbage collected [90018-168]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:329)
	... 96 more
03-03 11:35:50 jdbc: java.lang.Exception: Open Stack Trace
	at org.h2.util.CloseWatcher.register(CloseWatcher.java:93)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:120)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:92)
	at org.h2.Driver.connect(Driver.java:72)
	at java.sql.DriverManager.getConnection(DriverManager.java:579)
	at java.sql.DriverManager.getConnection(DriverManager.java:190)
	at org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl.getConnection(DriverManagerConnectionProviderImpl.java:173)
	at org.hibernate.internal.AbstractSessionImpl$NonContextualJdbcConnectionAccess.obtainConnection(AbstractSessionImpl.java:276)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:297)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.getConnection(LogicalConnectionImpl.java:169)
	at org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:67)
	at org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:160)
	at org.hibernate.internal.SessionImpl.beginTransaction(SessionImpl.java:1263)
	at org.myftp.gattserver.grass3.model.AbstractDAO.findByID(AbstractDAO.java:133)
	at org.myftp.gattserver.grass3.facades.NodeFacade.getNodeById(NodeFacade.java:30)
	at org.myftp.gattserver.grass3.pages.template.ContentsTableFactory$ContentsTable.populateTable(ContentsTableFactory.java:118)
	at org.myftp.gattserver.grass3.pages.HomePage.createRecentMenus(HomePage.java:245)
	at org.myftp.gattserver.grass3.pages.HomePage.createContent(HomePage.java:99)
	at org.myftp.gattserver.grass3.pages.template.GrassPage.init(GrassPage.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:344)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:295)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:130)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1479)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:461)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:314)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1129)
	at org.myftp.gattserver.grass3.pages.factories.template.PageFactory.createPage(PageFactory.java:43)
	at org.myftp.gattserver.grass3.GrassUI.init(GrassUI.java:65)
	at com.vaadin.ui.UI.doInit(UI.java:523)
	at com.vaadin.server.AbstractCommunicationManager.getBrowserDetailsUI(AbstractCommunicationManager.java:2457)
	at com.vaadin.server.AbstractCommunicationManager.handleBrowserDetailsRequest(AbstractCommunicationManager.java:2352)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:325)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:201)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:669)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1448)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:118)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:45)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(BasicAuthenticationFilter.java:150)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:183)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:192)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:160)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1419)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:455)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:557)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1075)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:384)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1009)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:255)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:154)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)
	at org.eclipse.jetty.server.Server.handle(Server.java:368)
	at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:488)
	at org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:932)
	at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:994)
	at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:640)
	at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235)
	at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:628)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)
	at java.lang.Thread.run(Thread.java:722)

org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-168]
	at org.h2.message.DbException.get(DbException.java:169)
	at org.h2.message.DbException.get(DbException.java:146)
	at org.h2.message.DbException.get(DbException.java:135)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:172)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:119)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:92)
	at org.h2.Driver.connect(Driver.java:72)
	at java.sql.DriverManager.getConnection(DriverManager.java:579)
	at java.sql.DriverManager.getConnection(DriverManager.java:190)
	at org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl.getConnection(DriverManagerConnectionProviderImpl.java:173)
	at org.hibernate.internal.AbstractSessionImpl$NonContextualJdbcConnectionAccess.obtainConnection(AbstractSessionImpl.java:276)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:297)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.getConnection(LogicalConnectionImpl.java:169)
	at org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:67)
	at org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:160)
	at org.hibernate.internal.SessionImpl.beginTransaction(SessionImpl.java:1263)
	at org.myftp.gattserver.grass3.model.AbstractDAO.findAll(AbstractDAO.java:102)
	at org.myftp.gattserver.grass3.facades.ContentTagFacade.getAllContentTags(ContentTagFacade.java:34)
	at org.myftp.gattserver.grass3.pages.HomePage.createTagCloud(HomePage.java:117)
	at org.myftp.gattserver.grass3.pages.HomePage.createContent(HomePage.java:102)
	at org.myftp.gattserver.grass3.pages.template.GrassPage.init(GrassPage.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:344)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:295)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:130)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1479)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:461)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:314)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1129)
	at org.myftp.gattserver.grass3.pages.factories.template.PageFactory.createPage(PageFactory.java:43)
	at org.myftp.gattserver.grass3.GrassUI.init(GrassUI.java:65)
	at com.vaadin.ui.UI.doInit(UI.java:523)
	at com.vaadin.server.AbstractCommunicationManager.getBrowserDetailsUI(AbstractCommunicationManager.java:2457)
	at com.vaadin.server.AbstractCommunicationManager.handleBrowserDetailsRequest(AbstractCommunicationManager.java:2352)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:325)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:201)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:669)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1448)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:118)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:45)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(BasicAuthenticationFilter.java:150)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:183)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:192)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:160)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1419)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:455)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:557)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1075)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:384)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1009)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:255)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:154)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)
	at org.eclipse.jetty.server.Server.handle(Server.java:368)
	at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:488)
	at org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:932)
	at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:994)
	at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:640)
	at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235)
	at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:628)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)
	at java.lang.Thread.run(Thread.java:722)
Caused by: org.h2.jdbc.JdbcSQLException: The connection was not closed by the application and is garbage collected [90018-168]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:329)
	... 96 more
03-03 11:35:51 jdbc: java.lang.Exception: Open Stack Trace
	at org.h2.util.CloseWatcher.register(CloseWatcher.java:93)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:120)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:92)
	at org.h2.Driver.connect(Driver.java:72)
	at java.sql.DriverManager.getConnection(DriverManager.java:579)
	at java.sql.DriverManager.getConnection(DriverManager.java:190)
	at org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl.getConnection(DriverManagerConnectionProviderImpl.java:173)
	at org.hibernate.internal.AbstractSessionImpl$NonContextualJdbcConnectionAccess.obtainConnection(AbstractSessionImpl.java:276)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:297)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.getConnection(LogicalConnectionImpl.java:169)
	at org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:67)
	at org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:160)
	at org.hibernate.internal.SessionImpl.beginTransaction(SessionImpl.java:1263)
	at org.myftp.gattserver.grass3.model.AbstractDAO.findByID(AbstractDAO.java:133)
	at org.myftp.gattserver.grass3.facades.NodeFacade.getNodeById(NodeFacade.java:30)
	at org.myftp.gattserver.grass3.pages.template.ContentsTableFactory$ContentsTable.populateTable(ContentsTableFactory.java:118)
	at org.myftp.gattserver.grass3.pages.HomePage.createRecentMenus(HomePage.java:244)
	at org.myftp.gattserver.grass3.pages.HomePage.createContent(HomePage.java:99)
	at org.myftp.gattserver.grass3.pages.template.GrassPage.init(GrassPage.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:344)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:295)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:130)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1479)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:461)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:314)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1129)
	at org.myftp.gattserver.grass3.pages.factories.template.PageFactory.createPage(PageFactory.java:43)
	at org.myftp.gattserver.grass3.GrassUI.init(GrassUI.java:65)
	at com.vaadin.ui.UI.doInit(UI.java:523)
	at com.vaadin.server.AbstractCommunicationManager.getBrowserDetailsUI(AbstractCommunicationManager.java:2457)
	at com.vaadin.server.AbstractCommunicationManager.handleBrowserDetailsRequest(AbstractCommunicationManager.java:2352)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:325)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:201)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:669)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1448)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:118)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:45)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(BasicAuthenticationFilter.java:150)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:183)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:192)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:160)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1419)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:455)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:557)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1075)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:384)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1009)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:255)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:154)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)
	at org.eclipse.jetty.server.Server.handle(Server.java:368)
	at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:488)
	at org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:932)
	at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:994)
	at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:640)
	at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235)
	at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:628)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)
	at java.lang.Thread.run(Thread.java:722)

org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-168]
	at org.h2.message.DbException.get(DbException.java:169)
	at org.h2.message.DbException.get(DbException.java:146)
	at org.h2.message.DbException.get(DbException.java:135)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:172)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:119)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:92)
	at org.h2.Driver.connect(Driver.java:72)
	at java.sql.DriverManager.getConnection(DriverManager.java:579)
	at java.sql.DriverManager.getConnection(DriverManager.java:190)
	at org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl.getConnection(DriverManagerConnectionProviderImpl.java:173)
	at org.hibernate.internal.AbstractSessionImpl$NonContextualJdbcConnectionAccess.obtainConnection(AbstractSessionImpl.java:276)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:297)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.getConnection(LogicalConnectionImpl.java:169)
	at org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:67)
	at org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:160)
	at org.hibernate.internal.SessionImpl.beginTransaction(SessionImpl.java:1263)
	at org.myftp.gattserver.grass3.model.AbstractDAO.findAll(AbstractDAO.java:102)
	at org.myftp.gattserver.grass3.facades.ContentTagFacade.getAllContentTags(ContentTagFacade.java:34)
	at org.myftp.gattserver.grass3.pages.HomePage.createTagCloud(HomePage.java:117)
	at org.myftp.gattserver.grass3.pages.HomePage.createContent(HomePage.java:102)
	at org.myftp.gattserver.grass3.pages.template.GrassPage.init(GrassPage.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:344)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:295)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:130)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1479)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:461)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:314)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1129)
	at org.myftp.gattserver.grass3.pages.factories.template.PageFactory.createPage(PageFactory.java:43)
	at org.myftp.gattserver.grass3.GrassUI.init(GrassUI.java:65)
	at com.vaadin.ui.UI.doInit(UI.java:523)
	at com.vaadin.server.AbstractCommunicationManager.getBrowserDetailsUI(AbstractCommunicationManager.java:2457)
	at com.vaadin.server.AbstractCommunicationManager.handleBrowserDetailsRequest(AbstractCommunicationManager.java:2352)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:325)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:201)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:669)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1448)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:118)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:45)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(BasicAuthenticationFilter.java:150)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:183)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:192)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:160)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1419)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:455)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:557)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1075)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:384)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1009)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:255)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:154)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)
	at org.eclipse.jetty.server.Server.handle(Server.java:368)
	at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:488)
	at org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:932)
	at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:994)
	at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:640)
	at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235)
	at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:628)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)
	at java.lang.Thread.run(Thread.java:722)
Caused by: org.h2.jdbc.JdbcSQLException: The connection was not closed by the application and is garbage collected [90018-168]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:329)
	... 96 more
03-03 11:35:51 jdbc: java.lang.Exception: Open Stack Trace
	at org.h2.util.CloseWatcher.register(CloseWatcher.java:93)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:120)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:92)
	at org.h2.Driver.connect(Driver.java:72)
	at java.sql.DriverManager.getConnection(DriverManager.java:579)
	at java.sql.DriverManager.getConnection(DriverManager.java:190)
	at org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl.getConnection(DriverManagerConnectionProviderImpl.java:173)
	at org.hibernate.internal.AbstractSessionImpl$NonContextualJdbcConnectionAccess.obtainConnection(AbstractSessionImpl.java:276)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:297)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.getConnection(LogicalConnectionImpl.java:169)
	at org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:67)
	at org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:160)
	at org.hibernate.internal.SessionImpl.beginTransaction(SessionImpl.java:1263)
	at org.myftp.gattserver.grass3.model.AbstractDAO.findByID(AbstractDAO.java:133)
	at org.myftp.gattserver.grass3.facades.NodeFacade.getNodeById(NodeFacade.java:30)
	at org.myftp.gattserver.grass3.pages.template.ContentsTableFactory$ContentsTable.populateTable(ContentsTableFactory.java:118)
	at org.myftp.gattserver.grass3.pages.HomePage.createRecentMenus(HomePage.java:245)
	at org.myftp.gattserver.grass3.pages.HomePage.createContent(HomePage.java:99)
	at org.myftp.gattserver.grass3.pages.template.GrassPage.init(GrassPage.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:344)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:295)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:130)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1479)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:461)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:314)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1129)
	at org.myftp.gattserver.grass3.pages.factories.template.PageFactory.createPage(PageFactory.java:43)
	at org.myftp.gattserver.grass3.GrassUI.init(GrassUI.java:65)
	at com.vaadin.ui.UI.doInit(UI.java:523)
	at com.vaadin.server.AbstractCommunicationManager.getBrowserDetailsUI(AbstractCommunicationManager.java:2457)
	at com.vaadin.server.AbstractCommunicationManager.handleBrowserDetailsRequest(AbstractCommunicationManager.java:2352)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:325)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:201)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:669)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1448)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:118)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:45)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(BasicAuthenticationFilter.java:150)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:183)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:192)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:160)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1419)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:455)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:557)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1075)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:384)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1009)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:255)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:154)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)
	at org.eclipse.jetty.server.Server.handle(Server.java:368)
	at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:488)
	at org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:932)
	at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:994)
	at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:640)
	at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235)
	at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:628)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)
	at java.lang.Thread.run(Thread.java:722)

org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-168]
	at org.h2.message.DbException.get(DbException.java:169)
	at org.h2.message.DbException.get(DbException.java:146)
	at org.h2.message.DbException.get(DbException.java:135)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:172)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:119)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:92)
	at org.h2.Driver.connect(Driver.java:72)
	at java.sql.DriverManager.getConnection(DriverManager.java:579)
	at java.sql.DriverManager.getConnection(DriverManager.java:190)
	at org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl.getConnection(DriverManagerConnectionProviderImpl.java:173)
	at org.hibernate.internal.AbstractSessionImpl$NonContextualJdbcConnectionAccess.obtainConnection(AbstractSessionImpl.java:276)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:297)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.getConnection(LogicalConnectionImpl.java:169)
	at org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:67)
	at org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:160)
	at org.hibernate.internal.SessionImpl.beginTransaction(SessionImpl.java:1263)
	at org.myftp.gattserver.grass3.model.AbstractDAO.findAll(AbstractDAO.java:102)
	at org.myftp.gattserver.grass3.facades.ContentTagFacade.getAllContentTags(ContentTagFacade.java:34)
	at org.myftp.gattserver.grass3.pages.HomePage.createTagCloud(HomePage.java:117)
	at org.myftp.gattserver.grass3.pages.HomePage.createContent(HomePage.java:102)
	at org.myftp.gattserver.grass3.pages.template.GrassPage.init(GrassPage.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:344)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:295)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:130)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1479)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:461)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:314)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1129)
	at org.myftp.gattserver.grass3.pages.factories.template.PageFactory.createPage(PageFactory.java:43)
	at org.myftp.gattserver.grass3.GrassUI.init(GrassUI.java:65)
	at com.vaadin.ui.UI.doInit(UI.java:523)
	at com.vaadin.server.AbstractCommunicationManager.getBrowserDetailsUI(AbstractCommunicationManager.java:2457)
	at com.vaadin.server.AbstractCommunicationManager.handleBrowserDetailsRequest(AbstractCommunicationManager.java:2352)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:325)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:201)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:669)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1448)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:118)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:45)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(BasicAuthenticationFilter.java:150)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:183)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:192)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:160)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1419)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:455)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:557)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1075)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:384)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1009)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:255)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:154)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)
	at org.eclipse.jetty.server.Server.handle(Server.java:368)
	at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:488)
	at org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:932)
	at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:994)
	at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:640)
	at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235)
	at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:628)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)
	at java.lang.Thread.run(Thread.java:722)
Caused by: org.h2.jdbc.JdbcSQLException: The connection was not closed by the application and is garbage collected [90018-168]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:329)
	... 96 more
03-03 11:35:51 jdbc: java.lang.Exception: Open Stack Trace
	at org.h2.util.CloseWatcher.register(CloseWatcher.java:93)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:120)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:92)
	at org.h2.Driver.connect(Driver.java:72)
	at java.sql.DriverManager.getConnection(DriverManager.java:579)
	at java.sql.DriverManager.getConnection(DriverManager.java:190)
	at org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl.getConnection(DriverManagerConnectionProviderImpl.java:173)
	at org.hibernate.internal.AbstractSessionImpl$NonContextualJdbcConnectionAccess.obtainConnection(AbstractSessionImpl.java:276)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:297)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.getConnection(LogicalConnectionImpl.java:169)
	at org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:67)
	at org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:160)
	at org.hibernate.internal.SessionImpl.beginTransaction(SessionImpl.java:1263)
	at org.myftp.gattserver.grass3.model.AbstractDAO.findByID(AbstractDAO.java:133)
	at org.myftp.gattserver.grass3.facades.NodeFacade.getNodeById(NodeFacade.java:30)
	at org.myftp.gattserver.grass3.pages.template.ContentsTableFactory$ContentsTable.populateTable(ContentsTableFactory.java:118)
	at org.myftp.gattserver.grass3.pages.HomePage.createRecentMenus(HomePage.java:245)
	at org.myftp.gattserver.grass3.pages.HomePage.createContent(HomePage.java:99)
	at org.myftp.gattserver.grass3.pages.template.GrassPage.init(GrassPage.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:344)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:295)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:130)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1479)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:461)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:314)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1129)
	at org.myftp.gattserver.grass3.pages.factories.template.PageFactory.createPage(PageFactory.java:43)
	at org.myftp.gattserver.grass3.GrassUI.init(GrassUI.java:65)
	at com.vaadin.ui.UI.doInit(UI.java:523)
	at com.vaadin.server.AbstractCommunicationManager.getBrowserDetailsUI(AbstractCommunicationManager.java:2457)
	at com.vaadin.server.AbstractCommunicationManager.handleBrowserDetailsRequest(AbstractCommunicationManager.java:2352)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:325)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:201)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:669)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1448)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:118)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:45)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(BasicAuthenticationFilter.java:150)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:183)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:192)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:160)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1419)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:455)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:557)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1075)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:384)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1009)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:255)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:154)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)
	at org.eclipse.jetty.server.Server.handle(Server.java:368)
	at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:488)
	at org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:932)
	at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:994)
	at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:640)
	at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235)
	at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:628)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)
	at java.lang.Thread.run(Thread.java:722)

org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-168]
	at org.h2.message.DbException.get(DbException.java:169)
	at org.h2.message.DbException.get(DbException.java:146)
	at org.h2.message.DbException.get(DbException.java:135)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:172)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:119)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:92)
	at org.h2.Driver.connect(Driver.java:72)
	at java.sql.DriverManager.getConnection(DriverManager.java:579)
	at java.sql.DriverManager.getConnection(DriverManager.java:190)
	at org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl.getConnection(DriverManagerConnectionProviderImpl.java:173)
	at org.hibernate.internal.AbstractSessionImpl$NonContextualJdbcConnectionAccess.obtainConnection(AbstractSessionImpl.java:276)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:297)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.getConnection(LogicalConnectionImpl.java:169)
	at org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:67)
	at org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:160)
	at org.hibernate.internal.SessionImpl.beginTransaction(SessionImpl.java:1263)
	at org.myftp.gattserver.grass3.model.AbstractDAO.findAll(AbstractDAO.java:102)
	at org.myftp.gattserver.grass3.facades.ContentTagFacade.getAllContentTags(ContentTagFacade.java:34)
	at org.myftp.gattserver.grass3.pages.HomePage.createTagCloud(HomePage.java:117)
	at org.myftp.gattserver.grass3.pages.HomePage.createContent(HomePage.java:102)
	at org.myftp.gattserver.grass3.pages.template.GrassPage.init(GrassPage.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:344)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:295)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:130)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1479)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:461)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:314)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1129)
	at org.myftp.gattserver.grass3.pages.factories.template.PageFactory.createPage(PageFactory.java:43)
	at org.myftp.gattserver.grass3.GrassUI.init(GrassUI.java:65)
	at com.vaadin.ui.UI.doInit(UI.java:523)
	at com.vaadin.server.AbstractCommunicationManager.getBrowserDetailsUI(AbstractCommunicationManager.java:2457)
	at com.vaadin.server.AbstractCommunicationManager.handleBrowserDetailsRequest(AbstractCommunicationManager.java:2352)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:325)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:201)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:669)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1448)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:118)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:45)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(BasicAuthenticationFilter.java:150)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:183)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:192)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:160)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1419)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:455)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:557)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1075)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:384)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1009)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:255)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:154)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)
	at org.eclipse.jetty.server.Server.handle(Server.java:368)
	at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:488)
	at org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:932)
	at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:994)
	at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:640)
	at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235)
	at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:628)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)
	at java.lang.Thread.run(Thread.java:722)
Caused by: org.h2.jdbc.JdbcSQLException: The connection was not closed by the application and is garbage collected [90018-168]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:329)
	... 96 more
03-03 11:35:51 jdbc: java.lang.Exception: Open Stack Trace
	at org.h2.util.CloseWatcher.register(CloseWatcher.java:93)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:120)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:92)
	at org.h2.Driver.connect(Driver.java:72)
	at java.sql.DriverManager.getConnection(DriverManager.java:579)
	at java.sql.DriverManager.getConnection(DriverManager.java:190)
	at org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl.getConnection(DriverManagerConnectionProviderImpl.java:173)
	at org.hibernate.internal.AbstractSessionImpl$NonContextualJdbcConnectionAccess.obtainConnection(AbstractSessionImpl.java:276)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:297)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.getConnection(LogicalConnectionImpl.java:169)
	at org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:67)
	at org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:160)
	at org.hibernate.internal.SessionImpl.beginTransaction(SessionImpl.java:1263)
	at org.myftp.gattserver.grass3.model.AbstractDAO.findByID(AbstractDAO.java:133)
	at org.myftp.gattserver.grass3.facades.NodeFacade.getNodeById(NodeFacade.java:30)
	at org.myftp.gattserver.grass3.pages.template.ContentsTableFactory$ContentsTable.populateTable(ContentsTableFactory.java:118)
	at org.myftp.gattserver.grass3.pages.HomePage.createRecentMenus(HomePage.java:245)
	at org.myftp.gattserver.grass3.pages.HomePage.createContent(HomePage.java:99)
	at org.myftp.gattserver.grass3.pages.template.GrassPage.init(GrassPage.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:344)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:295)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:130)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1479)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:461)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:314)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1129)
	at org.myftp.gattserver.grass3.pages.factories.template.PageFactory.createPage(PageFactory.java:43)
	at org.myftp.gattserver.grass3.GrassUI.init(GrassUI.java:65)
	at com.vaadin.ui.UI.doInit(UI.java:523)
	at com.vaadin.server.AbstractCommunicationManager.getBrowserDetailsUI(AbstractCommunicationManager.java:2457)
	at com.vaadin.server.AbstractCommunicationManager.handleBrowserDetailsRequest(AbstractCommunicationManager.java:2352)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:325)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:201)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:669)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1448)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:118)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:45)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(BasicAuthenticationFilter.java:150)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:183)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:192)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:160)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1419)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:455)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:557)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1075)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:384)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1009)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:255)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:154)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)
	at org.eclipse.jetty.server.Server.handle(Server.java:368)
	at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:488)
	at org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:932)
	at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:994)
	at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:640)
	at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235)
	at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:628)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)
	at java.lang.Thread.run(Thread.java:722)

org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-168]
	at org.h2.message.DbException.get(DbException.java:169)
	at org.h2.message.DbException.get(DbException.java:146)
	at org.h2.message.DbException.get(DbException.java:135)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:172)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:119)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:92)
	at org.h2.Driver.connect(Driver.java:72)
	at java.sql.DriverManager.getConnection(DriverManager.java:579)
	at java.sql.DriverManager.getConnection(DriverManager.java:190)
	at org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl.getConnection(DriverManagerConnectionProviderImpl.java:173)
	at org.hibernate.internal.AbstractSessionImpl$NonContextualJdbcConnectionAccess.obtainConnection(AbstractSessionImpl.java:276)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:297)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.getConnection(LogicalConnectionImpl.java:169)
	at org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:67)
	at org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:160)
	at org.hibernate.internal.SessionImpl.beginTransaction(SessionImpl.java:1263)
	at org.myftp.gattserver.grass3.model.AbstractDAO.findAll(AbstractDAO.java:102)
	at org.myftp.gattserver.grass3.facades.ContentTagFacade.getAllContentTags(ContentTagFacade.java:34)
	at org.myftp.gattserver.grass3.pages.HomePage.createTagCloud(HomePage.java:117)
	at org.myftp.gattserver.grass3.pages.HomePage.createContent(HomePage.java:102)
	at org.myftp.gattserver.grass3.pages.template.GrassPage.init(GrassPage.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:344)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:295)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:130)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1479)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:461)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:314)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1129)
	at org.myftp.gattserver.grass3.pages.factories.template.PageFactory.createPage(PageFactory.java:43)
	at org.myftp.gattserver.grass3.GrassUI.init(GrassUI.java:65)
	at com.vaadin.ui.UI.doInit(UI.java:523)
	at com.vaadin.server.AbstractCommunicationManager.getBrowserDetailsUI(AbstractCommunicationManager.java:2457)
	at com.vaadin.server.AbstractCommunicationManager.handleBrowserDetailsRequest(AbstractCommunicationManager.java:2352)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:325)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:201)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:669)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1448)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:118)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:45)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(BasicAuthenticationFilter.java:150)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:183)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:192)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:160)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1419)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:455)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:557)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1075)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:384)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1009)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:255)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:154)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)
	at org.eclipse.jetty.server.Server.handle(Server.java:368)
	at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:488)
	at org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:932)
	at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:994)
	at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:640)
	at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235)
	at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:628)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)
	at java.lang.Thread.run(Thread.java:722)
Caused by: org.h2.jdbc.JdbcSQLException: The connection was not closed by the application and is garbage collected [90018-168]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:329)
	... 96 more
03-03 11:35:51 jdbc: java.lang.Exception: Open Stack Trace
	at org.h2.util.CloseWatcher.register(CloseWatcher.java:93)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:120)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:92)
	at org.h2.Driver.connect(Driver.java:72)
	at java.sql.DriverManager.getConnection(DriverManager.java:579)
	at java.sql.DriverManager.getConnection(DriverManager.java:190)
	at org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl.getConnection(DriverManagerConnectionProviderImpl.java:173)
	at org.hibernate.internal.AbstractSessionImpl$NonContextualJdbcConnectionAccess.obtainConnection(AbstractSessionImpl.java:276)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:297)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.getConnection(LogicalConnectionImpl.java:169)
	at org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:67)
	at org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:160)
	at org.hibernate.internal.SessionImpl.beginTransaction(SessionImpl.java:1263)
	at org.myftp.gattserver.grass3.model.AbstractDAO.findByID(AbstractDAO.java:133)
	at org.myftp.gattserver.grass3.facades.NodeFacade.getNodeById(NodeFacade.java:30)
	at org.myftp.gattserver.grass3.pages.template.ContentsTableFactory$ContentsTable.populateTable(ContentsTableFactory.java:118)
	at org.myftp.gattserver.grass3.pages.HomePage.createRecentMenus(HomePage.java:244)
	at org.myftp.gattserver.grass3.pages.HomePage.createContent(HomePage.java:99)
	at org.myftp.gattserver.grass3.pages.template.GrassPage.init(GrassPage.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:344)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:295)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:130)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1479)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:461)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:314)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1129)
	at org.myftp.gattserver.grass3.pages.factories.template.PageFactory.createPage(PageFactory.java:43)
	at org.myftp.gattserver.grass3.GrassUI.init(GrassUI.java:65)
	at com.vaadin.ui.UI.doInit(UI.java:523)
	at com.vaadin.server.AbstractCommunicationManager.getBrowserDetailsUI(AbstractCommunicationManager.java:2457)
	at com.vaadin.server.AbstractCommunicationManager.handleBrowserDetailsRequest(AbstractCommunicationManager.java:2352)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:325)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:201)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:669)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1448)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:118)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:45)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(BasicAuthenticationFilter.java:150)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:183)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:192)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:160)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1419)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:455)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:557)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1075)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:384)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1009)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:255)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:154)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)
	at org.eclipse.jetty.server.Server.handle(Server.java:368)
	at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:488)
	at org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:932)
	at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:994)
	at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:640)
	at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235)
	at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:628)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)
	at java.lang.Thread.run(Thread.java:722)

org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-168]
	at org.h2.message.DbException.get(DbException.java:169)
	at org.h2.message.DbException.get(DbException.java:146)
	at org.h2.message.DbException.get(DbException.java:135)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:172)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:119)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:92)
	at org.h2.Driver.connect(Driver.java:72)
	at java.sql.DriverManager.getConnection(DriverManager.java:579)
	at java.sql.DriverManager.getConnection(DriverManager.java:190)
	at org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl.getConnection(DriverManagerConnectionProviderImpl.java:173)
	at org.hibernate.internal.AbstractSessionImpl$NonContextualJdbcConnectionAccess.obtainConnection(AbstractSessionImpl.java:276)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:297)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.getConnection(LogicalConnectionImpl.java:169)
	at org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:67)
	at org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:160)
	at org.hibernate.internal.SessionImpl.beginTransaction(SessionImpl.java:1263)
	at org.myftp.gattserver.grass3.model.AbstractDAO.findAll(AbstractDAO.java:102)
	at org.myftp.gattserver.grass3.facades.ContentTagFacade.getAllContentTags(ContentTagFacade.java:34)
	at org.myftp.gattserver.grass3.pages.HomePage.createTagCloud(HomePage.java:117)
	at org.myftp.gattserver.grass3.pages.HomePage.createContent(HomePage.java:102)
	at org.myftp.gattserver.grass3.pages.template.GrassPage.init(GrassPage.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:344)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:295)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:130)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1479)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:461)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:314)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1129)
	at org.myftp.gattserver.grass3.pages.factories.template.PageFactory.createPage(PageFactory.java:43)
	at org.myftp.gattserver.grass3.GrassUI.init(GrassUI.java:65)
	at com.vaadin.ui.UI.doInit(UI.java:523)
	at com.vaadin.server.AbstractCommunicationManager.getBrowserDetailsUI(AbstractCommunicationManager.java:2457)
	at com.vaadin.server.AbstractCommunicationManager.handleBrowserDetailsRequest(AbstractCommunicationManager.java:2352)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:325)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:201)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:669)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1448)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:118)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:45)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(BasicAuthenticationFilter.java:150)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:183)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:192)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:160)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1419)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:455)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:557)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1075)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:384)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1009)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:255)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:154)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)
	at org.eclipse.jetty.server.Server.handle(Server.java:368)
	at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:488)
	at org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:932)
	at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:994)
	at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:640)
	at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235)
	at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:628)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)
	at java.lang.Thread.run(Thread.java:722)
Caused by: org.h2.jdbc.JdbcSQLException: The connection was not closed by the application and is garbage collected [90018-168]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:329)
	... 96 more
03-03 11:35:51 jdbc: 
/**/conn83.getAutoCommit();
03-03 11:35:51 jdbc: 
/**/conn83.setAutoCommit(false);
03-03 11:35:51 jdbc: SESSION_SET_AUTOCOMMIT 0
03-03 11:35:51 jdbc: 
/**/conn83.getAutoCommit();
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep874 = conn83.prepareStatement("select this_.id as id2_0_, this_.name as name2_0_ from CONTENT_TAG this_");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 0
03-03 11:35:51 jdbc: 
/**/ResultSet rs875 = prep874.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 0
03-03 11:35:51 jdbc: RESULT_CLOSE 1
03-03 11:35:51 jdbc: 
/**/rs875.next();
03-03 11:35:51 jdbc: 
/**/rs875.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.getString("name2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.next();
03-03 11:35:51 jdbc: 
/**/rs875.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.getString("name2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.next();
03-03 11:35:51 jdbc: 
/**/rs875.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.getString("name2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.next();
03-03 11:35:51 jdbc: 
/**/rs875.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.getString("name2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.next();
03-03 11:35:51 jdbc: 
/**/rs875.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.getString("name2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.next();
03-03 11:35:51 jdbc: 
/**/rs875.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.getString("name2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.next();
03-03 11:35:51 jdbc: 
/**/rs875.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.getString("name2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.next();
03-03 11:35:51 jdbc: 
/**/rs875.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.getString("name2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.next();
03-03 11:35:51 jdbc: 
/**/rs875.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.getString("name2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.next();
03-03 11:35:51 jdbc: 
/**/rs875.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.getString("name2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.next();
03-03 11:35:51 jdbc: 
/**/rs875.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.getString("name2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.next();
03-03 11:35:51 jdbc: 
/**/rs875.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.getString("name2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.next();
03-03 11:35:51 jdbc: 
/**/rs875.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.getString("name2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.next();
03-03 11:35:51 jdbc: 
/**/rs875.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.getString("name2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.next();
03-03 11:35:51 jdbc: 
/**/rs875.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.getString("name2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.next();
03-03 11:35:51 jdbc: 
/**/rs875.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.getString("name2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.next();
03-03 11:35:51 jdbc: 
/**/rs875.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.getString("name2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.next();
03-03 11:35:51 jdbc: 
/**/rs875.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.getString("name2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.next();
03-03 11:35:51 jdbc: 
/**/rs875.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.getString("name2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.next();
03-03 11:35:51 jdbc: 
/**/rs875.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.getString("name2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.next();
03-03 11:35:51 jdbc: 
/**/rs875.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.getString("name2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.next();
03-03 11:35:51 jdbc: 
/**/rs875.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.getString("name2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.next();
03-03 11:35:51 jdbc: 
/**/rs875.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.getString("name2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.next();
03-03 11:35:51 jdbc: 
/**/rs875.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.getString("name2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.next();
03-03 11:35:51 jdbc: 
/**/rs875.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.getString("name2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.next();
03-03 11:35:51 jdbc: 
/**/rs875.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.getString("name2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.next();
03-03 11:35:51 jdbc: 
/**/rs875.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.getString("name2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.next();
03-03 11:35:51 jdbc: 
/**/rs875.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.getString("name2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.next();
03-03 11:35:51 jdbc: 
/**/rs875.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.getString("name2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.next();
03-03 11:35:51 jdbc: 
/**/rs875.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.getString("name2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.next();
03-03 11:35:51 jdbc: 
/**/rs875.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.getString("name2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.next();
03-03 11:35:51 jdbc: 
/**/rs875.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.getString("name2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.next();
03-03 11:35:51 jdbc: 
/**/rs875.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.getString("name2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.next();
03-03 11:35:51 jdbc: 
/**/rs875.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.getString("name2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.next();
03-03 11:35:51 jdbc: 
/**/rs875.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.getString("name2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.next();
03-03 11:35:51 jdbc: 
/**/rs875.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.getString("name2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.next();
03-03 11:35:51 jdbc: 
/**/rs875.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.getString("name2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.next();
03-03 11:35:51 jdbc: 
/**/rs875.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.getString("name2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.next();
03-03 11:35:51 jdbc: 
/**/rs875.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.getString("name2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.next();
03-03 11:35:51 jdbc: 
/**/rs875.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.getString("name2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.next();
03-03 11:35:51 jdbc: 
/**/rs875.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.getString("name2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.next();
03-03 11:35:51 jdbc: 
/**/rs875.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.getString("name2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.next();
03-03 11:35:51 jdbc: 
/**/rs875.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.getString("name2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.next();
03-03 11:35:51 jdbc: 
/**/rs875.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.getString("name2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.next();
03-03 11:35:51 jdbc: 
/**/rs875.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.getString("name2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.next();
03-03 11:35:51 jdbc: 
/**/rs875.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.getString("name2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.next();
03-03 11:35:51 jdbc: 
/**/rs875.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.getString("name2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.next();
03-03 11:35:51 jdbc: 
/**/rs875.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.getString("name2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.next();
03-03 11:35:51 jdbc: 
/**/rs875.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.getString("name2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.next();
03-03 11:35:51 jdbc: 
/**/rs875.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.getString("name2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.next();
03-03 11:35:51 jdbc: 
/**/rs875.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.getString("name2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.next();
03-03 11:35:51 jdbc: 
/**/rs875.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.getString("name2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.next();
03-03 11:35:51 jdbc: 
/**/rs875.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.getString("name2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.next();
03-03 11:35:51 jdbc: 
/**/rs875.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.getString("name2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.next();
03-03 11:35:51 jdbc: 
/**/rs875.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.getString("name2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.next();
03-03 11:35:51 jdbc: 
/**/rs875.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.getString("name2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.next();
03-03 11:35:51 jdbc: 
/**/rs875.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.getString("name2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.next();
03-03 11:35:51 jdbc: 
/**/rs875.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.getString("name2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.next();
03-03 11:35:51 jdbc: 
/**/rs875.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.getString("name2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.next();
03-03 11:35:51 jdbc: 
/**/rs875.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.getString("name2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.next();
03-03 11:35:51 jdbc: 
/**/rs875.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.getString("name2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.next();
03-03 11:35:51 jdbc: 
/**/rs875.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.getString("name2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.next();
03-03 11:35:51 jdbc: 
/**/rs875.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.getString("name2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.next();
03-03 11:35:51 jdbc: 
/**/rs875.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.getString("name2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.next();
03-03 11:35:51 jdbc: 
/**/rs875.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.getString("name2_0_");
03-03 11:35:51 jdbc: 
/**/rs875.wasNull();
03-03 11:35:51 jdbc: 
/**/rs875.next();
03-03 11:35:51 jdbc: 
/**/rs875.close();
03-03 11:35:51 jdbc: 
/**/prep874.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep874.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 2
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 2
03-03 11:35:51 jdbc: RESULT_CLOSE 3
03-03 11:35:51 jdbc: 
/**/prep874.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 0
03-03 11:35:51 jdbc: 
/**/conn83.commit();
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 4
03-03 11:35:51 jdbc: COMMAND_EXECUTE_UPDATE 4
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep875 = conn83.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 5
03-03 11:35:51 jdbc: 
/**/prep875.setLong(1, 9L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs876 = prep875.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 5
03-03 11:35:51 jdbc: RESULT_CLOSE 6
03-03 11:35:51 jdbc: 
/**/rs876.next();
03-03 11:35:51 jdbc: 
/**/rs876.getLong("id1_0_");
03-03 11:35:51 jdbc: 
/**/rs876.wasNull();
03-03 11:35:51 jdbc: 
/**/rs876.getLong("id0_1_");
03-03 11:35:51 jdbc: 
/**/rs876.wasNull();
03-03 11:35:51 jdbc: 
/**/rs876.getLong("id4_2_");
03-03 11:35:51 jdbc: 
/**/rs876.wasNull();
03-03 11:35:51 jdbc: 
/**/rs876.getLong("id4_3_");
03-03 11:35:51 jdbc: 
/**/rs876.wasNull();
03-03 11:35:51 jdbc: 
/**/rs876.getLong("author8_1_0_");
03-03 11:35:51 jdbc: 
/**/rs876.wasNull();
03-03 11:35:51 jdbc: 
/**/rs876.getLong("contentId1_0_");
03-03 11:35:51 jdbc: 
/**/rs876.wasNull();
03-03 11:35:51 jdbc: 
/**/rs876.getString("contentR3_1_0_");
03-03 11:35:51 jdbc: 
/**/rs876.wasNull();
03-03 11:35:51 jdbc: 
/**/rs876.getTimestamp("creation4_1_0_");
03-03 11:35:51 jdbc: 
/**/rs876.wasNull();
03-03 11:35:51 jdbc: 
/**/rs876.getTimestamp("lastModi5_1_0_");
03-03 11:35:51 jdbc: 
/**/rs876.wasNull();
03-03 11:35:51 jdbc: 
/**/rs876.getString("name1_0_");
03-03 11:35:51 jdbc: 
/**/rs876.wasNull();
03-03 11:35:51 jdbc: 
/**/rs876.getLong("parent9_1_0_");
03-03 11:35:51 jdbc: 
/**/rs876.wasNull();
03-03 11:35:51 jdbc: 
/**/rs876.getBoolean("publicated1_0_");
03-03 11:35:51 jdbc: 
/**/rs876.wasNull();
03-03 11:35:51 jdbc: 
/**/rs876.getBoolean("confirmed0_1_");
03-03 11:35:51 jdbc: 
/**/rs876.wasNull();
03-03 11:35:51 jdbc: 
/**/rs876.getString("email0_1_");
03-03 11:35:51 jdbc: 
/**/rs876.wasNull();
03-03 11:35:51 jdbc: 
/**/rs876.getTimestamp("LAST4_0_1_");
03-03 11:35:51 jdbc: 
/**/rs876.getString("name0_1_");
03-03 11:35:51 jdbc: 
/**/rs876.wasNull();
03-03 11:35:51 jdbc: 
/**/rs876.getString("password0_1_");
03-03 11:35:51 jdbc: 
/**/rs876.wasNull();
03-03 11:35:51 jdbc: 
/**/rs876.getTimestamp("REGISTRA7_0_1_");
03-03 11:35:51 jdbc: 
/**/rs876.wasNull();
03-03 11:35:51 jdbc: 
/**/rs876.getString("name4_2_");
03-03 11:35:51 jdbc: 
/**/rs876.wasNull();
03-03 11:35:51 jdbc: 
/**/rs876.getLong("parent3_4_2_");
03-03 11:35:51 jdbc: 
/**/rs876.wasNull();
03-03 11:35:51 jdbc: 
/**/rs876.getString("name4_3_");
03-03 11:35:51 jdbc: 
/**/rs876.wasNull();
03-03 11:35:51 jdbc: 
/**/rs876.getLong("parent3_4_3_");
03-03 11:35:51 jdbc: 
/**/rs876.wasNull();
03-03 11:35:51 jdbc: 
/**/rs876.getLong("contentT2_2_4_");
03-03 11:35:51 jdbc: 
/**/rs876.wasNull();
03-03 11:35:51 jdbc: 
/**/rs876.getLong("contentN1_4_");
03-03 11:35:51 jdbc: 
/**/rs876.wasNull();
03-03 11:35:51 jdbc: 
/**/rs876.next();
03-03 11:35:51 jdbc: 
/**/rs876.close();
03-03 11:35:51 jdbc: 
/**/prep875.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep875.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 2
03-03 11:35:51 jdbc: RESULT_CLOSE 7
03-03 11:35:51 jdbc: 
/**/prep875.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 5
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep876 = conn83.prepareStatement("select node0_.id as id4_1_, node0_.name as name4_1_, node0_.parent_id as parent3_4_1_, node1_.id as id4_0_, node1_.name as name4_0_, node1_.parent_id as parent3_4_0_ from NODE node0_ left outer join NODE node1_ on node0_.parent_id=node1_.id where node0_.id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 8
03-03 11:35:51 jdbc: 
/**/prep876.setLong(1, 1L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs877 = prep876.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 8
03-03 11:35:51 jdbc: RESULT_CLOSE 9
03-03 11:35:51 jdbc: 
/**/rs877.next();
03-03 11:35:51 jdbc: 
/**/rs877.getLong("id4_0_");
03-03 11:35:51 jdbc: 
/**/rs877.wasNull();
03-03 11:35:51 jdbc: 
/**/rs877.getString("name4_1_");
03-03 11:35:51 jdbc: 
/**/rs877.wasNull();
03-03 11:35:51 jdbc: 
/**/rs877.getLong("parent3_4_1_");
03-03 11:35:51 jdbc: 
/**/rs877.wasNull();
03-03 11:35:51 jdbc: 
/**/rs877.next();
03-03 11:35:51 jdbc: 
/**/rs877.close();
03-03 11:35:51 jdbc: 
/**/prep876.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep876.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 2
03-03 11:35:51 jdbc: RESULT_CLOSE 10
03-03 11:35:51 jdbc: 
/**/prep876.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 8
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep877 = conn83.prepareStatement("select roles0_.User_id as User1_0_0_, roles0_.roles as roles0_ from User_roles roles0_ where roles0_.User_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 11
03-03 11:35:51 jdbc: 
/**/prep877.setLong(1, 1L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs878 = prep877.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 11
03-03 11:35:51 jdbc: RESULT_CLOSE 12
03-03 11:35:51 jdbc: 
/**/rs878.next();
03-03 11:35:51 jdbc: 
/**/rs878.getLong("User1_0_0_");
03-03 11:35:51 jdbc: 
/**/rs878.wasNull();
03-03 11:35:51 jdbc: 
/**/rs878.getObject("roles0_");
03-03 11:35:51 jdbc: 
/**/rs878.wasNull();
03-03 11:35:51 jdbc: 
/**/rs878.next();
03-03 11:35:51 jdbc: 
/**/rs878.getLong("User1_0_0_");
03-03 11:35:51 jdbc: 
/**/rs878.wasNull();
03-03 11:35:51 jdbc: 
/**/rs878.getObject("roles0_");
03-03 11:35:51 jdbc: 
/**/rs878.wasNull();
03-03 11:35:51 jdbc: 
/**/rs878.next();
03-03 11:35:51 jdbc: 
/**/rs878.getLong("User1_0_0_");
03-03 11:35:51 jdbc: 
/**/rs878.wasNull();
03-03 11:35:51 jdbc: 
/**/rs878.getObject("roles0_");
03-03 11:35:51 jdbc: 
/**/rs878.wasNull();
03-03 11:35:51 jdbc: 
/**/rs878.next();
03-03 11:35:51 jdbc: 
/**/rs878.getLong("User1_0_0_");
03-03 11:35:51 jdbc: 
/**/rs878.wasNull();
03-03 11:35:51 jdbc: 
/**/rs878.getObject("roles0_");
03-03 11:35:51 jdbc: 
/**/rs878.wasNull();
03-03 11:35:51 jdbc: 
/**/rs878.next();
03-03 11:35:51 jdbc: 
/**/rs878.getLong("User1_0_0_");
03-03 11:35:51 jdbc: 
/**/rs878.wasNull();
03-03 11:35:51 jdbc: 
/**/rs878.getObject("roles0_");
03-03 11:35:51 jdbc: 
/**/rs878.wasNull();
03-03 11:35:51 jdbc: 
/**/rs878.next();
03-03 11:35:51 jdbc: 
/**/rs878.close();
03-03 11:35:51 jdbc: 
/**/prep877.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep877.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 2
03-03 11:35:51 jdbc: RESULT_CLOSE 13
03-03 11:35:51 jdbc: 
/**/prep877.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 11
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep878 = conn83.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 14
03-03 11:35:51 jdbc: 
/**/prep878.setLong(1, 4L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs879 = prep878.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 14
03-03 11:35:51 jdbc: RESULT_CLOSE 15
03-03 11:35:51 jdbc: 
/**/rs879.next();
03-03 11:35:51 jdbc: 
/**/rs879.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs879.wasNull();
03-03 11:35:51 jdbc: 
/**/rs879.getLong("contentN1_1_1_");
03-03 11:35:51 jdbc: 
/**/rs879.wasNull();
03-03 11:35:51 jdbc: 
/**/rs879.getLong("contentT2_1_");
03-03 11:35:51 jdbc: 
/**/rs879.wasNull();
03-03 11:35:51 jdbc: 
/**/rs879.next();
03-03 11:35:51 jdbc: 
/**/rs879.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs879.wasNull();
03-03 11:35:51 jdbc: 
/**/rs879.getLong("contentN1_1_1_");
03-03 11:35:51 jdbc: 
/**/rs879.wasNull();
03-03 11:35:51 jdbc: 
/**/rs879.getLong("contentT2_1_");
03-03 11:35:51 jdbc: 
/**/rs879.wasNull();
03-03 11:35:51 jdbc: 
/**/rs879.next();
03-03 11:35:51 jdbc: 
/**/rs879.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs879.wasNull();
03-03 11:35:51 jdbc: 
/**/rs879.getLong("contentN1_1_1_");
03-03 11:35:51 jdbc: 
/**/rs879.wasNull();
03-03 11:35:51 jdbc: 
/**/rs879.getLong("contentT2_1_");
03-03 11:35:51 jdbc: 
/**/rs879.wasNull();
03-03 11:35:51 jdbc: 
/**/rs879.next();
03-03 11:35:51 jdbc: 
/**/rs879.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs879.wasNull();
03-03 11:35:51 jdbc: 
/**/rs879.getLong("contentN1_1_1_");
03-03 11:35:51 jdbc: 
/**/rs879.wasNull();
03-03 11:35:51 jdbc: 
/**/rs879.getLong("contentT2_1_");
03-03 11:35:51 jdbc: 
/**/rs879.wasNull();
03-03 11:35:51 jdbc: 
/**/rs879.next();
03-03 11:35:51 jdbc: 
/**/rs879.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs879.wasNull();
03-03 11:35:51 jdbc: 
/**/rs879.getLong("contentN1_1_1_");
03-03 11:35:51 jdbc: 
/**/rs879.wasNull();
03-03 11:35:51 jdbc: 
/**/rs879.getLong("contentT2_1_");
03-03 11:35:51 jdbc: 
/**/rs879.wasNull();
03-03 11:35:51 jdbc: 
/**/rs879.next();
03-03 11:35:51 jdbc: 
/**/rs879.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs879.wasNull();
03-03 11:35:51 jdbc: 
/**/rs879.getLong("contentN1_1_1_");
03-03 11:35:51 jdbc: 
/**/rs879.wasNull();
03-03 11:35:51 jdbc: 
/**/rs879.getLong("contentT2_1_");
03-03 11:35:51 jdbc: 
/**/rs879.wasNull();
03-03 11:35:51 jdbc: 
/**/rs879.next();
03-03 11:35:51 jdbc: 
/**/rs879.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs879.wasNull();
03-03 11:35:51 jdbc: 
/**/rs879.getLong("contentN1_1_1_");
03-03 11:35:51 jdbc: 
/**/rs879.wasNull();
03-03 11:35:51 jdbc: 
/**/rs879.getLong("contentT2_1_");
03-03 11:35:51 jdbc: 
/**/rs879.wasNull();
03-03 11:35:51 jdbc: 
/**/rs879.next();
03-03 11:35:51 jdbc: 
/**/rs879.close();
03-03 11:35:51 jdbc: 
/**/prep878.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep878.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 2
03-03 11:35:51 jdbc: RESULT_CLOSE 16
03-03 11:35:51 jdbc: 
/**/prep878.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 14
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep879 = conn83.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 17
03-03 11:35:51 jdbc: 
/**/prep879.setLong(1, 10L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs880 = prep879.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 17
03-03 11:35:51 jdbc: RESULT_CLOSE 18
03-03 11:35:51 jdbc: 
/**/rs880.next();
03-03 11:35:51 jdbc: 
/**/rs880.getLong("id1_0_");
03-03 11:35:51 jdbc: 
/**/rs880.wasNull();
03-03 11:35:51 jdbc: 
/**/rs880.getLong("id0_1_");
03-03 11:35:51 jdbc: 
/**/rs880.wasNull();
03-03 11:35:51 jdbc: 
/**/rs880.getLong("id4_2_");
03-03 11:35:51 jdbc: 
/**/rs880.wasNull();
03-03 11:35:51 jdbc: 
/**/rs880.getLong("id4_3_");
03-03 11:35:51 jdbc: 
/**/rs880.wasNull();
03-03 11:35:51 jdbc: 
/**/rs880.getLong("contentT2_2_4_");
03-03 11:35:51 jdbc: 
/**/rs880.wasNull();
03-03 11:35:51 jdbc: 
/**/rs880.getLong("contentN1_4_");
03-03 11:35:51 jdbc: 
/**/rs880.wasNull();
03-03 11:35:51 jdbc: 
/**/rs880.next();
03-03 11:35:51 jdbc: 
/**/rs880.close();
03-03 11:35:51 jdbc: 
/**/prep879.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep879.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 2
03-03 11:35:51 jdbc: RESULT_CLOSE 19
03-03 11:35:51 jdbc: 
/**/prep879.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 17
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep880 = conn83.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 20
03-03 11:35:51 jdbc: 
/**/prep880.setLong(1, 11L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs881 = prep880.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 20
03-03 11:35:51 jdbc: RESULT_CLOSE 21
03-03 11:35:51 jdbc: 
/**/rs881.next();
03-03 11:35:51 jdbc: 
/**/rs881.getLong("id1_0_");
03-03 11:35:51 jdbc: 
/**/rs881.wasNull();
03-03 11:35:51 jdbc: 
/**/rs881.getLong("id0_1_");
03-03 11:35:51 jdbc: 
/**/rs881.wasNull();
03-03 11:35:51 jdbc: 
/**/rs881.getLong("id4_2_");
03-03 11:35:51 jdbc: 
/**/rs881.wasNull();
03-03 11:35:51 jdbc: 
/**/rs881.getLong("id4_3_");
03-03 11:35:51 jdbc: 
/**/rs881.wasNull();
03-03 11:35:51 jdbc: 
/**/rs881.getLong("contentT2_2_4_");
03-03 11:35:51 jdbc: 
/**/rs881.wasNull();
03-03 11:35:51 jdbc: 
/**/rs881.getLong("contentN1_4_");
03-03 11:35:51 jdbc: 
/**/rs881.wasNull();
03-03 11:35:51 jdbc: 
/**/rs881.next();
03-03 11:35:51 jdbc: 
/**/rs881.close();
03-03 11:35:51 jdbc: 
/**/prep880.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep880.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 2
03-03 11:35:51 jdbc: RESULT_CLOSE 22
03-03 11:35:51 jdbc: 
/**/prep880.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 20
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep881 = conn83.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 23
03-03 11:35:51 jdbc: 
/**/prep881.setLong(1, 12L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs882 = prep881.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 23
03-03 11:35:51 jdbc: RESULT_CLOSE 24
03-03 11:35:51 jdbc: 
/**/rs882.next();
03-03 11:35:51 jdbc: 
/**/rs882.getLong("id1_0_");
03-03 11:35:51 jdbc: 
/**/rs882.wasNull();
03-03 11:35:51 jdbc: 
/**/rs882.getLong("id0_1_");
03-03 11:35:51 jdbc: 
/**/rs882.wasNull();
03-03 11:35:51 jdbc: 
/**/rs882.getLong("id4_2_");
03-03 11:35:51 jdbc: 
/**/rs882.wasNull();
03-03 11:35:51 jdbc: 
/**/rs882.getLong("id4_3_");
03-03 11:35:51 jdbc: 
/**/rs882.wasNull();
03-03 11:35:51 jdbc: 
/**/rs882.getLong("contentT2_2_4_");
03-03 11:35:51 jdbc: 
/**/rs882.wasNull();
03-03 11:35:51 jdbc: 
/**/rs882.getLong("contentN1_4_");
03-03 11:35:51 jdbc: 
/**/rs882.wasNull();
03-03 11:35:51 jdbc: 
/**/rs882.next();
03-03 11:35:51 jdbc: 
/**/rs882.close();
03-03 11:35:51 jdbc: 
/**/prep881.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep881.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 2
03-03 11:35:51 jdbc: RESULT_CLOSE 25
03-03 11:35:51 jdbc: 
/**/prep881.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 23
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep882 = conn83.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 26
03-03 11:35:51 jdbc: 
/**/prep882.setLong(1, 13L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs883 = prep882.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 26
03-03 11:35:51 jdbc: RESULT_CLOSE 27
03-03 11:35:51 jdbc: 
/**/rs883.next();
03-03 11:35:51 jdbc: 
/**/rs883.getLong("id1_0_");
03-03 11:35:51 jdbc: 
/**/rs883.wasNull();
03-03 11:35:51 jdbc: 
/**/rs883.getLong("id0_1_");
03-03 11:35:51 jdbc: 
/**/rs883.wasNull();
03-03 11:35:51 jdbc: 
/**/rs883.getLong("id4_2_");
03-03 11:35:51 jdbc: 
/**/rs883.wasNull();
03-03 11:35:51 jdbc: 
/**/rs883.getLong("id4_3_");
03-03 11:35:51 jdbc: 
/**/rs883.wasNull();
03-03 11:35:51 jdbc: 
/**/rs883.getLong("contentT2_2_4_");
03-03 11:35:51 jdbc: 
/**/rs883.wasNull();
03-03 11:35:51 jdbc: 
/**/rs883.getLong("contentN1_4_");
03-03 11:35:51 jdbc: 
/**/rs883.wasNull();
03-03 11:35:51 jdbc: 
/**/rs883.next();
03-03 11:35:51 jdbc: 
/**/rs883.close();
03-03 11:35:51 jdbc: 
/**/prep882.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep882.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 2
03-03 11:35:51 jdbc: RESULT_CLOSE 28
03-03 11:35:51 jdbc: 
/**/prep882.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 26
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep883 = conn83.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 29
03-03 11:35:51 jdbc: 
/**/prep883.setLong(1, 15L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs884 = prep883.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 29
03-03 11:35:51 jdbc: RESULT_CLOSE 30
03-03 11:35:51 jdbc: 
/**/rs884.next();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("id1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("id0_1_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("id4_2_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("id4_3_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("contentT2_2_4_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("contentN1_4_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.next();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("id1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("id0_1_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("id4_2_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("id4_3_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("author8_1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("contentId1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getString("contentR3_1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getTimestamp("creation4_1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getTimestamp("lastModi5_1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getString("name1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("parent9_1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getBoolean("publicated1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("contentT2_2_4_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("contentN1_4_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.next();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("id1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("id0_1_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("id4_2_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("id4_3_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("author8_1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("contentId1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getString("contentR3_1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getTimestamp("creation4_1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getTimestamp("lastModi5_1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getString("name1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("parent9_1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getBoolean("publicated1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("contentT2_2_4_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("contentN1_4_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.next();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("id1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("id0_1_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("id4_2_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("id4_3_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("author8_1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("contentId1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getString("contentR3_1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getTimestamp("creation4_1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getTimestamp("lastModi5_1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getString("name1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("parent9_1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getBoolean("publicated1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("contentT2_2_4_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("contentN1_4_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.next();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("id1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("id0_1_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("id4_2_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("id4_3_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("author8_1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("contentId1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getString("contentR3_1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getTimestamp("creation4_1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getTimestamp("lastModi5_1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getString("name1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("parent9_1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getBoolean("publicated1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("contentT2_2_4_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("contentN1_4_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.next();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("id1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("id0_1_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("id4_2_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("id4_3_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("author8_1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("contentId1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getString("contentR3_1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getTimestamp("creation4_1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getTimestamp("lastModi5_1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getString("name1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("parent9_1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getBoolean("publicated1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("contentT2_2_4_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("contentN1_4_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.next();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("id1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("id0_1_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("id4_2_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("id4_3_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("author8_1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("contentId1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getString("contentR3_1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getTimestamp("creation4_1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getTimestamp("lastModi5_1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getString("name1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("parent9_1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getBoolean("publicated1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("contentT2_2_4_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("contentN1_4_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.next();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("id1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("id0_1_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("id4_2_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("id4_3_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("author8_1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("contentId1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getString("contentR3_1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getTimestamp("creation4_1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getTimestamp("lastModi5_1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getString("name1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("parent9_1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getBoolean("publicated1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("contentT2_2_4_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("contentN1_4_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.next();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("id1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("id0_1_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("id4_2_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("id4_3_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("author8_1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("contentId1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getString("contentR3_1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getTimestamp("creation4_1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getTimestamp("lastModi5_1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getString("name1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("parent9_1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getBoolean("publicated1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("contentT2_2_4_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("contentN1_4_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.next();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("id1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("id0_1_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("id4_2_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("id4_3_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("author8_1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("contentId1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getString("contentR3_1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getTimestamp("creation4_1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getTimestamp("lastModi5_1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getString("name1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("parent9_1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getBoolean("publicated1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("contentT2_2_4_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("contentN1_4_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.next();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("id1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("id0_1_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("id4_2_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("id4_3_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("author8_1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("contentId1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getString("contentR3_1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getTimestamp("creation4_1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getTimestamp("lastModi5_1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getString("name1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("parent9_1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getBoolean("publicated1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("contentT2_2_4_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("contentN1_4_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.next();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("id1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("id0_1_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("id4_2_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("id4_3_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("author8_1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("contentId1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getString("contentR3_1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getTimestamp("creation4_1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getTimestamp("lastModi5_1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getString("name1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("parent9_1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getBoolean("publicated1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("contentT2_2_4_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("contentN1_4_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.next();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("id1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("id0_1_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("id4_2_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("id4_3_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("author8_1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("contentId1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getString("contentR3_1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getTimestamp("creation4_1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getTimestamp("lastModi5_1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getString("name1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("parent9_1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getBoolean("publicated1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("contentT2_2_4_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("contentN1_4_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.next();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("id1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("id0_1_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("id4_2_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("id4_3_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("author8_1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("contentId1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getString("contentR3_1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getTimestamp("creation4_1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getTimestamp("lastModi5_1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getString("name1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("parent9_1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getBoolean("publicated1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("contentT2_2_4_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("contentN1_4_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.next();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("id1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("id0_1_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("id4_2_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("id4_3_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("author8_1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("contentId1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getString("contentR3_1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getTimestamp("creation4_1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getTimestamp("lastModi5_1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getString("name1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("parent9_1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getBoolean("publicated1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("contentT2_2_4_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("contentN1_4_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.next();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("id1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("id0_1_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("id4_2_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("id4_3_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("author8_1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("contentId1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getString("contentR3_1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getTimestamp("creation4_1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getTimestamp("lastModi5_1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getString("name1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("parent9_1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getBoolean("publicated1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("contentT2_2_4_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("contentN1_4_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.next();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("id1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("id0_1_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("id4_2_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("id4_3_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("author8_1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("contentId1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getString("contentR3_1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getTimestamp("creation4_1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getTimestamp("lastModi5_1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getString("name1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("parent9_1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getBoolean("publicated1_0_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("contentT2_2_4_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.getLong("contentN1_4_");
03-03 11:35:51 jdbc: 
/**/rs884.wasNull();
03-03 11:35:51 jdbc: 
/**/rs884.next();
03-03 11:35:51 jdbc: 
/**/rs884.close();
03-03 11:35:51 jdbc: 
/**/prep883.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep883.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 2
03-03 11:35:51 jdbc: RESULT_CLOSE 31
03-03 11:35:51 jdbc: 
/**/prep883.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 29
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep884 = conn83.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 32
03-03 11:35:51 jdbc: 
/**/prep884.setLong(1, 6L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs885 = prep884.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 32
03-03 11:35:51 jdbc: RESULT_CLOSE 33
03-03 11:35:51 jdbc: 
/**/rs885.next();
03-03 11:35:51 jdbc: 
/**/rs885.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs885.wasNull();
03-03 11:35:51 jdbc: 
/**/rs885.getLong("contentN1_1_1_");
03-03 11:35:51 jdbc: 
/**/rs885.wasNull();
03-03 11:35:51 jdbc: 
/**/rs885.getLong("contentT2_1_");
03-03 11:35:51 jdbc: 
/**/rs885.wasNull();
03-03 11:35:51 jdbc: 
/**/rs885.next();
03-03 11:35:51 jdbc: 
/**/rs885.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs885.wasNull();
03-03 11:35:51 jdbc: 
/**/rs885.getLong("contentN1_1_1_");
03-03 11:35:51 jdbc: 
/**/rs885.wasNull();
03-03 11:35:51 jdbc: 
/**/rs885.getLong("contentT2_1_");
03-03 11:35:51 jdbc: 
/**/rs885.wasNull();
03-03 11:35:51 jdbc: 
/**/rs885.next();
03-03 11:35:51 jdbc: 
/**/rs885.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs885.wasNull();
03-03 11:35:51 jdbc: 
/**/rs885.getLong("contentN1_1_1_");
03-03 11:35:51 jdbc: 
/**/rs885.wasNull();
03-03 11:35:51 jdbc: 
/**/rs885.getLong("contentT2_1_");
03-03 11:35:51 jdbc: 
/**/rs885.wasNull();
03-03 11:35:51 jdbc: 
/**/rs885.next();
03-03 11:35:51 jdbc: 
/**/rs885.close();
03-03 11:35:51 jdbc: 
/**/prep884.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep884.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 2
03-03 11:35:51 jdbc: RESULT_CLOSE 34
03-03 11:35:51 jdbc: 
/**/prep884.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 32
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep885 = conn83.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 35
03-03 11:35:51 jdbc: 
/**/prep885.setLong(1, 7L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs886 = prep885.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 35
03-03 11:35:51 jdbc: RESULT_CLOSE 36
03-03 11:35:51 jdbc: 
/**/rs886.next();
03-03 11:35:51 jdbc: 
/**/rs886.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs886.wasNull();
03-03 11:35:51 jdbc: 
/**/rs886.getLong("contentN1_1_1_");
03-03 11:35:51 jdbc: 
/**/rs886.wasNull();
03-03 11:35:51 jdbc: 
/**/rs886.getLong("contentT2_1_");
03-03 11:35:51 jdbc: 
/**/rs886.wasNull();
03-03 11:35:51 jdbc: 
/**/rs886.next();
03-03 11:35:51 jdbc: 
/**/rs886.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs886.wasNull();
03-03 11:35:51 jdbc: 
/**/rs886.getLong("contentN1_1_1_");
03-03 11:35:51 jdbc: 
/**/rs886.wasNull();
03-03 11:35:51 jdbc: 
/**/rs886.getLong("contentT2_1_");
03-03 11:35:51 jdbc: 
/**/rs886.wasNull();
03-03 11:35:51 jdbc: 
/**/rs886.next();
03-03 11:35:51 jdbc: 
/**/rs886.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs886.wasNull();
03-03 11:35:51 jdbc: 
/**/rs886.getLong("contentN1_1_1_");
03-03 11:35:51 jdbc: 
/**/rs886.wasNull();
03-03 11:35:51 jdbc: 
/**/rs886.getLong("contentT2_1_");
03-03 11:35:51 jdbc: 
/**/rs886.wasNull();
03-03 11:35:51 jdbc: 
/**/rs886.next();
03-03 11:35:51 jdbc: 
/**/rs886.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs886.wasNull();
03-03 11:35:51 jdbc: 
/**/rs886.getLong("contentN1_1_1_");
03-03 11:35:51 jdbc: 
/**/rs886.wasNull();
03-03 11:35:51 jdbc: 
/**/rs886.getLong("contentT2_1_");
03-03 11:35:51 jdbc: 
/**/rs886.wasNull();
03-03 11:35:51 jdbc: 
/**/rs886.next();
03-03 11:35:51 jdbc: 
/**/rs886.close();
03-03 11:35:51 jdbc: 
/**/prep885.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep885.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 2
03-03 11:35:51 jdbc: RESULT_CLOSE 37
03-03 11:35:51 jdbc: 
/**/prep885.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 35
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep886 = conn83.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 38
03-03 11:35:51 jdbc: 
/**/prep886.setLong(1, 11L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs887 = prep886.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 38
03-03 11:35:51 jdbc: RESULT_CLOSE 39
03-03 11:35:51 jdbc: 
/**/rs887.next();
03-03 11:35:51 jdbc: 
/**/rs887.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs887.wasNull();
03-03 11:35:51 jdbc: 
/**/rs887.getLong("contentN1_1_1_");
03-03 11:35:51 jdbc: 
/**/rs887.wasNull();
03-03 11:35:51 jdbc: 
/**/rs887.getLong("contentT2_1_");
03-03 11:35:51 jdbc: 
/**/rs887.wasNull();
03-03 11:35:51 jdbc: 
/**/rs887.next();
03-03 11:35:51 jdbc: 
/**/rs887.close();
03-03 11:35:51 jdbc: 
/**/prep886.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep886.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 2
03-03 11:35:51 jdbc: RESULT_CLOSE 40
03-03 11:35:51 jdbc: 
/**/prep886.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 38
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep887 = conn83.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 41
03-03 11:35:51 jdbc: 
/**/prep887.setLong(1, 12L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs888 = prep887.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 41
03-03 11:35:51 jdbc: RESULT_CLOSE 42
03-03 11:35:51 jdbc: 
/**/rs888.next();
03-03 11:35:51 jdbc: 
/**/rs888.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs888.wasNull();
03-03 11:35:51 jdbc: 
/**/rs888.getLong("contentN1_1_1_");
03-03 11:35:51 jdbc: 
/**/rs888.wasNull();
03-03 11:35:51 jdbc: 
/**/rs888.getLong("contentT2_1_");
03-03 11:35:51 jdbc: 
/**/rs888.wasNull();
03-03 11:35:51 jdbc: 
/**/rs888.next();
03-03 11:35:51 jdbc: 
/**/rs888.close();
03-03 11:35:51 jdbc: 
/**/prep887.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep887.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 2
03-03 11:35:51 jdbc: RESULT_CLOSE 43
03-03 11:35:51 jdbc: 
/**/prep887.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 41
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep888 = conn83.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 44
03-03 11:35:51 jdbc: 
/**/prep888.setLong(1, 13L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs889 = prep888.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 44
03-03 11:35:51 jdbc: RESULT_CLOSE 45
03-03 11:35:51 jdbc: 
/**/rs889.next();
03-03 11:35:51 jdbc: 
/**/rs889.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs889.wasNull();
03-03 11:35:51 jdbc: 
/**/rs889.getLong("contentN1_1_1_");
03-03 11:35:51 jdbc: 
/**/rs889.wasNull();
03-03 11:35:51 jdbc: 
/**/rs889.getLong("contentT2_1_");
03-03 11:35:51 jdbc: 
/**/rs889.wasNull();
03-03 11:35:51 jdbc: 
/**/rs889.next();
03-03 11:35:51 jdbc: 
/**/rs889.close();
03-03 11:35:51 jdbc: 
/**/prep888.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep888.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 2
03-03 11:35:51 jdbc: RESULT_CLOSE 46
03-03 11:35:51 jdbc: 
/**/prep888.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 44
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep889 = conn83.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 47
03-03 11:35:51 jdbc: 
/**/prep889.setLong(1, 14L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs890 = prep889.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 47
03-03 11:35:51 jdbc: RESULT_CLOSE 48
03-03 11:35:51 jdbc: 
/**/rs890.next();
03-03 11:35:51 jdbc: 
/**/rs890.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs890.wasNull();
03-03 11:35:51 jdbc: 
/**/rs890.getLong("contentN1_1_1_");
03-03 11:35:51 jdbc: 
/**/rs890.wasNull();
03-03 11:35:51 jdbc: 
/**/rs890.getLong("contentT2_1_");
03-03 11:35:51 jdbc: 
/**/rs890.wasNull();
03-03 11:35:51 jdbc: 
/**/rs890.next();
03-03 11:35:51 jdbc: 
/**/rs890.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs890.wasNull();
03-03 11:35:51 jdbc: 
/**/rs890.getLong("contentN1_1_1_");
03-03 11:35:51 jdbc: 
/**/rs890.wasNull();
03-03 11:35:51 jdbc: 
/**/rs890.getLong("contentT2_1_");
03-03 11:35:51 jdbc: 
/**/rs890.wasNull();
03-03 11:35:51 jdbc: 
/**/rs890.next();
03-03 11:35:51 jdbc: 
/**/rs890.close();
03-03 11:35:51 jdbc: 
/**/prep889.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep889.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 2
03-03 11:35:51 jdbc: RESULT_CLOSE 49
03-03 11:35:51 jdbc: 
/**/prep889.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 47
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep890 = conn83.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 50
03-03 11:35:51 jdbc: 
/**/prep890.setLong(1, 15L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs891 = prep890.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 50
03-03 11:35:51 jdbc: RESULT_CLOSE 51
03-03 11:35:51 jdbc: 
/**/rs891.next();
03-03 11:35:51 jdbc: 
/**/rs891.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs891.wasNull();
03-03 11:35:51 jdbc: 
/**/rs891.getLong("contentN1_1_1_");
03-03 11:35:51 jdbc: 
/**/rs891.wasNull();
03-03 11:35:51 jdbc: 
/**/rs891.getLong("contentT2_1_");
03-03 11:35:51 jdbc: 
/**/rs891.wasNull();
03-03 11:35:51 jdbc: 
/**/rs891.next();
03-03 11:35:51 jdbc: 
/**/rs891.close();
03-03 11:35:51 jdbc: 
/**/prep890.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep890.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 2
03-03 11:35:51 jdbc: RESULT_CLOSE 52
03-03 11:35:51 jdbc: 
/**/prep890.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 50
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep891 = conn83.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 53
03-03 11:35:51 jdbc: 
/**/prep891.setLong(1, 17L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs892 = prep891.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 53
03-03 11:35:51 jdbc: RESULT_CLOSE 54
03-03 11:35:51 jdbc: 
/**/rs892.next();
03-03 11:35:51 jdbc: 
/**/rs892.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs892.wasNull();
03-03 11:35:51 jdbc: 
/**/rs892.getLong("contentN1_1_1_");
03-03 11:35:51 jdbc: 
/**/rs892.wasNull();
03-03 11:35:51 jdbc: 
/**/rs892.getLong("contentT2_1_");
03-03 11:35:51 jdbc: 
/**/rs892.wasNull();
03-03 11:35:51 jdbc: 
/**/rs892.next();
03-03 11:35:51 jdbc: 
/**/rs892.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs892.wasNull();
03-03 11:35:51 jdbc: 
/**/rs892.getLong("contentN1_1_1_");
03-03 11:35:51 jdbc: 
/**/rs892.wasNull();
03-03 11:35:51 jdbc: 
/**/rs892.getLong("contentT2_1_");
03-03 11:35:51 jdbc: 
/**/rs892.wasNull();
03-03 11:35:51 jdbc: 
/**/rs892.next();
03-03 11:35:51 jdbc: 
/**/rs892.close();
03-03 11:35:51 jdbc: 
/**/prep891.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep891.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 2
03-03 11:35:51 jdbc: RESULT_CLOSE 55
03-03 11:35:51 jdbc: 
/**/prep891.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 53
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep892 = conn83.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 56
03-03 11:35:51 jdbc: 
/**/prep892.setLong(1, 16L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs893 = prep892.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 56
03-03 11:35:51 jdbc: RESULT_CLOSE 57
03-03 11:35:51 jdbc: 
/**/rs893.next();
03-03 11:35:51 jdbc: 
/**/rs893.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs893.wasNull();
03-03 11:35:51 jdbc: 
/**/rs893.getLong("contentN1_1_1_");
03-03 11:35:51 jdbc: 
/**/rs893.wasNull();
03-03 11:35:51 jdbc: 
/**/rs893.getLong("contentT2_1_");
03-03 11:35:51 jdbc: 
/**/rs893.wasNull();
03-03 11:35:51 jdbc: 
/**/rs893.next();
03-03 11:35:51 jdbc: 
/**/rs893.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs893.wasNull();
03-03 11:35:51 jdbc: 
/**/rs893.getLong("contentN1_1_1_");
03-03 11:35:51 jdbc: 
/**/rs893.wasNull();
03-03 11:35:51 jdbc: 
/**/rs893.getLong("contentT2_1_");
03-03 11:35:51 jdbc: 
/**/rs893.wasNull();
03-03 11:35:51 jdbc: 
/**/rs893.next();
03-03 11:35:51 jdbc: 
/**/rs893.close();
03-03 11:35:51 jdbc: 
/**/prep892.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep892.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 2
03-03 11:35:51 jdbc: RESULT_CLOSE 58
03-03 11:35:51 jdbc: 
/**/prep892.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 56
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep893 = conn83.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 59
03-03 11:35:51 jdbc: 
/**/prep893.setLong(1, 19L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs894 = prep893.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 59
03-03 11:35:51 jdbc: RESULT_CLOSE 60
03-03 11:35:51 jdbc: 
/**/rs894.next();
03-03 11:35:51 jdbc: 
/**/rs894.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs894.wasNull();
03-03 11:35:51 jdbc: 
/**/rs894.getLong("contentN1_1_1_");
03-03 11:35:51 jdbc: 
/**/rs894.wasNull();
03-03 11:35:51 jdbc: 
/**/rs894.getLong("contentT2_1_");
03-03 11:35:51 jdbc: 
/**/rs894.wasNull();
03-03 11:35:51 jdbc: 
/**/rs894.next();
03-03 11:35:51 jdbc: 
/**/rs894.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs894.wasNull();
03-03 11:35:51 jdbc: 
/**/rs894.getLong("contentN1_1_1_");
03-03 11:35:51 jdbc: 
/**/rs894.wasNull();
03-03 11:35:51 jdbc: 
/**/rs894.getLong("contentT2_1_");
03-03 11:35:51 jdbc: 
/**/rs894.wasNull();
03-03 11:35:51 jdbc: 
/**/rs894.next();
03-03 11:35:51 jdbc: 
/**/rs894.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs894.wasNull();
03-03 11:35:51 jdbc: 
/**/rs894.getLong("contentN1_1_1_");
03-03 11:35:51 jdbc: 
/**/rs894.wasNull();
03-03 11:35:51 jdbc: 
/**/rs894.getLong("contentT2_1_");
03-03 11:35:51 jdbc: 
/**/rs894.wasNull();
03-03 11:35:51 jdbc: 
/**/rs894.next();
03-03 11:35:51 jdbc: 
/**/rs894.close();
03-03 11:35:51 jdbc: 
/**/prep893.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep893.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 2
03-03 11:35:51 jdbc: RESULT_CLOSE 61
03-03 11:35:51 jdbc: 
/**/prep893.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 59
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep894 = conn83.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 62
03-03 11:35:51 jdbc: 
/**/prep894.setLong(1, 18L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs895 = prep894.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 62
03-03 11:35:51 jdbc: RESULT_CLOSE 63
03-03 11:35:51 jdbc: 
/**/rs895.next();
03-03 11:35:51 jdbc: 
/**/rs895.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs895.wasNull();
03-03 11:35:51 jdbc: 
/**/rs895.getLong("contentN1_1_1_");
03-03 11:35:51 jdbc: 
/**/rs895.wasNull();
03-03 11:35:51 jdbc: 
/**/rs895.getLong("contentT2_1_");
03-03 11:35:51 jdbc: 
/**/rs895.wasNull();
03-03 11:35:51 jdbc: 
/**/rs895.next();
03-03 11:35:51 jdbc: 
/**/rs895.close();
03-03 11:35:51 jdbc: 
/**/prep894.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep894.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 2
03-03 11:35:51 jdbc: RESULT_CLOSE 64
03-03 11:35:51 jdbc: 
/**/prep894.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 62
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep895 = conn83.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 65
03-03 11:35:51 jdbc: 
/**/prep895.setLong(1, 21L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs896 = prep895.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 65
03-03 11:35:51 jdbc: RESULT_CLOSE 66
03-03 11:35:51 jdbc: 
/**/rs896.next();
03-03 11:35:51 jdbc: 
/**/rs896.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs896.wasNull();
03-03 11:35:51 jdbc: 
/**/rs896.getLong("contentN1_1_1_");
03-03 11:35:51 jdbc: 
/**/rs896.wasNull();
03-03 11:35:51 jdbc: 
/**/rs896.getLong("contentT2_1_");
03-03 11:35:51 jdbc: 
/**/rs896.wasNull();
03-03 11:35:51 jdbc: 
/**/rs896.next();
03-03 11:35:51 jdbc: 
/**/rs896.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs896.wasNull();
03-03 11:35:51 jdbc: 
/**/rs896.getLong("contentN1_1_1_");
03-03 11:35:51 jdbc: 
/**/rs896.wasNull();
03-03 11:35:51 jdbc: 
/**/rs896.getLong("contentT2_1_");
03-03 11:35:51 jdbc: 
/**/rs896.wasNull();
03-03 11:35:51 jdbc: 
/**/rs896.next();
03-03 11:35:51 jdbc: 
/**/rs896.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs896.wasNull();
03-03 11:35:51 jdbc: 
/**/rs896.getLong("contentN1_1_1_");
03-03 11:35:51 jdbc: 
/**/rs896.wasNull();
03-03 11:35:51 jdbc: 
/**/rs896.getLong("contentT2_1_");
03-03 11:35:51 jdbc: 
/**/rs896.wasNull();
03-03 11:35:51 jdbc: 
/**/rs896.next();
03-03 11:35:51 jdbc: 
/**/rs896.close();
03-03 11:35:51 jdbc: 
/**/prep895.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep895.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: SESSION_PREPARE 68
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 68
03-03 11:35:51 jdbc: RESULT_CLOSE 67
03-03 11:35:51 jdbc: 
/**/prep895.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 65
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep896 = conn83.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 69
03-03 11:35:51 jdbc: 
/**/prep896.setLong(1, 20L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs897 = prep896.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 69
03-03 11:35:51 jdbc: RESULT_CLOSE 70
03-03 11:35:51 jdbc: 
/**/rs897.next();
03-03 11:35:51 jdbc: 
/**/rs897.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs897.wasNull();
03-03 11:35:51 jdbc: 
/**/rs897.getLong("contentN1_1_1_");
03-03 11:35:51 jdbc: 
/**/rs897.wasNull();
03-03 11:35:51 jdbc: 
/**/rs897.getLong("contentT2_1_");
03-03 11:35:51 jdbc: 
/**/rs897.wasNull();
03-03 11:35:51 jdbc: 
/**/rs897.next();
03-03 11:35:51 jdbc: 
/**/rs897.close();
03-03 11:35:51 jdbc: 
/**/prep896.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep896.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 68
03-03 11:35:51 jdbc: RESULT_CLOSE 71
03-03 11:35:51 jdbc: 
/**/prep896.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 69
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep897 = conn83.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 72
03-03 11:35:51 jdbc: 
/**/prep897.setLong(1, 23L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs898 = prep897.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 72
03-03 11:35:51 jdbc: RESULT_CLOSE 73
03-03 11:35:51 jdbc: 
/**/rs898.next();
03-03 11:35:51 jdbc: 
/**/rs898.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs898.wasNull();
03-03 11:35:51 jdbc: 
/**/rs898.getLong("contentN1_1_1_");
03-03 11:35:51 jdbc: 
/**/rs898.wasNull();
03-03 11:35:51 jdbc: 
/**/rs898.getLong("contentT2_1_");
03-03 11:35:51 jdbc: 
/**/rs898.wasNull();
03-03 11:35:51 jdbc: 
/**/rs898.next();
03-03 11:35:51 jdbc: 
/**/rs898.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs898.wasNull();
03-03 11:35:51 jdbc: 
/**/rs898.getLong("contentN1_1_1_");
03-03 11:35:51 jdbc: 
/**/rs898.wasNull();
03-03 11:35:51 jdbc: 
/**/rs898.getLong("contentT2_1_");
03-03 11:35:51 jdbc: 
/**/rs898.wasNull();
03-03 11:35:51 jdbc: 
/**/rs898.next();
03-03 11:35:51 jdbc: 
/**/rs898.close();
03-03 11:35:51 jdbc: 
/**/prep897.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep897.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 68
03-03 11:35:51 jdbc: RESULT_CLOSE 74
03-03 11:35:51 jdbc: 
/**/prep897.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 72
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep898 = conn83.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 75
03-03 11:35:51 jdbc: 
/**/prep898.setLong(1, 22L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs899 = prep898.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 75
03-03 11:35:51 jdbc: RESULT_CLOSE 76
03-03 11:35:51 jdbc: 
/**/rs899.next();
03-03 11:35:51 jdbc: 
/**/rs899.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs899.wasNull();
03-03 11:35:51 jdbc: 
/**/rs899.getLong("contentN1_1_1_");
03-03 11:35:51 jdbc: 
/**/rs899.wasNull();
03-03 11:35:51 jdbc: 
/**/rs899.getLong("contentT2_1_");
03-03 11:35:51 jdbc: 
/**/rs899.wasNull();
03-03 11:35:51 jdbc: 
/**/rs899.next();
03-03 11:35:51 jdbc: 
/**/rs899.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs899.wasNull();
03-03 11:35:51 jdbc: 
/**/rs899.getLong("contentN1_1_1_");
03-03 11:35:51 jdbc: 
/**/rs899.wasNull();
03-03 11:35:51 jdbc: 
/**/rs899.getLong("contentT2_1_");
03-03 11:35:51 jdbc: 
/**/rs899.wasNull();
03-03 11:35:51 jdbc: 
/**/rs899.next();
03-03 11:35:51 jdbc: 
/**/rs899.close();
03-03 11:35:51 jdbc: 
/**/prep898.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep898.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 68
03-03 11:35:51 jdbc: RESULT_CLOSE 77
03-03 11:35:51 jdbc: 
/**/prep898.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 75
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep899 = conn83.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 78
03-03 11:35:51 jdbc: 
/**/prep899.setLong(1, 24L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs900 = prep899.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 78
03-03 11:35:51 jdbc: RESULT_CLOSE 79
03-03 11:35:51 jdbc: 
/**/rs900.next();
03-03 11:35:51 jdbc: 
/**/rs900.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs900.wasNull();
03-03 11:35:51 jdbc: 
/**/rs900.getLong("contentN1_1_1_");
03-03 11:35:51 jdbc: 
/**/rs900.wasNull();
03-03 11:35:51 jdbc: 
/**/rs900.getLong("contentT2_1_");
03-03 11:35:51 jdbc: 
/**/rs900.wasNull();
03-03 11:35:51 jdbc: 
/**/rs900.next();
03-03 11:35:51 jdbc: 
/**/rs900.close();
03-03 11:35:51 jdbc: 
/**/prep899.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep899.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 68
03-03 11:35:51 jdbc: RESULT_CLOSE 80
03-03 11:35:51 jdbc: 
/**/prep899.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 78
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep900 = conn83.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 81
03-03 11:35:51 jdbc: 
/**/prep900.setLong(1, 16L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs901 = prep900.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 81
03-03 11:35:51 jdbc: RESULT_CLOSE 82
03-03 11:35:51 jdbc: 
/**/rs901.next();
03-03 11:35:51 jdbc: 
/**/rs901.getLong("id1_0_");
03-03 11:35:51 jdbc: 
/**/rs901.wasNull();
03-03 11:35:51 jdbc: 
/**/rs901.getLong("id0_1_");
03-03 11:35:51 jdbc: 
/**/rs901.wasNull();
03-03 11:35:51 jdbc: 
/**/rs901.getLong("id4_2_");
03-03 11:35:51 jdbc: 
/**/rs901.wasNull();
03-03 11:35:51 jdbc: 
/**/rs901.getLong("id4_3_");
03-03 11:35:51 jdbc: 
/**/rs901.wasNull();
03-03 11:35:51 jdbc: 
/**/rs901.getLong("contentT2_2_4_");
03-03 11:35:51 jdbc: 
/**/rs901.wasNull();
03-03 11:35:51 jdbc: 
/**/rs901.getLong("contentN1_4_");
03-03 11:35:51 jdbc: 
/**/rs901.wasNull();
03-03 11:35:51 jdbc: 
/**/rs901.next();
03-03 11:35:51 jdbc: 
/**/rs901.close();
03-03 11:35:51 jdbc: 
/**/prep900.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep900.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 68
03-03 11:35:51 jdbc: RESULT_CLOSE 83
03-03 11:35:51 jdbc: 
/**/prep900.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 81
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep901 = conn83.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 84
03-03 11:35:51 jdbc: 
/**/prep901.setLong(1, 17L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs902 = prep901.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 84
03-03 11:35:51 jdbc: RESULT_CLOSE 85
03-03 11:35:51 jdbc: 
/**/rs902.next();
03-03 11:35:51 jdbc: 
/**/rs902.getLong("id1_0_");
03-03 11:35:51 jdbc: 
/**/rs902.wasNull();
03-03 11:35:51 jdbc: 
/**/rs902.getLong("id0_1_");
03-03 11:35:51 jdbc: 
/**/rs902.wasNull();
03-03 11:35:51 jdbc: 
/**/rs902.getLong("id4_2_");
03-03 11:35:51 jdbc: 
/**/rs902.wasNull();
03-03 11:35:51 jdbc: 
/**/rs902.getLong("id4_3_");
03-03 11:35:51 jdbc: 
/**/rs902.wasNull();
03-03 11:35:51 jdbc: 
/**/rs902.getLong("contentT2_2_4_");
03-03 11:35:51 jdbc: 
/**/rs902.wasNull();
03-03 11:35:51 jdbc: 
/**/rs902.getLong("contentN1_4_");
03-03 11:35:51 jdbc: 
/**/rs902.wasNull();
03-03 11:35:51 jdbc: 
/**/rs902.next();
03-03 11:35:51 jdbc: 
/**/rs902.close();
03-03 11:35:51 jdbc: 
/**/prep901.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep901.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 68
03-03 11:35:51 jdbc: RESULT_CLOSE 86
03-03 11:35:51 jdbc: 
/**/prep901.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 84
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep902 = conn83.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 87
03-03 11:35:51 jdbc: 
/**/prep902.setLong(1, 19L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs903 = prep902.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 87
03-03 11:35:51 jdbc: RESULT_CLOSE 88
03-03 11:35:51 jdbc: 
/**/rs903.next();
03-03 11:35:51 jdbc: 
/**/rs903.getLong("id1_0_");
03-03 11:35:51 jdbc: 
/**/rs903.wasNull();
03-03 11:35:51 jdbc: 
/**/rs903.getLong("id0_1_");
03-03 11:35:51 jdbc: 
/**/rs903.wasNull();
03-03 11:35:51 jdbc: 
/**/rs903.getLong("id4_2_");
03-03 11:35:51 jdbc: 
/**/rs903.wasNull();
03-03 11:35:51 jdbc: 
/**/rs903.getLong("id4_3_");
03-03 11:35:51 jdbc: 
/**/rs903.wasNull();
03-03 11:35:51 jdbc: 
/**/rs903.getLong("contentT2_2_4_");
03-03 11:35:51 jdbc: 
/**/rs903.wasNull();
03-03 11:35:51 jdbc: 
/**/rs903.getLong("contentN1_4_");
03-03 11:35:51 jdbc: 
/**/rs903.wasNull();
03-03 11:35:51 jdbc: 
/**/rs903.next();
03-03 11:35:51 jdbc: 
/**/rs903.close();
03-03 11:35:51 jdbc: 
/**/prep902.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep902.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 68
03-03 11:35:51 jdbc: RESULT_CLOSE 89
03-03 11:35:51 jdbc: 
/**/prep902.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 87
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep903 = conn83.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 90
03-03 11:35:51 jdbc: 
/**/prep903.setLong(1, 20L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs904 = prep903.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 90
03-03 11:35:51 jdbc: RESULT_CLOSE 91
03-03 11:35:51 jdbc: 
/**/rs904.next();
03-03 11:35:51 jdbc: 
/**/rs904.getLong("id1_0_");
03-03 11:35:51 jdbc: 
/**/rs904.wasNull();
03-03 11:35:51 jdbc: 
/**/rs904.getLong("id0_1_");
03-03 11:35:51 jdbc: 
/**/rs904.wasNull();
03-03 11:35:51 jdbc: 
/**/rs904.getLong("id4_2_");
03-03 11:35:51 jdbc: 
/**/rs904.wasNull();
03-03 11:35:51 jdbc: 
/**/rs904.getLong("id4_3_");
03-03 11:35:51 jdbc: 
/**/rs904.wasNull();
03-03 11:35:51 jdbc: 
/**/rs904.getLong("contentT2_2_4_");
03-03 11:35:51 jdbc: 
/**/rs904.wasNull();
03-03 11:35:51 jdbc: 
/**/rs904.getLong("contentN1_4_");
03-03 11:35:51 jdbc: 
/**/rs904.wasNull();
03-03 11:35:51 jdbc: 
/**/rs904.next();
03-03 11:35:51 jdbc: 
/**/rs904.close();
03-03 11:35:51 jdbc: 
/**/prep903.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep903.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 68
03-03 11:35:51 jdbc: RESULT_CLOSE 92
03-03 11:35:51 jdbc: 
/**/prep903.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 90
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep904 = conn83.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 93
03-03 11:35:51 jdbc: 
/**/prep904.setLong(1, 22L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs905 = prep904.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 93
03-03 11:35:51 jdbc: RESULT_CLOSE 94
03-03 11:35:51 jdbc: 
/**/rs905.next();
03-03 11:35:51 jdbc: 
/**/rs905.getLong("id1_0_");
03-03 11:35:51 jdbc: 
/**/rs905.wasNull();
03-03 11:35:51 jdbc: 
/**/rs905.getLong("id0_1_");
03-03 11:35:51 jdbc: 
/**/rs905.wasNull();
03-03 11:35:51 jdbc: 
/**/rs905.getLong("id4_2_");
03-03 11:35:51 jdbc: 
/**/rs905.wasNull();
03-03 11:35:51 jdbc: 
/**/rs905.getLong("id4_3_");
03-03 11:35:51 jdbc: 
/**/rs905.wasNull();
03-03 11:35:51 jdbc: 
/**/rs905.getLong("contentT2_2_4_");
03-03 11:35:51 jdbc: 
/**/rs905.wasNull();
03-03 11:35:51 jdbc: 
/**/rs905.getLong("contentN1_4_");
03-03 11:35:51 jdbc: 
/**/rs905.wasNull();
03-03 11:35:51 jdbc: 
/**/rs905.next();
03-03 11:35:51 jdbc: 
/**/rs905.close();
03-03 11:35:51 jdbc: 
/**/prep904.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep904.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 68
03-03 11:35:51 jdbc: RESULT_CLOSE 95
03-03 11:35:51 jdbc: 
/**/prep904.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 93
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep905 = conn83.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 96
03-03 11:35:51 jdbc: 
/**/prep905.setLong(1, 24L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs906 = prep905.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 96
03-03 11:35:51 jdbc: RESULT_CLOSE 97
03-03 11:35:51 jdbc: 
/**/rs906.next();
03-03 11:35:51 jdbc: 
/**/rs906.getLong("id1_0_");
03-03 11:35:51 jdbc: 
/**/rs906.wasNull();
03-03 11:35:51 jdbc: 
/**/rs906.getLong("id0_1_");
03-03 11:35:51 jdbc: 
/**/rs906.wasNull();
03-03 11:35:51 jdbc: 
/**/rs906.getLong("id4_2_");
03-03 11:35:51 jdbc: 
/**/rs906.wasNull();
03-03 11:35:51 jdbc: 
/**/rs906.getLong("id4_3_");
03-03 11:35:51 jdbc: 
/**/rs906.wasNull();
03-03 11:35:51 jdbc: 
/**/rs906.getLong("author8_1_0_");
03-03 11:35:51 jdbc: 
/**/rs906.wasNull();
03-03 11:35:51 jdbc: 
/**/rs906.getLong("contentId1_0_");
03-03 11:35:51 jdbc: 
/**/rs906.wasNull();
03-03 11:35:51 jdbc: 
/**/rs906.getString("contentR3_1_0_");
03-03 11:35:51 jdbc: 
/**/rs906.wasNull();
03-03 11:35:51 jdbc: 
/**/rs906.getTimestamp("creation4_1_0_");
03-03 11:35:51 jdbc: 
/**/rs906.wasNull();
03-03 11:35:51 jdbc: 
/**/rs906.getTimestamp("lastModi5_1_0_");
03-03 11:35:51 jdbc: 
/**/rs906.wasNull();
03-03 11:35:51 jdbc: 
/**/rs906.getString("name1_0_");
03-03 11:35:51 jdbc: 
/**/rs906.wasNull();
03-03 11:35:51 jdbc: 
/**/rs906.getLong("parent9_1_0_");
03-03 11:35:51 jdbc: 
/**/rs906.wasNull();
03-03 11:35:51 jdbc: 
/**/rs906.getBoolean("publicated1_0_");
03-03 11:35:51 jdbc: 
/**/rs906.wasNull();
03-03 11:35:51 jdbc: 
/**/rs906.getString("name4_2_");
03-03 11:35:51 jdbc: 
/**/rs906.wasNull();
03-03 11:35:51 jdbc: 
/**/rs906.getLong("parent3_4_2_");
03-03 11:35:51 jdbc: 
/**/rs906.wasNull();
03-03 11:35:51 jdbc: 
/**/rs906.getLong("contentT2_2_4_");
03-03 11:35:51 jdbc: 
/**/rs906.wasNull();
03-03 11:35:51 jdbc: 
/**/rs906.getLong("contentN1_4_");
03-03 11:35:51 jdbc: 
/**/rs906.wasNull();
03-03 11:35:51 jdbc: 
/**/rs906.next();
03-03 11:35:51 jdbc: 
/**/rs906.close();
03-03 11:35:51 jdbc: 
/**/prep905.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep905.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 68
03-03 11:35:51 jdbc: RESULT_CLOSE 98
03-03 11:35:51 jdbc: 
/**/prep905.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 96
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep906 = conn83.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 99
03-03 11:35:51 jdbc: 
/**/prep906.setLong(1, 9L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs907 = prep906.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 99
03-03 11:35:51 jdbc: RESULT_CLOSE 100
03-03 11:35:51 jdbc: 
/**/rs907.next();
03-03 11:35:51 jdbc: 
/**/rs907.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs907.wasNull();
03-03 11:35:51 jdbc: 
/**/rs907.getLong("contentN1_1_1_");
03-03 11:35:51 jdbc: 
/**/rs907.wasNull();
03-03 11:35:51 jdbc: 
/**/rs907.getLong("contentT2_1_");
03-03 11:35:51 jdbc: 
/**/rs907.wasNull();
03-03 11:35:51 jdbc: 
/**/rs907.next();
03-03 11:35:51 jdbc: 
/**/rs907.close();
03-03 11:35:51 jdbc: 
/**/prep906.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep906.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 68
03-03 11:35:51 jdbc: RESULT_CLOSE 101
03-03 11:35:51 jdbc: 
/**/prep906.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 99
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep907 = conn83.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 102
03-03 11:35:51 jdbc: 
/**/prep907.setLong(1, 26L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs908 = prep907.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 102
03-03 11:35:51 jdbc: RESULT_CLOSE 103
03-03 11:35:51 jdbc: 
/**/rs908.next();
03-03 11:35:51 jdbc: 
/**/rs908.getLong("id1_0_");
03-03 11:35:51 jdbc: 
/**/rs908.wasNull();
03-03 11:35:51 jdbc: 
/**/rs908.getLong("id0_1_");
03-03 11:35:51 jdbc: 
/**/rs908.wasNull();
03-03 11:35:51 jdbc: 
/**/rs908.getLong("id4_2_");
03-03 11:35:51 jdbc: 
/**/rs908.wasNull();
03-03 11:35:51 jdbc: 
/**/rs908.getLong("id4_3_");
03-03 11:35:51 jdbc: 
/**/rs908.wasNull();
03-03 11:35:51 jdbc: 
/**/rs908.getLong("contentT2_2_4_");
03-03 11:35:51 jdbc: 
/**/rs908.wasNull();
03-03 11:35:51 jdbc: 
/**/rs908.getLong("contentN1_4_");
03-03 11:35:51 jdbc: 
/**/rs908.wasNull();
03-03 11:35:51 jdbc: 
/**/rs908.next();
03-03 11:35:51 jdbc: 
/**/rs908.close();
03-03 11:35:51 jdbc: 
/**/prep907.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep907.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 68
03-03 11:35:51 jdbc: RESULT_CLOSE 104
03-03 11:35:51 jdbc: 
/**/prep907.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 102
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep908 = conn83.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 105
03-03 11:35:51 jdbc: 
/**/prep908.setLong(1, 34L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs909 = prep908.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 105
03-03 11:35:51 jdbc: RESULT_CLOSE 106
03-03 11:35:51 jdbc: 
/**/rs909.next();
03-03 11:35:51 jdbc: 
/**/rs909.getLong("id1_0_");
03-03 11:35:51 jdbc: 
/**/rs909.wasNull();
03-03 11:35:51 jdbc: 
/**/rs909.getLong("id0_1_");
03-03 11:35:51 jdbc: 
/**/rs909.wasNull();
03-03 11:35:51 jdbc: 
/**/rs909.getLong("id4_2_");
03-03 11:35:51 jdbc: 
/**/rs909.wasNull();
03-03 11:35:51 jdbc: 
/**/rs909.getLong("id4_3_");
03-03 11:35:51 jdbc: 
/**/rs909.wasNull();
03-03 11:35:51 jdbc: 
/**/rs909.getLong("contentT2_2_4_");
03-03 11:35:51 jdbc: 
/**/rs909.wasNull();
03-03 11:35:51 jdbc: 
/**/rs909.getLong("contentN1_4_");
03-03 11:35:51 jdbc: 
/**/rs909.wasNull();
03-03 11:35:51 jdbc: 
/**/rs909.next();
03-03 11:35:51 jdbc: 
/**/rs909.close();
03-03 11:35:51 jdbc: 
/**/prep908.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep908.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 68
03-03 11:35:51 jdbc: RESULT_CLOSE 107
03-03 11:35:51 jdbc: 
/**/prep908.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 105
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep909 = conn83.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 108
03-03 11:35:51 jdbc: 
/**/prep909.setLong(1, 51L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs910 = prep909.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 108
03-03 11:35:51 jdbc: RESULT_CLOSE 109
03-03 11:35:51 jdbc: 
/**/rs910.next();
03-03 11:35:51 jdbc: 
/**/rs910.getLong("id1_0_");
03-03 11:35:51 jdbc: 
/**/rs910.wasNull();
03-03 11:35:51 jdbc: 
/**/rs910.getLong("id0_1_");
03-03 11:35:51 jdbc: 
/**/rs910.wasNull();
03-03 11:35:51 jdbc: 
/**/rs910.getLong("id4_2_");
03-03 11:35:51 jdbc: 
/**/rs910.wasNull();
03-03 11:35:51 jdbc: 
/**/rs910.getLong("id4_3_");
03-03 11:35:51 jdbc: 
/**/rs910.wasNull();
03-03 11:35:51 jdbc: 
/**/rs910.getLong("contentT2_2_4_");
03-03 11:35:51 jdbc: 
/**/rs910.wasNull();
03-03 11:35:51 jdbc: 
/**/rs910.getLong("contentN1_4_");
03-03 11:35:51 jdbc: 
/**/rs910.wasNull();
03-03 11:35:51 jdbc: 
/**/rs910.next();
03-03 11:35:51 jdbc: 
/**/rs910.close();
03-03 11:35:51 jdbc: 
/**/prep909.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep909.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 68
03-03 11:35:51 jdbc: RESULT_CLOSE 110
03-03 11:35:51 jdbc: 
/**/prep909.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 108
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep910 = conn83.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 111
03-03 11:35:51 jdbc: 
/**/prep910.setLong(1, 58L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs911 = prep910.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 111
03-03 11:35:51 jdbc: RESULT_CLOSE 112
03-03 11:35:51 jdbc: 
/**/rs911.next();
03-03 11:35:51 jdbc: 
/**/rs911.getLong("id1_0_");
03-03 11:35:51 jdbc: 
/**/rs911.wasNull();
03-03 11:35:51 jdbc: 
/**/rs911.getLong("id0_1_");
03-03 11:35:51 jdbc: 
/**/rs911.wasNull();
03-03 11:35:51 jdbc: 
/**/rs911.getLong("id4_2_");
03-03 11:35:51 jdbc: 
/**/rs911.wasNull();
03-03 11:35:51 jdbc: 
/**/rs911.getLong("id4_3_");
03-03 11:35:51 jdbc: 
/**/rs911.wasNull();
03-03 11:35:51 jdbc: 
/**/rs911.getLong("contentT2_2_4_");
03-03 11:35:51 jdbc: 
/**/rs911.wasNull();
03-03 11:35:51 jdbc: 
/**/rs911.getLong("contentN1_4_");
03-03 11:35:51 jdbc: 
/**/rs911.wasNull();
03-03 11:35:51 jdbc: 
/**/rs911.next();
03-03 11:35:51 jdbc: 
/**/rs911.close();
03-03 11:35:51 jdbc: 
/**/prep910.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep910.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 68
03-03 11:35:51 jdbc: RESULT_CLOSE 113
03-03 11:35:51 jdbc: 
/**/prep910.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 111
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep911 = conn83.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 114
03-03 11:35:51 jdbc: 
/**/prep911.setLong(1, 79L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs912 = prep911.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 114
03-03 11:35:51 jdbc: RESULT_CLOSE 115
03-03 11:35:51 jdbc: 
/**/rs912.next();
03-03 11:35:51 jdbc: 
/**/rs912.getLong("id1_0_");
03-03 11:35:51 jdbc: 
/**/rs912.wasNull();
03-03 11:35:51 jdbc: 
/**/rs912.getLong("id0_1_");
03-03 11:35:51 jdbc: 
/**/rs912.wasNull();
03-03 11:35:51 jdbc: 
/**/rs912.getLong("id4_2_");
03-03 11:35:51 jdbc: 
/**/rs912.wasNull();
03-03 11:35:51 jdbc: 
/**/rs912.getLong("id4_3_");
03-03 11:35:51 jdbc: 
/**/rs912.wasNull();
03-03 11:35:51 jdbc: 
/**/rs912.getLong("contentT2_2_4_");
03-03 11:35:51 jdbc: 
/**/rs912.wasNull();
03-03 11:35:51 jdbc: 
/**/rs912.getLong("contentN1_4_");
03-03 11:35:51 jdbc: 
/**/rs912.wasNull();
03-03 11:35:51 jdbc: 
/**/rs912.next();
03-03 11:35:51 jdbc: 
/**/rs912.getLong("id1_0_");
03-03 11:35:51 jdbc: 
/**/rs912.wasNull();
03-03 11:35:51 jdbc: 
/**/rs912.getLong("id0_1_");
03-03 11:35:51 jdbc: 
/**/rs912.wasNull();
03-03 11:35:51 jdbc: 
/**/rs912.getLong("id4_2_");
03-03 11:35:51 jdbc: 
/**/rs912.wasNull();
03-03 11:35:51 jdbc: 
/**/rs912.getLong("id4_3_");
03-03 11:35:51 jdbc: 
/**/rs912.wasNull();
03-03 11:35:51 jdbc: 
/**/rs912.getLong("author8_1_0_");
03-03 11:35:51 jdbc: 
/**/rs912.wasNull();
03-03 11:35:51 jdbc: 
/**/rs912.getLong("contentId1_0_");
03-03 11:35:51 jdbc: 
/**/rs912.wasNull();
03-03 11:35:51 jdbc: 
/**/rs912.getString("contentR3_1_0_");
03-03 11:35:51 jdbc: 
/**/rs912.wasNull();
03-03 11:35:51 jdbc: 
/**/rs912.getTimestamp("creation4_1_0_");
03-03 11:35:51 jdbc: 
/**/rs912.wasNull();
03-03 11:35:51 jdbc: 
/**/rs912.getTimestamp("lastModi5_1_0_");
03-03 11:35:51 jdbc: 
/**/rs912.wasNull();
03-03 11:35:51 jdbc: 
/**/rs912.getString("name1_0_");
03-03 11:35:51 jdbc: 
/**/rs912.wasNull();
03-03 11:35:51 jdbc: 
/**/rs912.getLong("parent9_1_0_");
03-03 11:35:51 jdbc: 
/**/rs912.wasNull();
03-03 11:35:51 jdbc: 
/**/rs912.getBoolean("publicated1_0_");
03-03 11:35:51 jdbc: 
/**/rs912.wasNull();
03-03 11:35:51 jdbc: 
/**/rs912.getString("name4_2_");
03-03 11:35:51 jdbc: 
/**/rs912.wasNull();
03-03 11:35:51 jdbc: 
/**/rs912.getLong("parent3_4_2_");
03-03 11:35:51 jdbc: 
/**/rs912.wasNull();
03-03 11:35:51 jdbc: 
/**/rs912.getLong("contentT2_2_4_");
03-03 11:35:51 jdbc: 
/**/rs912.wasNull();
03-03 11:35:51 jdbc: 
/**/rs912.getLong("contentN1_4_");
03-03 11:35:51 jdbc: 
/**/rs912.wasNull();
03-03 11:35:51 jdbc: 
/**/rs912.next();
03-03 11:35:51 jdbc: 
/**/rs912.close();
03-03 11:35:51 jdbc: 
/**/prep911.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep911.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 68
03-03 11:35:51 jdbc: RESULT_CLOSE 116
03-03 11:35:51 jdbc: 
/**/prep911.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 114
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep912 = conn83.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 117
03-03 11:35:51 jdbc: 
/**/prep912.setLong(1, 50L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs913 = prep912.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 117
03-03 11:35:51 jdbc: RESULT_CLOSE 118
03-03 11:35:51 jdbc: 
/**/rs913.next();
03-03 11:35:51 jdbc: 
/**/rs913.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs913.wasNull();
03-03 11:35:51 jdbc: 
/**/rs913.getLong("contentN1_1_1_");
03-03 11:35:51 jdbc: 
/**/rs913.wasNull();
03-03 11:35:51 jdbc: 
/**/rs913.getLong("contentT2_1_");
03-03 11:35:51 jdbc: 
/**/rs913.wasNull();
03-03 11:35:51 jdbc: 
/**/rs913.next();
03-03 11:35:51 jdbc: 
/**/rs913.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs913.wasNull();
03-03 11:35:51 jdbc: 
/**/rs913.getLong("contentN1_1_1_");
03-03 11:35:51 jdbc: 
/**/rs913.wasNull();
03-03 11:35:51 jdbc: 
/**/rs913.getLong("contentT2_1_");
03-03 11:35:51 jdbc: 
/**/rs913.wasNull();
03-03 11:35:51 jdbc: 
/**/rs913.next();
03-03 11:35:51 jdbc: 
/**/rs913.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs913.wasNull();
03-03 11:35:51 jdbc: 
/**/rs913.getLong("contentN1_1_1_");
03-03 11:35:51 jdbc: 
/**/rs913.wasNull();
03-03 11:35:51 jdbc: 
/**/rs913.getLong("contentT2_1_");
03-03 11:35:51 jdbc: 
/**/rs913.wasNull();
03-03 11:35:51 jdbc: 
/**/rs913.next();
03-03 11:35:51 jdbc: 
/**/rs913.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs913.wasNull();
03-03 11:35:51 jdbc: 
/**/rs913.getLong("contentN1_1_1_");
03-03 11:35:51 jdbc: 
/**/rs913.wasNull();
03-03 11:35:51 jdbc: 
/**/rs913.getLong("contentT2_1_");
03-03 11:35:51 jdbc: 
/**/rs913.wasNull();
03-03 11:35:51 jdbc: 
/**/rs913.next();
03-03 11:35:51 jdbc: 
/**/rs913.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs913.wasNull();
03-03 11:35:51 jdbc: 
/**/rs913.getLong("contentN1_1_1_");
03-03 11:35:51 jdbc: 
/**/rs913.wasNull();
03-03 11:35:51 jdbc: 
/**/rs913.getLong("contentT2_1_");
03-03 11:35:51 jdbc: 
/**/rs913.wasNull();
03-03 11:35:51 jdbc: 
/**/rs913.next();
03-03 11:35:51 jdbc: 
/**/rs913.close();
03-03 11:35:51 jdbc: 
/**/prep912.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep912.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 68
03-03 11:35:51 jdbc: RESULT_CLOSE 119
03-03 11:35:51 jdbc: 
/**/prep912.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 117
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep913 = conn83.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 120
03-03 11:35:51 jdbc: 
/**/prep913.setLong(1, 108L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs914 = prep913.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 120
03-03 11:35:51 jdbc: RESULT_CLOSE 121
03-03 11:35:51 jdbc: 
/**/rs914.next();
03-03 11:35:51 jdbc: 
/**/rs914.getLong("id1_0_");
03-03 11:35:51 jdbc: 
/**/rs914.wasNull();
03-03 11:35:51 jdbc: 
/**/rs914.getLong("id0_1_");
03-03 11:35:51 jdbc: 
/**/rs914.wasNull();
03-03 11:35:51 jdbc: 
/**/rs914.getLong("id4_2_");
03-03 11:35:51 jdbc: 
/**/rs914.wasNull();
03-03 11:35:51 jdbc: 
/**/rs914.getLong("id4_3_");
03-03 11:35:51 jdbc: 
/**/rs914.wasNull();
03-03 11:35:51 jdbc: 
/**/rs914.getLong("contentT2_2_4_");
03-03 11:35:51 jdbc: 
/**/rs914.wasNull();
03-03 11:35:51 jdbc: 
/**/rs914.getLong("contentN1_4_");
03-03 11:35:51 jdbc: 
/**/rs914.wasNull();
03-03 11:35:51 jdbc: 
/**/rs914.next();
03-03 11:35:51 jdbc: 
/**/rs914.close();
03-03 11:35:51 jdbc: 
/**/prep913.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep913.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 68
03-03 11:35:51 jdbc: RESULT_CLOSE 122
03-03 11:35:51 jdbc: 
/**/prep913.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 120
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep914 = conn83.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 123
03-03 11:35:51 jdbc: 
/**/prep914.setLong(1, 112L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs915 = prep914.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 123
03-03 11:35:51 jdbc: RESULT_CLOSE 124
03-03 11:35:51 jdbc: 
/**/rs915.next();
03-03 11:35:51 jdbc: 
/**/rs915.getLong("id1_0_");
03-03 11:35:51 jdbc: 
/**/rs915.wasNull();
03-03 11:35:51 jdbc: 
/**/rs915.getLong("id0_1_");
03-03 11:35:51 jdbc: 
/**/rs915.wasNull();
03-03 11:35:51 jdbc: 
/**/rs915.getLong("id4_2_");
03-03 11:35:51 jdbc: 
/**/rs915.wasNull();
03-03 11:35:51 jdbc: 
/**/rs915.getLong("id4_3_");
03-03 11:35:51 jdbc: 
/**/rs915.wasNull();
03-03 11:35:51 jdbc: 
/**/rs915.getLong("contentT2_2_4_");
03-03 11:35:51 jdbc: 
/**/rs915.wasNull();
03-03 11:35:51 jdbc: 
/**/rs915.getLong("contentN1_4_");
03-03 11:35:51 jdbc: 
/**/rs915.wasNull();
03-03 11:35:51 jdbc: 
/**/rs915.next();
03-03 11:35:51 jdbc: 
/**/rs915.getLong("id1_0_");
03-03 11:35:51 jdbc: 
/**/rs915.wasNull();
03-03 11:35:51 jdbc: 
/**/rs915.getLong("id0_1_");
03-03 11:35:51 jdbc: 
/**/rs915.wasNull();
03-03 11:35:51 jdbc: 
/**/rs915.getLong("id4_2_");
03-03 11:35:51 jdbc: 
/**/rs915.wasNull();
03-03 11:35:51 jdbc: 
/**/rs915.getLong("id4_3_");
03-03 11:35:51 jdbc: 
/**/rs915.wasNull();
03-03 11:35:51 jdbc: 
/**/rs915.getLong("contentT2_2_4_");
03-03 11:35:51 jdbc: 
/**/rs915.wasNull();
03-03 11:35:51 jdbc: 
/**/rs915.getLong("contentN1_4_");
03-03 11:35:51 jdbc: 
/**/rs915.wasNull();
03-03 11:35:51 jdbc: 
/**/rs915.next();
03-03 11:35:51 jdbc: 
/**/rs915.close();
03-03 11:35:51 jdbc: 
/**/prep914.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep914.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 68
03-03 11:35:51 jdbc: RESULT_CLOSE 125
03-03 11:35:51 jdbc: 
/**/prep914.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 123
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep915 = conn83.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 126
03-03 11:35:51 jdbc: 
/**/prep915.setLong(1, 122L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs916 = prep915.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 126
03-03 11:35:51 jdbc: RESULT_CLOSE 127
03-03 11:35:51 jdbc: 
/**/rs916.next();
03-03 11:35:51 jdbc: 
/**/rs916.getLong("id1_0_");
03-03 11:35:51 jdbc: 
/**/rs916.wasNull();
03-03 11:35:51 jdbc: 
/**/rs916.getLong("id0_1_");
03-03 11:35:51 jdbc: 
/**/rs916.wasNull();
03-03 11:35:51 jdbc: 
/**/rs916.getLong("id4_2_");
03-03 11:35:51 jdbc: 
/**/rs916.wasNull();
03-03 11:35:51 jdbc: 
/**/rs916.getLong("id4_3_");
03-03 11:35:51 jdbc: 
/**/rs916.wasNull();
03-03 11:35:51 jdbc: 
/**/rs916.getLong("author8_1_0_");
03-03 11:35:51 jdbc: 
/**/rs916.wasNull();
03-03 11:35:51 jdbc: 
/**/rs916.getLong("contentId1_0_");
03-03 11:35:51 jdbc: 
/**/rs916.wasNull();
03-03 11:35:51 jdbc: 
/**/rs916.getString("contentR3_1_0_");
03-03 11:35:51 jdbc: 
/**/rs916.wasNull();
03-03 11:35:51 jdbc: 
/**/rs916.getTimestamp("creation4_1_0_");
03-03 11:35:51 jdbc: 
/**/rs916.wasNull();
03-03 11:35:51 jdbc: 
/**/rs916.getTimestamp("lastModi5_1_0_");
03-03 11:35:51 jdbc: 
/**/rs916.wasNull();
03-03 11:35:51 jdbc: 
/**/rs916.getString("name1_0_");
03-03 11:35:51 jdbc: 
/**/rs916.wasNull();
03-03 11:35:51 jdbc: 
/**/rs916.getLong("parent9_1_0_");
03-03 11:35:51 jdbc: 
/**/rs916.wasNull();
03-03 11:35:51 jdbc: 
/**/rs916.getBoolean("publicated1_0_");
03-03 11:35:51 jdbc: 
/**/rs916.wasNull();
03-03 11:35:51 jdbc: 
/**/rs916.getString("name4_2_");
03-03 11:35:51 jdbc: 
/**/rs916.wasNull();
03-03 11:35:51 jdbc: 
/**/rs916.getLong("parent3_4_2_");
03-03 11:35:51 jdbc: 
/**/rs916.wasNull();
03-03 11:35:51 jdbc: 
/**/rs916.getLong("contentT2_2_4_");
03-03 11:35:51 jdbc: 
/**/rs916.wasNull();
03-03 11:35:51 jdbc: 
/**/rs916.getLong("contentN1_4_");
03-03 11:35:51 jdbc: 
/**/rs916.wasNull();
03-03 11:35:51 jdbc: 
/**/rs916.next();
03-03 11:35:51 jdbc: 
/**/rs916.close();
03-03 11:35:51 jdbc: 
/**/prep915.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep915.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 68
03-03 11:35:51 jdbc: RESULT_CLOSE 128
03-03 11:35:51 jdbc: 
/**/prep915.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 126
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep916 = conn83.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 129
03-03 11:35:51 jdbc: 
/**/prep916.setLong(1, 25L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs917 = prep916.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 129
03-03 11:35:51 jdbc: RESULT_CLOSE 130
03-03 11:35:51 jdbc: 
/**/rs917.next();
03-03 11:35:51 jdbc: 
/**/rs917.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs917.wasNull();
03-03 11:35:51 jdbc: 
/**/rs917.getLong("contentN1_1_1_");
03-03 11:35:51 jdbc: 
/**/rs917.wasNull();
03-03 11:35:51 jdbc: 
/**/rs917.getLong("contentT2_1_");
03-03 11:35:51 jdbc: 
/**/rs917.wasNull();
03-03 11:35:51 jdbc: 
/**/rs917.next();
03-03 11:35:51 jdbc: 
/**/rs917.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs917.wasNull();
03-03 11:35:51 jdbc: 
/**/rs917.getLong("contentN1_1_1_");
03-03 11:35:51 jdbc: 
/**/rs917.wasNull();
03-03 11:35:51 jdbc: 
/**/rs917.getLong("contentT2_1_");
03-03 11:35:51 jdbc: 
/**/rs917.wasNull();
03-03 11:35:51 jdbc: 
/**/rs917.next();
03-03 11:35:51 jdbc: 
/**/rs917.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs917.wasNull();
03-03 11:35:51 jdbc: 
/**/rs917.getLong("contentN1_1_1_");
03-03 11:35:51 jdbc: 
/**/rs917.wasNull();
03-03 11:35:51 jdbc: 
/**/rs917.getLong("contentT2_1_");
03-03 11:35:51 jdbc: 
/**/rs917.wasNull();
03-03 11:35:51 jdbc: 
/**/rs917.next();
03-03 11:35:51 jdbc: 
/**/rs917.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs917.wasNull();
03-03 11:35:51 jdbc: 
/**/rs917.getLong("contentN1_1_1_");
03-03 11:35:51 jdbc: 
/**/rs917.wasNull();
03-03 11:35:51 jdbc: 
/**/rs917.getLong("contentT2_1_");
03-03 11:35:51 jdbc: 
/**/rs917.wasNull();
03-03 11:35:51 jdbc: 
/**/rs917.next();
03-03 11:35:51 jdbc: 
/**/rs917.close();
03-03 11:35:51 jdbc: 
/**/prep916.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep916.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: SESSION_PREPARE 132
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 132
03-03 11:35:51 jdbc: RESULT_CLOSE 131
03-03 11:35:51 jdbc: 
/**/prep916.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 129
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep917 = conn83.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 133
03-03 11:35:51 jdbc: 
/**/prep917.setLong(1, 123L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs918 = prep917.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 133
03-03 11:35:51 jdbc: RESULT_CLOSE 134
03-03 11:35:51 jdbc: 
/**/rs918.next();
03-03 11:35:51 jdbc: 
/**/rs918.getLong("id1_0_");
03-03 11:35:51 jdbc: 
/**/rs918.wasNull();
03-03 11:35:51 jdbc: 
/**/rs918.getLong("id0_1_");
03-03 11:35:51 jdbc: 
/**/rs918.wasNull();
03-03 11:35:51 jdbc: 
/**/rs918.getLong("id4_2_");
03-03 11:35:51 jdbc: 
/**/rs918.wasNull();
03-03 11:35:51 jdbc: 
/**/rs918.getLong("id4_3_");
03-03 11:35:51 jdbc: 
/**/rs918.wasNull();
03-03 11:35:51 jdbc: 
/**/rs918.getLong("contentT2_2_4_");
03-03 11:35:51 jdbc: 
/**/rs918.wasNull();
03-03 11:35:51 jdbc: 
/**/rs918.getLong("contentN1_4_");
03-03 11:35:51 jdbc: 
/**/rs918.wasNull();
03-03 11:35:51 jdbc: 
/**/rs918.next();
03-03 11:35:51 jdbc: 
/**/rs918.close();
03-03 11:35:51 jdbc: 
/**/prep917.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep917.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 132
03-03 11:35:51 jdbc: RESULT_CLOSE 135
03-03 11:35:51 jdbc: 
/**/prep917.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 133
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep918 = conn83.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 136
03-03 11:35:51 jdbc: 
/**/prep918.setLong(1, 125L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs919 = prep918.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 136
03-03 11:35:51 jdbc: RESULT_CLOSE 137
03-03 11:35:51 jdbc: 
/**/rs919.next();
03-03 11:35:51 jdbc: 
/**/rs919.getLong("id1_0_");
03-03 11:35:51 jdbc: 
/**/rs919.wasNull();
03-03 11:35:51 jdbc: 
/**/rs919.getLong("id0_1_");
03-03 11:35:51 jdbc: 
/**/rs919.wasNull();
03-03 11:35:51 jdbc: 
/**/rs919.getLong("id4_2_");
03-03 11:35:51 jdbc: 
/**/rs919.wasNull();
03-03 11:35:51 jdbc: 
/**/rs919.getLong("id4_3_");
03-03 11:35:51 jdbc: 
/**/rs919.wasNull();
03-03 11:35:51 jdbc: 
/**/rs919.getLong("contentT2_2_4_");
03-03 11:35:51 jdbc: 
/**/rs919.wasNull();
03-03 11:35:51 jdbc: 
/**/rs919.getLong("contentN1_4_");
03-03 11:35:51 jdbc: 
/**/rs919.wasNull();
03-03 11:35:51 jdbc: 
/**/rs919.next();
03-03 11:35:51 jdbc: 
/**/rs919.close();
03-03 11:35:51 jdbc: 
/**/prep918.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep918.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 132
03-03 11:35:51 jdbc: RESULT_CLOSE 138
03-03 11:35:51 jdbc: 
/**/prep918.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 136
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep919 = conn83.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 139
03-03 11:35:51 jdbc: 
/**/prep919.setLong(1, 126L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs920 = prep919.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 139
03-03 11:35:51 jdbc: RESULT_CLOSE 140
03-03 11:35:51 jdbc: 
/**/rs920.next();
03-03 11:35:51 jdbc: 
/**/rs920.getLong("id1_0_");
03-03 11:35:51 jdbc: 
/**/rs920.wasNull();
03-03 11:35:51 jdbc: 
/**/rs920.getLong("id0_1_");
03-03 11:35:51 jdbc: 
/**/rs920.wasNull();
03-03 11:35:51 jdbc: 
/**/rs920.getLong("id4_2_");
03-03 11:35:51 jdbc: 
/**/rs920.wasNull();
03-03 11:35:51 jdbc: 
/**/rs920.getLong("id4_3_");
03-03 11:35:51 jdbc: 
/**/rs920.wasNull();
03-03 11:35:51 jdbc: 
/**/rs920.getLong("author8_1_0_");
03-03 11:35:51 jdbc: 
/**/rs920.wasNull();
03-03 11:35:51 jdbc: 
/**/rs920.getLong("contentId1_0_");
03-03 11:35:51 jdbc: 
/**/rs920.wasNull();
03-03 11:35:51 jdbc: 
/**/rs920.getString("contentR3_1_0_");
03-03 11:35:51 jdbc: 
/**/rs920.wasNull();
03-03 11:35:51 jdbc: 
/**/rs920.getTimestamp("creation4_1_0_");
03-03 11:35:51 jdbc: 
/**/rs920.wasNull();
03-03 11:35:51 jdbc: 
/**/rs920.getTimestamp("lastModi5_1_0_");
03-03 11:35:51 jdbc: 
/**/rs920.wasNull();
03-03 11:35:51 jdbc: 
/**/rs920.getString("name1_0_");
03-03 11:35:51 jdbc: 
/**/rs920.wasNull();
03-03 11:35:51 jdbc: 
/**/rs920.getLong("parent9_1_0_");
03-03 11:35:51 jdbc: 
/**/rs920.wasNull();
03-03 11:35:51 jdbc: 
/**/rs920.getBoolean("publicated1_0_");
03-03 11:35:51 jdbc: 
/**/rs920.wasNull();
03-03 11:35:51 jdbc: 
/**/rs920.getLong("contentT2_2_4_");
03-03 11:35:51 jdbc: 
/**/rs920.wasNull();
03-03 11:35:51 jdbc: 
/**/rs920.getLong("contentN1_4_");
03-03 11:35:51 jdbc: 
/**/rs920.wasNull();
03-03 11:35:51 jdbc: 
/**/rs920.next();
03-03 11:35:51 jdbc: 
/**/rs920.close();
03-03 11:35:51 jdbc: 
/**/prep919.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep919.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 132
03-03 11:35:51 jdbc: RESULT_CLOSE 141
03-03 11:35:51 jdbc: 
/**/prep919.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 139
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep920 = conn83.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 142
03-03 11:35:51 jdbc: 
/**/prep920.setLong(1, 26L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs921 = prep920.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 142
03-03 11:35:51 jdbc: RESULT_CLOSE 143
03-03 11:35:51 jdbc: 
/**/rs921.next();
03-03 11:35:51 jdbc: 
/**/rs921.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs921.wasNull();
03-03 11:35:51 jdbc: 
/**/rs921.getLong("contentN1_1_1_");
03-03 11:35:51 jdbc: 
/**/rs921.wasNull();
03-03 11:35:51 jdbc: 
/**/rs921.getLong("contentT2_1_");
03-03 11:35:51 jdbc: 
/**/rs921.wasNull();
03-03 11:35:51 jdbc: 
/**/rs921.next();
03-03 11:35:51 jdbc: 
/**/rs921.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs921.wasNull();
03-03 11:35:51 jdbc: 
/**/rs921.getLong("contentN1_1_1_");
03-03 11:35:51 jdbc: 
/**/rs921.wasNull();
03-03 11:35:51 jdbc: 
/**/rs921.getLong("contentT2_1_");
03-03 11:35:51 jdbc: 
/**/rs921.wasNull();
03-03 11:35:51 jdbc: 
/**/rs921.next();
03-03 11:35:51 jdbc: 
/**/rs921.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs921.wasNull();
03-03 11:35:51 jdbc: 
/**/rs921.getLong("contentN1_1_1_");
03-03 11:35:51 jdbc: 
/**/rs921.wasNull();
03-03 11:35:51 jdbc: 
/**/rs921.getLong("contentT2_1_");
03-03 11:35:51 jdbc: 
/**/rs921.wasNull();
03-03 11:35:51 jdbc: 
/**/rs921.next();
03-03 11:35:51 jdbc: 
/**/rs921.close();
03-03 11:35:51 jdbc: 
/**/prep920.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep920.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 132
03-03 11:35:51 jdbc: RESULT_CLOSE 144
03-03 11:35:51 jdbc: 
/**/prep920.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 142
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep921 = conn83.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 145
03-03 11:35:51 jdbc: 
/**/prep921.setLong(1, 128L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs922 = prep921.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 145
03-03 11:35:51 jdbc: RESULT_CLOSE 146
03-03 11:35:51 jdbc: 
/**/rs922.next();
03-03 11:35:51 jdbc: 
/**/rs922.getLong("id1_0_");
03-03 11:35:51 jdbc: 
/**/rs922.wasNull();
03-03 11:35:51 jdbc: 
/**/rs922.getLong("id0_1_");
03-03 11:35:51 jdbc: 
/**/rs922.wasNull();
03-03 11:35:51 jdbc: 
/**/rs922.getLong("id4_2_");
03-03 11:35:51 jdbc: 
/**/rs922.wasNull();
03-03 11:35:51 jdbc: 
/**/rs922.getLong("id4_3_");
03-03 11:35:51 jdbc: 
/**/rs922.wasNull();
03-03 11:35:51 jdbc: 
/**/rs922.getLong("contentT2_2_4_");
03-03 11:35:51 jdbc: 
/**/rs922.wasNull();
03-03 11:35:51 jdbc: 
/**/rs922.getLong("contentN1_4_");
03-03 11:35:51 jdbc: 
/**/rs922.wasNull();
03-03 11:35:51 jdbc: 
/**/rs922.next();
03-03 11:35:51 jdbc: 
/**/rs922.getLong("id1_0_");
03-03 11:35:51 jdbc: 
/**/rs922.wasNull();
03-03 11:35:51 jdbc: 
/**/rs922.getLong("id0_1_");
03-03 11:35:51 jdbc: 
/**/rs922.wasNull();
03-03 11:35:51 jdbc: 
/**/rs922.getLong("id4_2_");
03-03 11:35:51 jdbc: 
/**/rs922.wasNull();
03-03 11:35:51 jdbc: 
/**/rs922.getLong("id4_3_");
03-03 11:35:51 jdbc: 
/**/rs922.wasNull();
03-03 11:35:51 jdbc: 
/**/rs922.getLong("author8_1_0_");
03-03 11:35:51 jdbc: 
/**/rs922.wasNull();
03-03 11:35:51 jdbc: 
/**/rs922.getLong("contentId1_0_");
03-03 11:35:51 jdbc: 
/**/rs922.wasNull();
03-03 11:35:51 jdbc: 
/**/rs922.getString("contentR3_1_0_");
03-03 11:35:51 jdbc: 
/**/rs922.wasNull();
03-03 11:35:51 jdbc: 
/**/rs922.getTimestamp("creation4_1_0_");
03-03 11:35:51 jdbc: 
/**/rs922.wasNull();
03-03 11:35:51 jdbc: 
/**/rs922.getTimestamp("lastModi5_1_0_");
03-03 11:35:51 jdbc: 
/**/rs922.wasNull();
03-03 11:35:51 jdbc: 
/**/rs922.getString("name1_0_");
03-03 11:35:51 jdbc: 
/**/rs922.wasNull();
03-03 11:35:51 jdbc: 
/**/rs922.getLong("parent9_1_0_");
03-03 11:35:51 jdbc: 
/**/rs922.wasNull();
03-03 11:35:51 jdbc: 
/**/rs922.getBoolean("publicated1_0_");
03-03 11:35:51 jdbc: 
/**/rs922.wasNull();
03-03 11:35:51 jdbc: 
/**/rs922.getString("name4_2_");
03-03 11:35:51 jdbc: 
/**/rs922.wasNull();
03-03 11:35:51 jdbc: 
/**/rs922.getLong("parent3_4_2_");
03-03 11:35:51 jdbc: 
/**/rs922.wasNull();
03-03 11:35:51 jdbc: 
/**/rs922.getLong("contentT2_2_4_");
03-03 11:35:51 jdbc: 
/**/rs922.wasNull();
03-03 11:35:51 jdbc: 
/**/rs922.getLong("contentN1_4_");
03-03 11:35:51 jdbc: 
/**/rs922.wasNull();
03-03 11:35:51 jdbc: 
/**/rs922.next();
03-03 11:35:51 jdbc: 
/**/rs922.close();
03-03 11:35:51 jdbc: 
/**/prep921.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep921.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 132
03-03 11:35:51 jdbc: RESULT_CLOSE 147
03-03 11:35:51 jdbc: 
/**/prep921.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 145
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep922 = conn83.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 148
03-03 11:35:51 jdbc: 
/**/prep922.setLong(1, 30L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs923 = prep922.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 148
03-03 11:35:51 jdbc: RESULT_CLOSE 149
03-03 11:35:51 jdbc: 
/**/rs923.next();
03-03 11:35:51 jdbc: 
/**/rs923.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs923.wasNull();
03-03 11:35:51 jdbc: 
/**/rs923.getLong("contentN1_1_1_");
03-03 11:35:51 jdbc: 
/**/rs923.wasNull();
03-03 11:35:51 jdbc: 
/**/rs923.getLong("contentT2_1_");
03-03 11:35:51 jdbc: 
/**/rs923.wasNull();
03-03 11:35:51 jdbc: 
/**/rs923.next();
03-03 11:35:51 jdbc: 
/**/rs923.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs923.wasNull();
03-03 11:35:51 jdbc: 
/**/rs923.getLong("contentN1_1_1_");
03-03 11:35:51 jdbc: 
/**/rs923.wasNull();
03-03 11:35:51 jdbc: 
/**/rs923.getLong("contentT2_1_");
03-03 11:35:51 jdbc: 
/**/rs923.wasNull();
03-03 11:35:51 jdbc: 
/**/rs923.next();
03-03 11:35:51 jdbc: 
/**/rs923.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs923.wasNull();
03-03 11:35:51 jdbc: 
/**/rs923.getLong("contentN1_1_1_");
03-03 11:35:51 jdbc: 
/**/rs923.wasNull();
03-03 11:35:51 jdbc: 
/**/rs923.getLong("contentT2_1_");
03-03 11:35:51 jdbc: 
/**/rs923.wasNull();
03-03 11:35:51 jdbc: 
/**/rs923.next();
03-03 11:35:51 jdbc: 
/**/rs923.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs923.wasNull();
03-03 11:35:51 jdbc: 
/**/rs923.getLong("contentN1_1_1_");
03-03 11:35:51 jdbc: 
/**/rs923.wasNull();
03-03 11:35:51 jdbc: 
/**/rs923.getLong("contentT2_1_");
03-03 11:35:51 jdbc: 
/**/rs923.wasNull();
03-03 11:35:51 jdbc: 
/**/rs923.next();
03-03 11:35:51 jdbc: 
/**/rs923.close();
03-03 11:35:51 jdbc: 
/**/prep922.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep922.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 132
03-03 11:35:51 jdbc: RESULT_CLOSE 150
03-03 11:35:51 jdbc: 
/**/prep922.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 148
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep923 = conn83.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 151
03-03 11:35:51 jdbc: 
/**/prep923.setLong(1, 130L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs924 = prep923.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 151
03-03 11:35:51 jdbc: RESULT_CLOSE 152
03-03 11:35:51 jdbc: 
/**/rs924.next();
03-03 11:35:51 jdbc: 
/**/rs924.getLong("id1_0_");
03-03 11:35:51 jdbc: 
/**/rs924.wasNull();
03-03 11:35:51 jdbc: 
/**/rs924.getLong("id0_1_");
03-03 11:35:51 jdbc: 
/**/rs924.wasNull();
03-03 11:35:51 jdbc: 
/**/rs924.getLong("id4_2_");
03-03 11:35:51 jdbc: 
/**/rs924.wasNull();
03-03 11:35:51 jdbc: 
/**/rs924.getLong("id4_3_");
03-03 11:35:51 jdbc: 
/**/rs924.wasNull();
03-03 11:35:51 jdbc: 
/**/rs924.getLong("author8_1_0_");
03-03 11:35:51 jdbc: 
/**/rs924.wasNull();
03-03 11:35:51 jdbc: 
/**/rs924.getLong("contentId1_0_");
03-03 11:35:51 jdbc: 
/**/rs924.wasNull();
03-03 11:35:51 jdbc: 
/**/rs924.getString("contentR3_1_0_");
03-03 11:35:51 jdbc: 
/**/rs924.wasNull();
03-03 11:35:51 jdbc: 
/**/rs924.getTimestamp("creation4_1_0_");
03-03 11:35:51 jdbc: 
/**/rs924.wasNull();
03-03 11:35:51 jdbc: 
/**/rs924.getTimestamp("lastModi5_1_0_");
03-03 11:35:51 jdbc: 
/**/rs924.wasNull();
03-03 11:35:51 jdbc: 
/**/rs924.getString("name1_0_");
03-03 11:35:51 jdbc: 
/**/rs924.wasNull();
03-03 11:35:51 jdbc: 
/**/rs924.getLong("parent9_1_0_");
03-03 11:35:51 jdbc: 
/**/rs924.wasNull();
03-03 11:35:51 jdbc: 
/**/rs924.getBoolean("publicated1_0_");
03-03 11:35:51 jdbc: 
/**/rs924.wasNull();
03-03 11:35:51 jdbc: 
/**/rs924.getLong("contentT2_2_4_");
03-03 11:35:51 jdbc: 
/**/rs924.wasNull();
03-03 11:35:51 jdbc: 
/**/rs924.getLong("contentN1_4_");
03-03 11:35:51 jdbc: 
/**/rs924.wasNull();
03-03 11:35:51 jdbc: 
/**/rs924.next();
03-03 11:35:51 jdbc: 
/**/rs924.close();
03-03 11:35:51 jdbc: 
/**/prep923.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep923.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 132
03-03 11:35:51 jdbc: RESULT_CLOSE 153
03-03 11:35:51 jdbc: 
/**/prep923.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 151
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep924 = conn83.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 154
03-03 11:35:51 jdbc: 
/**/prep924.setLong(1, 28L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs925 = prep924.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 154
03-03 11:35:51 jdbc: RESULT_CLOSE 155
03-03 11:35:51 jdbc: 
/**/rs925.next();
03-03 11:35:51 jdbc: 
/**/rs925.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs925.wasNull();
03-03 11:35:51 jdbc: 
/**/rs925.getLong("contentN1_1_1_");
03-03 11:35:51 jdbc: 
/**/rs925.wasNull();
03-03 11:35:51 jdbc: 
/**/rs925.getLong("contentT2_1_");
03-03 11:35:51 jdbc: 
/**/rs925.wasNull();
03-03 11:35:51 jdbc: 
/**/rs925.next();
03-03 11:35:51 jdbc: 
/**/rs925.close();
03-03 11:35:51 jdbc: 
/**/prep924.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep924.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 132
03-03 11:35:51 jdbc: RESULT_CLOSE 156
03-03 11:35:51 jdbc: 
/**/prep924.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 154
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep925 = conn83.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 157
03-03 11:35:51 jdbc: 
/**/prep925.setLong(1, 132L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs926 = prep925.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 157
03-03 11:35:51 jdbc: RESULT_CLOSE 158
03-03 11:35:51 jdbc: 
/**/rs926.next();
03-03 11:35:51 jdbc: 
/**/rs926.getLong("id1_0_");
03-03 11:35:51 jdbc: 
/**/rs926.wasNull();
03-03 11:35:51 jdbc: 
/**/rs926.getLong("id0_1_");
03-03 11:35:51 jdbc: 
/**/rs926.wasNull();
03-03 11:35:51 jdbc: 
/**/rs926.getLong("id4_2_");
03-03 11:35:51 jdbc: 
/**/rs926.wasNull();
03-03 11:35:51 jdbc: 
/**/rs926.getLong("id4_3_");
03-03 11:35:51 jdbc: 
/**/rs926.wasNull();
03-03 11:35:51 jdbc: 
/**/rs926.getLong("author8_1_0_");
03-03 11:35:51 jdbc: 
/**/rs926.wasNull();
03-03 11:35:51 jdbc: 
/**/rs926.getLong("contentId1_0_");
03-03 11:35:51 jdbc: 
/**/rs926.wasNull();
03-03 11:35:51 jdbc: 
/**/rs926.getString("contentR3_1_0_");
03-03 11:35:51 jdbc: 
/**/rs926.wasNull();
03-03 11:35:51 jdbc: 
/**/rs926.getTimestamp("creation4_1_0_");
03-03 11:35:51 jdbc: 
/**/rs926.wasNull();
03-03 11:35:51 jdbc: 
/**/rs926.getTimestamp("lastModi5_1_0_");
03-03 11:35:51 jdbc: 
/**/rs926.wasNull();
03-03 11:35:51 jdbc: 
/**/rs926.getString("name1_0_");
03-03 11:35:51 jdbc: 
/**/rs926.wasNull();
03-03 11:35:51 jdbc: 
/**/rs926.getLong("parent9_1_0_");
03-03 11:35:51 jdbc: 
/**/rs926.wasNull();
03-03 11:35:51 jdbc: 
/**/rs926.getBoolean("publicated1_0_");
03-03 11:35:51 jdbc: 
/**/rs926.wasNull();
03-03 11:35:51 jdbc: 
/**/rs926.getLong("contentT2_2_4_");
03-03 11:35:51 jdbc: 
/**/rs926.wasNull();
03-03 11:35:51 jdbc: 
/**/rs926.getLong("contentN1_4_");
03-03 11:35:51 jdbc: 
/**/rs926.wasNull();
03-03 11:35:51 jdbc: 
/**/rs926.next();
03-03 11:35:51 jdbc: 
/**/rs926.close();
03-03 11:35:51 jdbc: 
/**/prep925.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep925.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 132
03-03 11:35:51 jdbc: RESULT_CLOSE 159
03-03 11:35:51 jdbc: 
/**/prep925.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 157
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep926 = conn83.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 160
03-03 11:35:51 jdbc: 
/**/prep926.setLong(1, 29L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs927 = prep926.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 160
03-03 11:35:51 jdbc: RESULT_CLOSE 161
03-03 11:35:51 jdbc: 
/**/rs927.next();
03-03 11:35:51 jdbc: 
/**/rs927.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs927.wasNull();
03-03 11:35:51 jdbc: 
/**/rs927.getLong("contentN1_1_1_");
03-03 11:35:51 jdbc: 
/**/rs927.wasNull();
03-03 11:35:51 jdbc: 
/**/rs927.getLong("contentT2_1_");
03-03 11:35:51 jdbc: 
/**/rs927.wasNull();
03-03 11:35:51 jdbc: 
/**/rs927.next();
03-03 11:35:51 jdbc: 
/**/rs927.close();
03-03 11:35:51 jdbc: 
/**/prep926.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep926.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 132
03-03 11:35:51 jdbc: RESULT_CLOSE 162
03-03 11:35:51 jdbc: 
/**/prep926.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 160
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep927 = conn83.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 163
03-03 11:35:51 jdbc: 
/**/prep927.setLong(1, 133L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs928 = prep927.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 163
03-03 11:35:51 jdbc: RESULT_CLOSE 164
03-03 11:35:51 jdbc: 
/**/rs928.next();
03-03 11:35:51 jdbc: 
/**/rs928.getLong("id1_0_");
03-03 11:35:51 jdbc: 
/**/rs928.wasNull();
03-03 11:35:51 jdbc: 
/**/rs928.getLong("id0_1_");
03-03 11:35:51 jdbc: 
/**/rs928.wasNull();
03-03 11:35:51 jdbc: 
/**/rs928.getLong("id4_2_");
03-03 11:35:51 jdbc: 
/**/rs928.wasNull();
03-03 11:35:51 jdbc: 
/**/rs928.getLong("id4_3_");
03-03 11:35:51 jdbc: 
/**/rs928.wasNull();
03-03 11:35:51 jdbc: 
/**/rs928.getLong("contentT2_2_4_");
03-03 11:35:51 jdbc: 
/**/rs928.wasNull();
03-03 11:35:51 jdbc: 
/**/rs928.getLong("contentN1_4_");
03-03 11:35:51 jdbc: 
/**/rs928.wasNull();
03-03 11:35:51 jdbc: 
/**/rs928.next();
03-03 11:35:51 jdbc: 
/**/rs928.close();
03-03 11:35:51 jdbc: 
/**/prep927.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep927.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 132
03-03 11:35:51 jdbc: RESULT_CLOSE 165
03-03 11:35:51 jdbc: 
/**/prep927.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 163
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep928 = conn83.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 166
03-03 11:35:51 jdbc: 
/**/prep928.setLong(1, 135L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs929 = prep928.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 166
03-03 11:35:51 jdbc: RESULT_CLOSE 167
03-03 11:35:51 jdbc: 
/**/rs929.next();
03-03 11:35:51 jdbc: 
/**/rs929.getLong("id1_0_");
03-03 11:35:51 jdbc: 
/**/rs929.wasNull();
03-03 11:35:51 jdbc: 
/**/rs929.getLong("id0_1_");
03-03 11:35:51 jdbc: 
/**/rs929.wasNull();
03-03 11:35:51 jdbc: 
/**/rs929.getLong("id4_2_");
03-03 11:35:51 jdbc: 
/**/rs929.wasNull();
03-03 11:35:51 jdbc: 
/**/rs929.getLong("id4_3_");
03-03 11:35:51 jdbc: 
/**/rs929.wasNull();
03-03 11:35:51 jdbc: 
/**/rs929.getLong("contentT2_2_4_");
03-03 11:35:51 jdbc: 
/**/rs929.wasNull();
03-03 11:35:51 jdbc: 
/**/rs929.getLong("contentN1_4_");
03-03 11:35:51 jdbc: 
/**/rs929.wasNull();
03-03 11:35:51 jdbc: 
/**/rs929.next();
03-03 11:35:51 jdbc: 
/**/rs929.close();
03-03 11:35:51 jdbc: 
/**/prep928.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep928.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 132
03-03 11:35:51 jdbc: RESULT_CLOSE 168
03-03 11:35:51 jdbc: 
/**/prep928.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 166
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep929 = conn83.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 169
03-03 11:35:51 jdbc: 
/**/prep929.setLong(1, 138L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs930 = prep929.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 169
03-03 11:35:51 jdbc: RESULT_CLOSE 170
03-03 11:35:51 jdbc: 
/**/rs930.next();
03-03 11:35:51 jdbc: 
/**/rs930.getLong("id1_0_");
03-03 11:35:51 jdbc: 
/**/rs930.wasNull();
03-03 11:35:51 jdbc: 
/**/rs930.getLong("id0_1_");
03-03 11:35:51 jdbc: 
/**/rs930.wasNull();
03-03 11:35:51 jdbc: 
/**/rs930.getLong("id4_2_");
03-03 11:35:51 jdbc: 
/**/rs930.wasNull();
03-03 11:35:51 jdbc: 
/**/rs930.getLong("id4_3_");
03-03 11:35:51 jdbc: 
/**/rs930.wasNull();
03-03 11:35:51 jdbc: 
/**/rs930.getLong("author8_1_0_");
03-03 11:35:51 jdbc: 
/**/rs930.wasNull();
03-03 11:35:51 jdbc: 
/**/rs930.getLong("contentId1_0_");
03-03 11:35:51 jdbc: 
/**/rs930.wasNull();
03-03 11:35:51 jdbc: 
/**/rs930.getString("contentR3_1_0_");
03-03 11:35:51 jdbc: 
/**/rs930.wasNull();
03-03 11:35:51 jdbc: 
/**/rs930.getTimestamp("creation4_1_0_");
03-03 11:35:51 jdbc: 
/**/rs930.wasNull();
03-03 11:35:51 jdbc: 
/**/rs930.getTimestamp("lastModi5_1_0_");
03-03 11:35:51 jdbc: 
/**/rs930.wasNull();
03-03 11:35:51 jdbc: 
/**/rs930.getString("name1_0_");
03-03 11:35:51 jdbc: 
/**/rs930.wasNull();
03-03 11:35:51 jdbc: 
/**/rs930.getLong("parent9_1_0_");
03-03 11:35:51 jdbc: 
/**/rs930.wasNull();
03-03 11:35:51 jdbc: 
/**/rs930.getBoolean("publicated1_0_");
03-03 11:35:51 jdbc: 
/**/rs930.wasNull();
03-03 11:35:51 jdbc: 
/**/rs930.getLong("contentT2_2_4_");
03-03 11:35:51 jdbc: 
/**/rs930.wasNull();
03-03 11:35:51 jdbc: 
/**/rs930.getLong("contentN1_4_");
03-03 11:35:51 jdbc: 
/**/rs930.wasNull();
03-03 11:35:51 jdbc: 
/**/rs930.next();
03-03 11:35:51 jdbc: 
/**/rs930.close();
03-03 11:35:51 jdbc: 
/**/prep929.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep929.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 132
03-03 11:35:51 jdbc: RESULT_CLOSE 171
03-03 11:35:51 jdbc: 
/**/prep929.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 169
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep930 = conn83.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 172
03-03 11:35:51 jdbc: 
/**/prep930.setLong(1, 32L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs931 = prep930.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 172
03-03 11:35:51 jdbc: RESULT_CLOSE 173
03-03 11:35:51 jdbc: 
/**/rs931.next();
03-03 11:35:51 jdbc: 
/**/rs931.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs931.wasNull();
03-03 11:35:51 jdbc: 
/**/rs931.getLong("contentN1_1_1_");
03-03 11:35:51 jdbc: 
/**/rs931.wasNull();
03-03 11:35:51 jdbc: 
/**/rs931.getLong("contentT2_1_");
03-03 11:35:51 jdbc: 
/**/rs931.wasNull();
03-03 11:35:51 jdbc: 
/**/rs931.next();
03-03 11:35:51 jdbc: 
/**/rs931.close();
03-03 11:35:51 jdbc: 
/**/prep930.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep930.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 132
03-03 11:35:51 jdbc: RESULT_CLOSE 174
03-03 11:35:51 jdbc: 
/**/prep930.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 172
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep931 = conn83.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 175
03-03 11:35:51 jdbc: 
/**/prep931.setLong(1, 140L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs932 = prep931.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 175
03-03 11:35:51 jdbc: RESULT_CLOSE 176
03-03 11:35:51 jdbc: 
/**/rs932.next();
03-03 11:35:51 jdbc: 
/**/rs932.getLong("id1_0_");
03-03 11:35:51 jdbc: 
/**/rs932.wasNull();
03-03 11:35:51 jdbc: 
/**/rs932.getLong("id0_1_");
03-03 11:35:51 jdbc: 
/**/rs932.wasNull();
03-03 11:35:51 jdbc: 
/**/rs932.getLong("id4_2_");
03-03 11:35:51 jdbc: 
/**/rs932.wasNull();
03-03 11:35:51 jdbc: 
/**/rs932.getLong("id4_3_");
03-03 11:35:51 jdbc: 
/**/rs932.wasNull();
03-03 11:35:51 jdbc: 
/**/rs932.getLong("author8_1_0_");
03-03 11:35:51 jdbc: 
/**/rs932.wasNull();
03-03 11:35:51 jdbc: 
/**/rs932.getLong("contentId1_0_");
03-03 11:35:51 jdbc: 
/**/rs932.wasNull();
03-03 11:35:51 jdbc: 
/**/rs932.getString("contentR3_1_0_");
03-03 11:35:51 jdbc: 
/**/rs932.wasNull();
03-03 11:35:51 jdbc: 
/**/rs932.getTimestamp("creation4_1_0_");
03-03 11:35:51 jdbc: 
/**/rs932.wasNull();
03-03 11:35:51 jdbc: 
/**/rs932.getTimestamp("lastModi5_1_0_");
03-03 11:35:51 jdbc: 
/**/rs932.wasNull();
03-03 11:35:51 jdbc: 
/**/rs932.getString("name1_0_");
03-03 11:35:51 jdbc: 
/**/rs932.wasNull();
03-03 11:35:51 jdbc: 
/**/rs932.getLong("parent9_1_0_");
03-03 11:35:51 jdbc: 
/**/rs932.wasNull();
03-03 11:35:51 jdbc: 
/**/rs932.getBoolean("publicated1_0_");
03-03 11:35:51 jdbc: 
/**/rs932.wasNull();
03-03 11:35:51 jdbc: 
/**/rs932.getLong("contentT2_2_4_");
03-03 11:35:51 jdbc: 
/**/rs932.wasNull();
03-03 11:35:51 jdbc: 
/**/rs932.getLong("contentN1_4_");
03-03 11:35:51 jdbc: 
/**/rs932.wasNull();
03-03 11:35:51 jdbc: 
/**/rs932.next();
03-03 11:35:51 jdbc: 
/**/rs932.close();
03-03 11:35:51 jdbc: 
/**/prep931.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep931.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 132
03-03 11:35:51 jdbc: RESULT_CLOSE 177
03-03 11:35:51 jdbc: 
/**/prep931.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 175
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep932 = conn83.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 178
03-03 11:35:51 jdbc: 
/**/prep932.setLong(1, 33L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs933 = prep932.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 178
03-03 11:35:51 jdbc: RESULT_CLOSE 179
03-03 11:35:51 jdbc: 
/**/rs933.next();
03-03 11:35:51 jdbc: 
/**/rs933.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs933.wasNull();
03-03 11:35:51 jdbc: 
/**/rs933.getLong("contentN1_1_1_");
03-03 11:35:51 jdbc: 
/**/rs933.wasNull();
03-03 11:35:51 jdbc: 
/**/rs933.getLong("contentT2_1_");
03-03 11:35:51 jdbc: 
/**/rs933.wasNull();
03-03 11:35:51 jdbc: 
/**/rs933.next();
03-03 11:35:51 jdbc: 
/**/rs933.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs933.wasNull();
03-03 11:35:51 jdbc: 
/**/rs933.getLong("contentN1_1_1_");
03-03 11:35:51 jdbc: 
/**/rs933.wasNull();
03-03 11:35:51 jdbc: 
/**/rs933.getLong("contentT2_1_");
03-03 11:35:51 jdbc: 
/**/rs933.wasNull();
03-03 11:35:51 jdbc: 
/**/rs933.next();
03-03 11:35:51 jdbc: 
/**/rs933.close();
03-03 11:35:51 jdbc: 
/**/prep932.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep932.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 132
03-03 11:35:51 jdbc: RESULT_CLOSE 180
03-03 11:35:51 jdbc: 
/**/prep932.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 178
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep933 = conn83.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 181
03-03 11:35:51 jdbc: 
/**/prep933.setLong(1, 141L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs934 = prep933.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 181
03-03 11:35:51 jdbc: RESULT_CLOSE 182
03-03 11:35:51 jdbc: 
/**/rs934.next();
03-03 11:35:51 jdbc: 
/**/rs934.getLong("id1_0_");
03-03 11:35:51 jdbc: 
/**/rs934.wasNull();
03-03 11:35:51 jdbc: 
/**/rs934.getLong("id0_1_");
03-03 11:35:51 jdbc: 
/**/rs934.wasNull();
03-03 11:35:51 jdbc: 
/**/rs934.getLong("id4_2_");
03-03 11:35:51 jdbc: 
/**/rs934.wasNull();
03-03 11:35:51 jdbc: 
/**/rs934.getLong("id4_3_");
03-03 11:35:51 jdbc: 
/**/rs934.wasNull();
03-03 11:35:51 jdbc: 
/**/rs934.getLong("contentT2_2_4_");
03-03 11:35:51 jdbc: 
/**/rs934.wasNull();
03-03 11:35:51 jdbc: 
/**/rs934.getLong("contentN1_4_");
03-03 11:35:51 jdbc: 
/**/rs934.wasNull();
03-03 11:35:51 jdbc: 
/**/rs934.next();
03-03 11:35:51 jdbc: 
/**/rs934.close();
03-03 11:35:51 jdbc: 
/**/prep933.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep933.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 132
03-03 11:35:51 jdbc: RESULT_CLOSE 183
03-03 11:35:51 jdbc: 
/**/prep933.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 181
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep934 = conn83.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 184
03-03 11:35:51 jdbc: 
/**/prep934.setLong(1, 143L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs935 = prep934.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 184
03-03 11:35:51 jdbc: RESULT_CLOSE 185
03-03 11:35:51 jdbc: 
/**/rs935.next();
03-03 11:35:51 jdbc: 
/**/rs935.getLong("id1_0_");
03-03 11:35:51 jdbc: 
/**/rs935.wasNull();
03-03 11:35:51 jdbc: 
/**/rs935.getLong("id0_1_");
03-03 11:35:51 jdbc: 
/**/rs935.wasNull();
03-03 11:35:51 jdbc: 
/**/rs935.getLong("id4_2_");
03-03 11:35:51 jdbc: 
/**/rs935.wasNull();
03-03 11:35:51 jdbc: 
/**/rs935.getLong("id4_3_");
03-03 11:35:51 jdbc: 
/**/rs935.wasNull();
03-03 11:35:51 jdbc: 
/**/rs935.getLong("author8_1_0_");
03-03 11:35:51 jdbc: 
/**/rs935.wasNull();
03-03 11:35:51 jdbc: 
/**/rs935.getLong("contentId1_0_");
03-03 11:35:51 jdbc: 
/**/rs935.wasNull();
03-03 11:35:51 jdbc: 
/**/rs935.getString("contentR3_1_0_");
03-03 11:35:51 jdbc: 
/**/rs935.wasNull();
03-03 11:35:51 jdbc: 
/**/rs935.getTimestamp("creation4_1_0_");
03-03 11:35:51 jdbc: 
/**/rs935.wasNull();
03-03 11:35:51 jdbc: 
/**/rs935.getTimestamp("lastModi5_1_0_");
03-03 11:35:51 jdbc: 
/**/rs935.wasNull();
03-03 11:35:51 jdbc: 
/**/rs935.getString("name1_0_");
03-03 11:35:51 jdbc: 
/**/rs935.wasNull();
03-03 11:35:51 jdbc: 
/**/rs935.getLong("parent9_1_0_");
03-03 11:35:51 jdbc: 
/**/rs935.wasNull();
03-03 11:35:51 jdbc: 
/**/rs935.getBoolean("publicated1_0_");
03-03 11:35:51 jdbc: 
/**/rs935.wasNull();
03-03 11:35:51 jdbc: 
/**/rs935.getString("name4_2_");
03-03 11:35:51 jdbc: 
/**/rs935.wasNull();
03-03 11:35:51 jdbc: 
/**/rs935.getLong("parent3_4_2_");
03-03 11:35:51 jdbc: 
/**/rs935.wasNull();
03-03 11:35:51 jdbc: 
/**/rs935.getString("name4_3_");
03-03 11:35:51 jdbc: 
/**/rs935.wasNull();
03-03 11:35:51 jdbc: 
/**/rs935.getLong("parent3_4_3_");
03-03 11:35:51 jdbc: 
/**/rs935.wasNull();
03-03 11:35:51 jdbc: 
/**/rs935.getLong("contentT2_2_4_");
03-03 11:35:51 jdbc: 
/**/rs935.wasNull();
03-03 11:35:51 jdbc: 
/**/rs935.getLong("contentN1_4_");
03-03 11:35:51 jdbc: 
/**/rs935.wasNull();
03-03 11:35:51 jdbc: 
/**/rs935.next();
03-03 11:35:51 jdbc: 
/**/rs935.getLong("id1_0_");
03-03 11:35:51 jdbc: 
/**/rs935.wasNull();
03-03 11:35:51 jdbc: 
/**/rs935.getLong("id0_1_");
03-03 11:35:51 jdbc: 
/**/rs935.wasNull();
03-03 11:35:51 jdbc: 
/**/rs935.getLong("id4_2_");
03-03 11:35:51 jdbc: 
/**/rs935.wasNull();
03-03 11:35:51 jdbc: 
/**/rs935.getLong("id4_3_");
03-03 11:35:51 jdbc: 
/**/rs935.wasNull();
03-03 11:35:51 jdbc: 
/**/rs935.getLong("author8_1_0_");
03-03 11:35:51 jdbc: 
/**/rs935.wasNull();
03-03 11:35:51 jdbc: 
/**/rs935.getLong("contentId1_0_");
03-03 11:35:51 jdbc: 
/**/rs935.wasNull();
03-03 11:35:51 jdbc: 
/**/rs935.getString("contentR3_1_0_");
03-03 11:35:51 jdbc: 
/**/rs935.wasNull();
03-03 11:35:51 jdbc: 
/**/rs935.getTimestamp("creation4_1_0_");
03-03 11:35:51 jdbc: 
/**/rs935.wasNull();
03-03 11:35:51 jdbc: 
/**/rs935.getTimestamp("lastModi5_1_0_");
03-03 11:35:51 jdbc: 
/**/rs935.wasNull();
03-03 11:35:51 jdbc: 
/**/rs935.getString("name1_0_");
03-03 11:35:51 jdbc: 
/**/rs935.wasNull();
03-03 11:35:51 jdbc: 
/**/rs935.getLong("parent9_1_0_");
03-03 11:35:51 jdbc: 
/**/rs935.wasNull();
03-03 11:35:51 jdbc: 
/**/rs935.getBoolean("publicated1_0_");
03-03 11:35:51 jdbc: 
/**/rs935.wasNull();
03-03 11:35:51 jdbc: 
/**/rs935.getLong("contentT2_2_4_");
03-03 11:35:51 jdbc: 
/**/rs935.wasNull();
03-03 11:35:51 jdbc: 
/**/rs935.getLong("contentN1_4_");
03-03 11:35:51 jdbc: 
/**/rs935.wasNull();
03-03 11:35:51 jdbc: 
/**/rs935.next();
03-03 11:35:51 jdbc: 
/**/rs935.getLong("id1_0_");
03-03 11:35:51 jdbc: 
/**/rs935.wasNull();
03-03 11:35:51 jdbc: 
/**/rs935.getLong("id0_1_");
03-03 11:35:51 jdbc: 
/**/rs935.wasNull();
03-03 11:35:51 jdbc: 
/**/rs935.getLong("id4_2_");
03-03 11:35:51 jdbc: 
/**/rs935.wasNull();
03-03 11:35:51 jdbc: 
/**/rs935.getLong("id4_3_");
03-03 11:35:51 jdbc: 
/**/rs935.wasNull();
03-03 11:35:51 jdbc: 
/**/rs935.getLong("author8_1_0_");
03-03 11:35:51 jdbc: 
/**/rs935.wasNull();
03-03 11:35:51 jdbc: 
/**/rs935.getLong("contentId1_0_");
03-03 11:35:51 jdbc: 
/**/rs935.wasNull();
03-03 11:35:51 jdbc: 
/**/rs935.getString("contentR3_1_0_");
03-03 11:35:51 jdbc: 
/**/rs935.wasNull();
03-03 11:35:51 jdbc: 
/**/rs935.getTimestamp("creation4_1_0_");
03-03 11:35:51 jdbc: 
/**/rs935.wasNull();
03-03 11:35:51 jdbc: 
/**/rs935.getTimestamp("lastModi5_1_0_");
03-03 11:35:51 jdbc: 
/**/rs935.wasNull();
03-03 11:35:51 jdbc: 
/**/rs935.getString("name1_0_");
03-03 11:35:51 jdbc: 
/**/rs935.wasNull();
03-03 11:35:51 jdbc: 
/**/rs935.getLong("parent9_1_0_");
03-03 11:35:51 jdbc: 
/**/rs935.wasNull();
03-03 11:35:51 jdbc: 
/**/rs935.getBoolean("publicated1_0_");
03-03 11:35:51 jdbc: 
/**/rs935.wasNull();
03-03 11:35:51 jdbc: 
/**/rs935.getLong("contentT2_2_4_");
03-03 11:35:51 jdbc: 
/**/rs935.wasNull();
03-03 11:35:51 jdbc: 
/**/rs935.getLong("contentN1_4_");
03-03 11:35:51 jdbc: 
/**/rs935.wasNull();
03-03 11:35:51 jdbc: 
/**/rs935.next();
03-03 11:35:51 jdbc: 
/**/rs935.getLong("id1_0_");
03-03 11:35:51 jdbc: 
/**/rs935.wasNull();
03-03 11:35:51 jdbc: 
/**/rs935.getLong("id0_1_");
03-03 11:35:51 jdbc: 
/**/rs935.wasNull();
03-03 11:35:51 jdbc: 
/**/rs935.getLong("id4_2_");
03-03 11:35:51 jdbc: 
/**/rs935.wasNull();
03-03 11:35:51 jdbc: 
/**/rs935.getLong("id4_3_");
03-03 11:35:51 jdbc: 
/**/rs935.wasNull();
03-03 11:35:51 jdbc: 
/**/rs935.getLong("author8_1_0_");
03-03 11:35:51 jdbc: 
/**/rs935.wasNull();
03-03 11:35:51 jdbc: 
/**/rs935.getLong("contentId1_0_");
03-03 11:35:51 jdbc: 
/**/rs935.wasNull();
03-03 11:35:51 jdbc: 
/**/rs935.getString("contentR3_1_0_");
03-03 11:35:51 jdbc: 
/**/rs935.wasNull();
03-03 11:35:51 jdbc: 
/**/rs935.getTimestamp("creation4_1_0_");
03-03 11:35:51 jdbc: 
/**/rs935.wasNull();
03-03 11:35:51 jdbc: 
/**/rs935.getTimestamp("lastModi5_1_0_");
03-03 11:35:51 jdbc: 
/**/rs935.wasNull();
03-03 11:35:51 jdbc: 
/**/rs935.getString("name1_0_");
03-03 11:35:51 jdbc: 
/**/rs935.wasNull();
03-03 11:35:51 jdbc: 
/**/rs935.getLong("parent9_1_0_");
03-03 11:35:51 jdbc: 
/**/rs935.wasNull();
03-03 11:35:51 jdbc: 
/**/rs935.getBoolean("publicated1_0_");
03-03 11:35:51 jdbc: 
/**/rs935.wasNull();
03-03 11:35:51 jdbc: 
/**/rs935.getLong("contentT2_2_4_");
03-03 11:35:51 jdbc: 
/**/rs935.wasNull();
03-03 11:35:51 jdbc: 
/**/rs935.getLong("contentN1_4_");
03-03 11:35:51 jdbc: 
/**/rs935.wasNull();
03-03 11:35:51 jdbc: 
/**/rs935.next();
03-03 11:35:51 jdbc: 
/**/rs935.getLong("id1_0_");
03-03 11:35:51 jdbc: 
/**/rs935.wasNull();
03-03 11:35:51 jdbc: 
/**/rs935.getLong("id0_1_");
03-03 11:35:51 jdbc: 
/**/rs935.wasNull();
03-03 11:35:51 jdbc: 
/**/rs935.getLong("id4_2_");
03-03 11:35:51 jdbc: 
/**/rs935.wasNull();
03-03 11:35:51 jdbc: 
/**/rs935.getLong("id4_3_");
03-03 11:35:51 jdbc: 
/**/rs935.wasNull();
03-03 11:35:51 jdbc: 
/**/rs935.getLong("author8_1_0_");
03-03 11:35:51 jdbc: 
/**/rs935.wasNull();
03-03 11:35:51 jdbc: 
/**/rs935.getLong("contentId1_0_");
03-03 11:35:51 jdbc: 
/**/rs935.wasNull();
03-03 11:35:51 jdbc: 
/**/rs935.getString("contentR3_1_0_");
03-03 11:35:51 jdbc: 
/**/rs935.wasNull();
03-03 11:35:51 jdbc: 
/**/rs935.getTimestamp("creation4_1_0_");
03-03 11:35:51 jdbc: 
/**/rs935.wasNull();
03-03 11:35:51 jdbc: 
/**/rs935.getTimestamp("lastModi5_1_0_");
03-03 11:35:51 jdbc: 
/**/rs935.wasNull();
03-03 11:35:51 jdbc: 
/**/rs935.getString("name1_0_");
03-03 11:35:51 jdbc: 
/**/rs935.wasNull();
03-03 11:35:51 jdbc: 
/**/rs935.getLong("parent9_1_0_");
03-03 11:35:51 jdbc: 
/**/rs935.wasNull();
03-03 11:35:51 jdbc: 
/**/rs935.getBoolean("publicated1_0_");
03-03 11:35:51 jdbc: 
/**/rs935.wasNull();
03-03 11:35:51 jdbc: 
/**/rs935.getLong("contentT2_2_4_");
03-03 11:35:51 jdbc: 
/**/rs935.wasNull();
03-03 11:35:51 jdbc: 
/**/rs935.getLong("contentN1_4_");
03-03 11:35:51 jdbc: 
/**/rs935.wasNull();
03-03 11:35:51 jdbc: 
/**/rs935.next();
03-03 11:35:51 jdbc: 
/**/rs935.close();
03-03 11:35:51 jdbc: 
/**/prep934.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep934.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 132
03-03 11:35:51 jdbc: RESULT_CLOSE 186
03-03 11:35:51 jdbc: 
/**/prep934.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 184
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep935 = conn83.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 187
03-03 11:35:51 jdbc: 
/**/prep935.setLong(1, 39L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs936 = prep935.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 187
03-03 11:35:51 jdbc: RESULT_CLOSE 188
03-03 11:35:51 jdbc: 
/**/rs936.next();
03-03 11:35:51 jdbc: 
/**/rs936.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs936.wasNull();
03-03 11:35:51 jdbc: 
/**/rs936.getLong("contentN1_1_1_");
03-03 11:35:51 jdbc: 
/**/rs936.wasNull();
03-03 11:35:51 jdbc: 
/**/rs936.getLong("contentT2_1_");
03-03 11:35:51 jdbc: 
/**/rs936.wasNull();
03-03 11:35:51 jdbc: 
/**/rs936.next();
03-03 11:35:51 jdbc: 
/**/rs936.close();
03-03 11:35:51 jdbc: 
/**/prep935.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep935.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 132
03-03 11:35:51 jdbc: RESULT_CLOSE 189
03-03 11:35:51 jdbc: 
/**/prep935.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 187
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep936 = conn83.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 190
03-03 11:35:51 jdbc: 
/**/prep936.setLong(1, 42L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs937 = prep936.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 190
03-03 11:35:51 jdbc: RESULT_CLOSE 191
03-03 11:35:51 jdbc: 
/**/rs937.next();
03-03 11:35:51 jdbc: 
/**/rs937.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs937.wasNull();
03-03 11:35:51 jdbc: 
/**/rs937.getLong("contentN1_1_1_");
03-03 11:35:51 jdbc: 
/**/rs937.wasNull();
03-03 11:35:51 jdbc: 
/**/rs937.getLong("contentT2_1_");
03-03 11:35:51 jdbc: 
/**/rs937.wasNull();
03-03 11:35:51 jdbc: 
/**/rs937.next();
03-03 11:35:51 jdbc: 
/**/rs937.close();
03-03 11:35:51 jdbc: 
/**/prep936.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep936.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 132
03-03 11:35:51 jdbc: RESULT_CLOSE 192
03-03 11:35:51 jdbc: 
/**/prep936.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 190
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep937 = conn83.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 193
03-03 11:35:51 jdbc: 
/**/prep937.setLong(1, 43L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs938 = prep937.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 193
03-03 11:35:51 jdbc: RESULT_CLOSE 194
03-03 11:35:51 jdbc: 
/**/rs938.next();
03-03 11:35:51 jdbc: 
/**/rs938.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs938.wasNull();
03-03 11:35:51 jdbc: 
/**/rs938.getLong("contentN1_1_1_");
03-03 11:35:51 jdbc: 
/**/rs938.wasNull();
03-03 11:35:51 jdbc: 
/**/rs938.getLong("contentT2_1_");
03-03 11:35:51 jdbc: 
/**/rs938.wasNull();
03-03 11:35:51 jdbc: 
/**/rs938.next();
03-03 11:35:51 jdbc: 
/**/rs938.close();
03-03 11:35:51 jdbc: 
/**/prep937.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep937.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: SESSION_PREPARE 196
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 196
03-03 11:35:51 jdbc: RESULT_CLOSE 195
03-03 11:35:51 jdbc: 
/**/prep937.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 193
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep938 = conn83.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 197
03-03 11:35:51 jdbc: 
/**/prep938.setLong(1, 40L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs939 = prep938.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 197
03-03 11:35:51 jdbc: RESULT_CLOSE 198
03-03 11:35:51 jdbc: 
/**/rs939.next();
03-03 11:35:51 jdbc: 
/**/rs939.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs939.wasNull();
03-03 11:35:51 jdbc: 
/**/rs939.getLong("contentN1_1_1_");
03-03 11:35:51 jdbc: 
/**/rs939.wasNull();
03-03 11:35:51 jdbc: 
/**/rs939.getLong("contentT2_1_");
03-03 11:35:51 jdbc: 
/**/rs939.wasNull();
03-03 11:35:51 jdbc: 
/**/rs939.next();
03-03 11:35:51 jdbc: 
/**/rs939.close();
03-03 11:35:51 jdbc: 
/**/prep938.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep938.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 196
03-03 11:35:51 jdbc: RESULT_CLOSE 199
03-03 11:35:51 jdbc: 
/**/prep938.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 197
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep939 = conn83.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 200
03-03 11:35:51 jdbc: 
/**/prep939.setLong(1, 41L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs940 = prep939.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 200
03-03 11:35:51 jdbc: RESULT_CLOSE 201
03-03 11:35:51 jdbc: 
/**/rs940.next();
03-03 11:35:51 jdbc: 
/**/rs940.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs940.wasNull();
03-03 11:35:51 jdbc: 
/**/rs940.getLong("contentN1_1_1_");
03-03 11:35:51 jdbc: 
/**/rs940.wasNull();
03-03 11:35:51 jdbc: 
/**/rs940.getLong("contentT2_1_");
03-03 11:35:51 jdbc: 
/**/rs940.wasNull();
03-03 11:35:51 jdbc: 
/**/rs940.next();
03-03 11:35:51 jdbc: 
/**/rs940.close();
03-03 11:35:51 jdbc: 
/**/prep939.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep939.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 196
03-03 11:35:51 jdbc: RESULT_CLOSE 202
03-03 11:35:51 jdbc: 
/**/prep939.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 200
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep940 = conn83.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 203
03-03 11:35:51 jdbc: 
/**/prep940.setLong(1, 149L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs941 = prep940.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 203
03-03 11:35:51 jdbc: RESULT_CLOSE 204
03-03 11:35:51 jdbc: 
/**/rs941.next();
03-03 11:35:51 jdbc: 
/**/rs941.getLong("id1_0_");
03-03 11:35:51 jdbc: 
/**/rs941.wasNull();
03-03 11:35:51 jdbc: 
/**/rs941.getLong("id0_1_");
03-03 11:35:51 jdbc: 
/**/rs941.wasNull();
03-03 11:35:51 jdbc: 
/**/rs941.getLong("id4_2_");
03-03 11:35:51 jdbc: 
/**/rs941.wasNull();
03-03 11:35:51 jdbc: 
/**/rs941.getLong("id4_3_");
03-03 11:35:51 jdbc: 
/**/rs941.wasNull();
03-03 11:35:51 jdbc: 
/**/rs941.getLong("author8_1_0_");
03-03 11:35:51 jdbc: 
/**/rs941.wasNull();
03-03 11:35:51 jdbc: 
/**/rs941.getLong("contentId1_0_");
03-03 11:35:51 jdbc: 
/**/rs941.wasNull();
03-03 11:35:51 jdbc: 
/**/rs941.getString("contentR3_1_0_");
03-03 11:35:51 jdbc: 
/**/rs941.wasNull();
03-03 11:35:51 jdbc: 
/**/rs941.getTimestamp("creation4_1_0_");
03-03 11:35:51 jdbc: 
/**/rs941.wasNull();
03-03 11:35:51 jdbc: 
/**/rs941.getTimestamp("lastModi5_1_0_");
03-03 11:35:51 jdbc: 
/**/rs941.wasNull();
03-03 11:35:51 jdbc: 
/**/rs941.getString("name1_0_");
03-03 11:35:51 jdbc: 
/**/rs941.wasNull();
03-03 11:35:51 jdbc: 
/**/rs941.getLong("parent9_1_0_");
03-03 11:35:51 jdbc: 
/**/rs941.wasNull();
03-03 11:35:51 jdbc: 
/**/rs941.getBoolean("publicated1_0_");
03-03 11:35:51 jdbc: 
/**/rs941.wasNull();
03-03 11:35:51 jdbc: 
/**/rs941.getLong("contentT2_2_4_");
03-03 11:35:51 jdbc: 
/**/rs941.wasNull();
03-03 11:35:51 jdbc: 
/**/rs941.getLong("contentN1_4_");
03-03 11:35:51 jdbc: 
/**/rs941.wasNull();
03-03 11:35:51 jdbc: 
/**/rs941.next();
03-03 11:35:51 jdbc: 
/**/rs941.close();
03-03 11:35:51 jdbc: 
/**/prep940.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep940.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 196
03-03 11:35:51 jdbc: RESULT_CLOSE 205
03-03 11:35:51 jdbc: 
/**/prep940.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 203
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep941 = conn83.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 206
03-03 11:35:51 jdbc: 
/**/prep941.setLong(1, 45L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs942 = prep941.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 206
03-03 11:35:51 jdbc: RESULT_CLOSE 207
03-03 11:35:51 jdbc: 
/**/rs942.next();
03-03 11:35:51 jdbc: 
/**/rs942.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs942.wasNull();
03-03 11:35:51 jdbc: 
/**/rs942.getLong("contentN1_1_1_");
03-03 11:35:51 jdbc: 
/**/rs942.wasNull();
03-03 11:35:51 jdbc: 
/**/rs942.getLong("contentT2_1_");
03-03 11:35:51 jdbc: 
/**/rs942.wasNull();
03-03 11:35:51 jdbc: 
/**/rs942.next();
03-03 11:35:51 jdbc: 
/**/rs942.close();
03-03 11:35:51 jdbc: 
/**/prep941.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep941.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 196
03-03 11:35:51 jdbc: RESULT_CLOSE 208
03-03 11:35:51 jdbc: 
/**/prep941.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 206
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep942 = conn83.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 209
03-03 11:35:51 jdbc: 
/**/prep942.setLong(1, 150L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs943 = prep942.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 209
03-03 11:35:51 jdbc: RESULT_CLOSE 210
03-03 11:35:51 jdbc: 
/**/rs943.next();
03-03 11:35:51 jdbc: 
/**/rs943.getLong("id1_0_");
03-03 11:35:51 jdbc: 
/**/rs943.wasNull();
03-03 11:35:51 jdbc: 
/**/rs943.getLong("id0_1_");
03-03 11:35:51 jdbc: 
/**/rs943.wasNull();
03-03 11:35:51 jdbc: 
/**/rs943.getLong("id4_2_");
03-03 11:35:51 jdbc: 
/**/rs943.wasNull();
03-03 11:35:51 jdbc: 
/**/rs943.getLong("id4_3_");
03-03 11:35:51 jdbc: 
/**/rs943.wasNull();
03-03 11:35:51 jdbc: 
/**/rs943.getLong("author8_1_0_");
03-03 11:35:51 jdbc: 
/**/rs943.wasNull();
03-03 11:35:51 jdbc: 
/**/rs943.getLong("contentId1_0_");
03-03 11:35:51 jdbc: 
/**/rs943.wasNull();
03-03 11:35:51 jdbc: 
/**/rs943.getString("contentR3_1_0_");
03-03 11:35:51 jdbc: 
/**/rs943.wasNull();
03-03 11:35:51 jdbc: 
/**/rs943.getTimestamp("creation4_1_0_");
03-03 11:35:51 jdbc: 
/**/rs943.wasNull();
03-03 11:35:51 jdbc: 
/**/rs943.getTimestamp("lastModi5_1_0_");
03-03 11:35:51 jdbc: 
/**/rs943.wasNull();
03-03 11:35:51 jdbc: 
/**/rs943.getString("name1_0_");
03-03 11:35:51 jdbc: 
/**/rs943.wasNull();
03-03 11:35:51 jdbc: 
/**/rs943.getLong("parent9_1_0_");
03-03 11:35:51 jdbc: 
/**/rs943.wasNull();
03-03 11:35:51 jdbc: 
/**/rs943.getBoolean("publicated1_0_");
03-03 11:35:51 jdbc: 
/**/rs943.wasNull();
03-03 11:35:51 jdbc: 
/**/rs943.getLong("contentT2_2_4_");
03-03 11:35:51 jdbc: 
/**/rs943.wasNull();
03-03 11:35:51 jdbc: 
/**/rs943.getLong("contentN1_4_");
03-03 11:35:51 jdbc: 
/**/rs943.wasNull();
03-03 11:35:51 jdbc: 
/**/rs943.next();
03-03 11:35:51 jdbc: 
/**/rs943.close();
03-03 11:35:51 jdbc: 
/**/prep942.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep942.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 196
03-03 11:35:51 jdbc: RESULT_CLOSE 211
03-03 11:35:51 jdbc: 
/**/prep942.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 209
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep943 = conn83.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 212
03-03 11:35:51 jdbc: 
/**/prep943.setLong(1, 46L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs944 = prep943.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 212
03-03 11:35:51 jdbc: RESULT_CLOSE 213
03-03 11:35:51 jdbc: 
/**/rs944.next();
03-03 11:35:51 jdbc: 
/**/rs944.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs944.wasNull();
03-03 11:35:51 jdbc: 
/**/rs944.getLong("contentN1_1_1_");
03-03 11:35:51 jdbc: 
/**/rs944.wasNull();
03-03 11:35:51 jdbc: 
/**/rs944.getLong("contentT2_1_");
03-03 11:35:51 jdbc: 
/**/rs944.wasNull();
03-03 11:35:51 jdbc: 
/**/rs944.next();
03-03 11:35:51 jdbc: 
/**/rs944.close();
03-03 11:35:51 jdbc: 
/**/prep943.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep943.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 196
03-03 11:35:51 jdbc: RESULT_CLOSE 214
03-03 11:35:51 jdbc: 
/**/prep943.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 212
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep944 = conn83.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 215
03-03 11:35:51 jdbc: 
/**/prep944.setLong(1, 152L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs945 = prep944.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 215
03-03 11:35:51 jdbc: RESULT_CLOSE 216
03-03 11:35:51 jdbc: 
/**/rs945.next();
03-03 11:35:51 jdbc: 
/**/rs945.getLong("id1_0_");
03-03 11:35:51 jdbc: 
/**/rs945.wasNull();
03-03 11:35:51 jdbc: 
/**/rs945.getLong("id0_1_");
03-03 11:35:51 jdbc: 
/**/rs945.wasNull();
03-03 11:35:51 jdbc: 
/**/rs945.getLong("id4_2_");
03-03 11:35:51 jdbc: 
/**/rs945.wasNull();
03-03 11:35:51 jdbc: 
/**/rs945.getLong("id4_3_");
03-03 11:35:51 jdbc: 
/**/rs945.wasNull();
03-03 11:35:51 jdbc: 
/**/rs945.getLong("author8_1_0_");
03-03 11:35:51 jdbc: 
/**/rs945.wasNull();
03-03 11:35:51 jdbc: 
/**/rs945.getLong("contentId1_0_");
03-03 11:35:51 jdbc: 
/**/rs945.wasNull();
03-03 11:35:51 jdbc: 
/**/rs945.getString("contentR3_1_0_");
03-03 11:35:51 jdbc: 
/**/rs945.wasNull();
03-03 11:35:51 jdbc: 
/**/rs945.getTimestamp("creation4_1_0_");
03-03 11:35:51 jdbc: 
/**/rs945.wasNull();
03-03 11:35:51 jdbc: 
/**/rs945.getTimestamp("lastModi5_1_0_");
03-03 11:35:51 jdbc: 
/**/rs945.wasNull();
03-03 11:35:51 jdbc: 
/**/rs945.getString("name1_0_");
03-03 11:35:51 jdbc: 
/**/rs945.wasNull();
03-03 11:35:51 jdbc: 
/**/rs945.getLong("parent9_1_0_");
03-03 11:35:51 jdbc: 
/**/rs945.wasNull();
03-03 11:35:51 jdbc: 
/**/rs945.getBoolean("publicated1_0_");
03-03 11:35:51 jdbc: 
/**/rs945.wasNull();
03-03 11:35:51 jdbc: 
/**/rs945.getLong("contentT2_2_4_");
03-03 11:35:51 jdbc: 
/**/rs945.wasNull();
03-03 11:35:51 jdbc: 
/**/rs945.getLong("contentN1_4_");
03-03 11:35:51 jdbc: 
/**/rs945.wasNull();
03-03 11:35:51 jdbc: 
/**/rs945.next();
03-03 11:35:51 jdbc: 
/**/rs945.close();
03-03 11:35:51 jdbc: 
/**/prep944.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep944.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 196
03-03 11:35:51 jdbc: RESULT_CLOSE 217
03-03 11:35:51 jdbc: 
/**/prep944.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 215
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep945 = conn83.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 218
03-03 11:35:51 jdbc: 
/**/prep945.setLong(1, 48L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs946 = prep945.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 218
03-03 11:35:51 jdbc: RESULT_CLOSE 219
03-03 11:35:51 jdbc: 
/**/rs946.next();
03-03 11:35:51 jdbc: 
/**/rs946.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs946.wasNull();
03-03 11:35:51 jdbc: 
/**/rs946.getLong("contentN1_1_1_");
03-03 11:35:51 jdbc: 
/**/rs946.wasNull();
03-03 11:35:51 jdbc: 
/**/rs946.getLong("contentT2_1_");
03-03 11:35:51 jdbc: 
/**/rs946.wasNull();
03-03 11:35:51 jdbc: 
/**/rs946.next();
03-03 11:35:51 jdbc: 
/**/rs946.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs946.wasNull();
03-03 11:35:51 jdbc: 
/**/rs946.getLong("contentN1_1_1_");
03-03 11:35:51 jdbc: 
/**/rs946.wasNull();
03-03 11:35:51 jdbc: 
/**/rs946.getLong("contentT2_1_");
03-03 11:35:51 jdbc: 
/**/rs946.wasNull();
03-03 11:35:51 jdbc: 
/**/rs946.next();
03-03 11:35:51 jdbc: 
/**/rs946.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs946.wasNull();
03-03 11:35:51 jdbc: 
/**/rs946.getLong("contentN1_1_1_");
03-03 11:35:51 jdbc: 
/**/rs946.wasNull();
03-03 11:35:51 jdbc: 
/**/rs946.getLong("contentT2_1_");
03-03 11:35:51 jdbc: 
/**/rs946.wasNull();
03-03 11:35:51 jdbc: 
/**/rs946.next();
03-03 11:35:51 jdbc: 
/**/rs946.close();
03-03 11:35:51 jdbc: 
/**/prep945.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep945.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 196
03-03 11:35:51 jdbc: RESULT_CLOSE 220
03-03 11:35:51 jdbc: 
/**/prep945.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 218
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep946 = conn83.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 221
03-03 11:35:51 jdbc: 
/**/prep946.setLong(1, 153L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs947 = prep946.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 221
03-03 11:35:51 jdbc: RESULT_CLOSE 222
03-03 11:35:51 jdbc: 
/**/rs947.next();
03-03 11:35:51 jdbc: 
/**/rs947.getLong("id1_0_");
03-03 11:35:51 jdbc: 
/**/rs947.wasNull();
03-03 11:35:51 jdbc: 
/**/rs947.getLong("id0_1_");
03-03 11:35:51 jdbc: 
/**/rs947.wasNull();
03-03 11:35:51 jdbc: 
/**/rs947.getLong("id4_2_");
03-03 11:35:51 jdbc: 
/**/rs947.wasNull();
03-03 11:35:51 jdbc: 
/**/rs947.getLong("id4_3_");
03-03 11:35:51 jdbc: 
/**/rs947.wasNull();
03-03 11:35:51 jdbc: 
/**/rs947.getLong("contentT2_2_4_");
03-03 11:35:51 jdbc: 
/**/rs947.wasNull();
03-03 11:35:51 jdbc: 
/**/rs947.getLong("contentN1_4_");
03-03 11:35:51 jdbc: 
/**/rs947.wasNull();
03-03 11:35:51 jdbc: 
/**/rs947.next();
03-03 11:35:51 jdbc: 
/**/rs947.close();
03-03 11:35:51 jdbc: 
/**/prep946.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep946.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 196
03-03 11:35:51 jdbc: RESULT_CLOSE 223
03-03 11:35:51 jdbc: 
/**/prep946.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 221
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep947 = conn83.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 224
03-03 11:35:51 jdbc: 
/**/prep947.setLong(1, 154L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs948 = prep947.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 224
03-03 11:35:51 jdbc: RESULT_CLOSE 225
03-03 11:35:51 jdbc: 
/**/rs948.next();
03-03 11:35:51 jdbc: 
/**/rs948.getLong("id1_0_");
03-03 11:35:51 jdbc: 
/**/rs948.wasNull();
03-03 11:35:51 jdbc: 
/**/rs948.getLong("id0_1_");
03-03 11:35:51 jdbc: 
/**/rs948.wasNull();
03-03 11:35:51 jdbc: 
/**/rs948.getLong("id4_2_");
03-03 11:35:51 jdbc: 
/**/rs948.wasNull();
03-03 11:35:51 jdbc: 
/**/rs948.getLong("id4_3_");
03-03 11:35:51 jdbc: 
/**/rs948.wasNull();
03-03 11:35:51 jdbc: 
/**/rs948.getLong("contentT2_2_4_");
03-03 11:35:51 jdbc: 
/**/rs948.wasNull();
03-03 11:35:51 jdbc: 
/**/rs948.getLong("contentN1_4_");
03-03 11:35:51 jdbc: 
/**/rs948.wasNull();
03-03 11:35:51 jdbc: 
/**/rs948.next();
03-03 11:35:51 jdbc: 
/**/rs948.close();
03-03 11:35:51 jdbc: 
/**/prep947.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep947.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 196
03-03 11:35:51 jdbc: RESULT_CLOSE 226
03-03 11:35:51 jdbc: 
/**/prep947.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 224
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep948 = conn83.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 227
03-03 11:35:51 jdbc: 
/**/prep948.setLong(1, 155L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs949 = prep948.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 227
03-03 11:35:51 jdbc: RESULT_CLOSE 228
03-03 11:35:51 jdbc: 
/**/rs949.next();
03-03 11:35:51 jdbc: 
/**/rs949.getLong("id1_0_");
03-03 11:35:51 jdbc: 
/**/rs949.wasNull();
03-03 11:35:51 jdbc: 
/**/rs949.getLong("id0_1_");
03-03 11:35:51 jdbc: 
/**/rs949.wasNull();
03-03 11:35:51 jdbc: 
/**/rs949.getLong("id4_2_");
03-03 11:35:51 jdbc: 
/**/rs949.wasNull();
03-03 11:35:51 jdbc: 
/**/rs949.getLong("id4_3_");
03-03 11:35:51 jdbc: 
/**/rs949.wasNull();
03-03 11:35:51 jdbc: 
/**/rs949.getLong("author8_1_0_");
03-03 11:35:51 jdbc: 
/**/rs949.wasNull();
03-03 11:35:51 jdbc: 
/**/rs949.getLong("contentId1_0_");
03-03 11:35:51 jdbc: 
/**/rs949.wasNull();
03-03 11:35:51 jdbc: 
/**/rs949.getString("contentR3_1_0_");
03-03 11:35:51 jdbc: 
/**/rs949.wasNull();
03-03 11:35:51 jdbc: 
/**/rs949.getTimestamp("creation4_1_0_");
03-03 11:35:51 jdbc: 
/**/rs949.wasNull();
03-03 11:35:51 jdbc: 
/**/rs949.getTimestamp("lastModi5_1_0_");
03-03 11:35:51 jdbc: 
/**/rs949.wasNull();
03-03 11:35:51 jdbc: 
/**/rs949.getString("name1_0_");
03-03 11:35:51 jdbc: 
/**/rs949.wasNull();
03-03 11:35:51 jdbc: 
/**/rs949.getLong("parent9_1_0_");
03-03 11:35:51 jdbc: 
/**/rs949.wasNull();
03-03 11:35:51 jdbc: 
/**/rs949.getBoolean("publicated1_0_");
03-03 11:35:51 jdbc: 
/**/rs949.wasNull();
03-03 11:35:51 jdbc: 
/**/rs949.getLong("contentT2_2_4_");
03-03 11:35:51 jdbc: 
/**/rs949.wasNull();
03-03 11:35:51 jdbc: 
/**/rs949.getLong("contentN1_4_");
03-03 11:35:51 jdbc: 
/**/rs949.wasNull();
03-03 11:35:51 jdbc: 
/**/rs949.next();
03-03 11:35:51 jdbc: 
/**/rs949.close();
03-03 11:35:51 jdbc: 
/**/prep948.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep948.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 196
03-03 11:35:51 jdbc: RESULT_CLOSE 229
03-03 11:35:51 jdbc: 
/**/prep948.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 227
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep949 = conn83.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 230
03-03 11:35:51 jdbc: 
/**/prep949.setLong(1, 49L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs950 = prep949.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 230
03-03 11:35:51 jdbc: RESULT_CLOSE 231
03-03 11:35:51 jdbc: 
/**/rs950.next();
03-03 11:35:51 jdbc: 
/**/rs950.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs950.wasNull();
03-03 11:35:51 jdbc: 
/**/rs950.getLong("contentN1_1_1_");
03-03 11:35:51 jdbc: 
/**/rs950.wasNull();
03-03 11:35:51 jdbc: 
/**/rs950.getLong("contentT2_1_");
03-03 11:35:51 jdbc: 
/**/rs950.wasNull();
03-03 11:35:51 jdbc: 
/**/rs950.next();
03-03 11:35:51 jdbc: 
/**/rs950.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs950.wasNull();
03-03 11:35:51 jdbc: 
/**/rs950.getLong("contentN1_1_1_");
03-03 11:35:51 jdbc: 
/**/rs950.wasNull();
03-03 11:35:51 jdbc: 
/**/rs950.getLong("contentT2_1_");
03-03 11:35:51 jdbc: 
/**/rs950.wasNull();
03-03 11:35:51 jdbc: 
/**/rs950.next();
03-03 11:35:51 jdbc: 
/**/rs950.close();
03-03 11:35:51 jdbc: 
/**/prep949.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep949.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 196
03-03 11:35:51 jdbc: RESULT_CLOSE 232
03-03 11:35:51 jdbc: 
/**/prep949.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 230
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep950 = conn83.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 233
03-03 11:35:51 jdbc: 
/**/prep950.setLong(1, 156L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs951 = prep950.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 233
03-03 11:35:51 jdbc: RESULT_CLOSE 234
03-03 11:35:51 jdbc: 
/**/rs951.next();
03-03 11:35:51 jdbc: 
/**/rs951.getLong("id1_0_");
03-03 11:35:51 jdbc: 
/**/rs951.wasNull();
03-03 11:35:51 jdbc: 
/**/rs951.getLong("id0_1_");
03-03 11:35:51 jdbc: 
/**/rs951.wasNull();
03-03 11:35:51 jdbc: 
/**/rs951.getLong("id4_2_");
03-03 11:35:51 jdbc: 
/**/rs951.wasNull();
03-03 11:35:51 jdbc: 
/**/rs951.getLong("id4_3_");
03-03 11:35:51 jdbc: 
/**/rs951.wasNull();
03-03 11:35:51 jdbc: 
/**/rs951.getLong("contentT2_2_4_");
03-03 11:35:51 jdbc: 
/**/rs951.wasNull();
03-03 11:35:51 jdbc: 
/**/rs951.getLong("contentN1_4_");
03-03 11:35:51 jdbc: 
/**/rs951.wasNull();
03-03 11:35:51 jdbc: 
/**/rs951.next();
03-03 11:35:51 jdbc: 
/**/rs951.close();
03-03 11:35:51 jdbc: 
/**/prep950.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep950.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 196
03-03 11:35:51 jdbc: RESULT_CLOSE 235
03-03 11:35:51 jdbc: 
/**/prep950.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 233
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep951 = conn83.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 236
03-03 11:35:51 jdbc: 
/**/prep951.setLong(1, 157L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs952 = prep951.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 236
03-03 11:35:51 jdbc: RESULT_CLOSE 237
03-03 11:35:51 jdbc: 
/**/rs952.next();
03-03 11:35:51 jdbc: 
/**/rs952.getLong("id1_0_");
03-03 11:35:51 jdbc: 
/**/rs952.wasNull();
03-03 11:35:51 jdbc: 
/**/rs952.getLong("id0_1_");
03-03 11:35:51 jdbc: 
/**/rs952.wasNull();
03-03 11:35:51 jdbc: 
/**/rs952.getLong("id4_2_");
03-03 11:35:51 jdbc: 
/**/rs952.wasNull();
03-03 11:35:51 jdbc: 
/**/rs952.getLong("id4_3_");
03-03 11:35:51 jdbc: 
/**/rs952.wasNull();
03-03 11:35:51 jdbc: 
/**/rs952.getLong("contentT2_2_4_");
03-03 11:35:51 jdbc: 
/**/rs952.wasNull();
03-03 11:35:51 jdbc: 
/**/rs952.getLong("contentN1_4_");
03-03 11:35:51 jdbc: 
/**/rs952.wasNull();
03-03 11:35:51 jdbc: 
/**/rs952.next();
03-03 11:35:51 jdbc: 
/**/rs952.close();
03-03 11:35:51 jdbc: 
/**/prep951.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep951.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 196
03-03 11:35:51 jdbc: RESULT_CLOSE 238
03-03 11:35:51 jdbc: 
/**/prep951.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 236
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep952 = conn83.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 239
03-03 11:35:51 jdbc: 
/**/prep952.setLong(1, 158L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs953 = prep952.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 239
03-03 11:35:51 jdbc: RESULT_CLOSE 240
03-03 11:35:51 jdbc: 
/**/rs953.next();
03-03 11:35:51 jdbc: 
/**/rs953.getLong("id1_0_");
03-03 11:35:51 jdbc: 
/**/rs953.wasNull();
03-03 11:35:51 jdbc: 
/**/rs953.getLong("id0_1_");
03-03 11:35:51 jdbc: 
/**/rs953.wasNull();
03-03 11:35:51 jdbc: 
/**/rs953.getLong("id4_2_");
03-03 11:35:51 jdbc: 
/**/rs953.wasNull();
03-03 11:35:51 jdbc: 
/**/rs953.getLong("id4_3_");
03-03 11:35:51 jdbc: 
/**/rs953.wasNull();
03-03 11:35:51 jdbc: 
/**/rs953.getLong("contentT2_2_4_");
03-03 11:35:51 jdbc: 
/**/rs953.wasNull();
03-03 11:35:51 jdbc: 
/**/rs953.getLong("contentN1_4_");
03-03 11:35:51 jdbc: 
/**/rs953.wasNull();
03-03 11:35:51 jdbc: 
/**/rs953.next();
03-03 11:35:51 jdbc: 
/**/rs953.close();
03-03 11:35:51 jdbc: 
/**/prep952.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep952.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 196
03-03 11:35:51 jdbc: RESULT_CLOSE 241
03-03 11:35:51 jdbc: 
/**/prep952.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 239
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep953 = conn83.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 242
03-03 11:35:51 jdbc: 
/**/prep953.setLong(1, 161L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs954 = prep953.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 242
03-03 11:35:51 jdbc: RESULT_CLOSE 243
03-03 11:35:51 jdbc: 
/**/rs954.next();
03-03 11:35:51 jdbc: 
/**/rs954.getLong("id1_0_");
03-03 11:35:51 jdbc: 
/**/rs954.wasNull();
03-03 11:35:51 jdbc: 
/**/rs954.getLong("id0_1_");
03-03 11:35:51 jdbc: 
/**/rs954.wasNull();
03-03 11:35:51 jdbc: 
/**/rs954.getLong("id4_2_");
03-03 11:35:51 jdbc: 
/**/rs954.wasNull();
03-03 11:35:51 jdbc: 
/**/rs954.getLong("id4_3_");
03-03 11:35:51 jdbc: 
/**/rs954.wasNull();
03-03 11:35:51 jdbc: 
/**/rs954.getLong("contentT2_2_4_");
03-03 11:35:51 jdbc: 
/**/rs954.wasNull();
03-03 11:35:51 jdbc: 
/**/rs954.getLong("contentN1_4_");
03-03 11:35:51 jdbc: 
/**/rs954.wasNull();
03-03 11:35:51 jdbc: 
/**/rs954.next();
03-03 11:35:51 jdbc: 
/**/rs954.close();
03-03 11:35:51 jdbc: 
/**/prep953.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep953.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 196
03-03 11:35:51 jdbc: RESULT_CLOSE 244
03-03 11:35:51 jdbc: 
/**/prep953.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 242
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep954 = conn83.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 245
03-03 11:35:51 jdbc: 
/**/prep954.setLong(1, 163L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs955 = prep954.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 245
03-03 11:35:51 jdbc: RESULT_CLOSE 246
03-03 11:35:51 jdbc: 
/**/rs955.next();
03-03 11:35:51 jdbc: 
/**/rs955.getLong("id1_0_");
03-03 11:35:51 jdbc: 
/**/rs955.wasNull();
03-03 11:35:51 jdbc: 
/**/rs955.getLong("id0_1_");
03-03 11:35:51 jdbc: 
/**/rs955.wasNull();
03-03 11:35:51 jdbc: 
/**/rs955.getLong("id4_2_");
03-03 11:35:51 jdbc: 
/**/rs955.wasNull();
03-03 11:35:51 jdbc: 
/**/rs955.getLong("id4_3_");
03-03 11:35:51 jdbc: 
/**/rs955.wasNull();
03-03 11:35:51 jdbc: 
/**/rs955.getLong("author8_1_0_");
03-03 11:35:51 jdbc: 
/**/rs955.wasNull();
03-03 11:35:51 jdbc: 
/**/rs955.getLong("contentId1_0_");
03-03 11:35:51 jdbc: 
/**/rs955.wasNull();
03-03 11:35:51 jdbc: 
/**/rs955.getString("contentR3_1_0_");
03-03 11:35:51 jdbc: 
/**/rs955.wasNull();
03-03 11:35:51 jdbc: 
/**/rs955.getTimestamp("creation4_1_0_");
03-03 11:35:51 jdbc: 
/**/rs955.wasNull();
03-03 11:35:51 jdbc: 
/**/rs955.getTimestamp("lastModi5_1_0_");
03-03 11:35:51 jdbc: 
/**/rs955.wasNull();
03-03 11:35:51 jdbc: 
/**/rs955.getString("name1_0_");
03-03 11:35:51 jdbc: 
/**/rs955.wasNull();
03-03 11:35:51 jdbc: 
/**/rs955.getLong("parent9_1_0_");
03-03 11:35:51 jdbc: 
/**/rs955.wasNull();
03-03 11:35:51 jdbc: 
/**/rs955.getBoolean("publicated1_0_");
03-03 11:35:51 jdbc: 
/**/rs955.wasNull();
03-03 11:35:51 jdbc: 
/**/rs955.getString("name4_2_");
03-03 11:35:51 jdbc: 
/**/rs955.wasNull();
03-03 11:35:51 jdbc: 
/**/rs955.getLong("parent3_4_2_");
03-03 11:35:51 jdbc: 
/**/rs955.wasNull();
03-03 11:35:51 jdbc: 
/**/rs955.getLong("contentT2_2_4_");
03-03 11:35:51 jdbc: 
/**/rs955.wasNull();
03-03 11:35:51 jdbc: 
/**/rs955.getLong("contentN1_4_");
03-03 11:35:51 jdbc: 
/**/rs955.wasNull();
03-03 11:35:51 jdbc: 
/**/rs955.next();
03-03 11:35:51 jdbc: 
/**/rs955.close();
03-03 11:35:51 jdbc: 
/**/prep954.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep954.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 196
03-03 11:35:51 jdbc: RESULT_CLOSE 247
03-03 11:35:51 jdbc: 
/**/prep954.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 245
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep955 = conn83.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 248
03-03 11:35:51 jdbc: 
/**/prep955.setLong(1, 51L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs956 = prep955.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 248
03-03 11:35:51 jdbc: RESULT_CLOSE 249
03-03 11:35:51 jdbc: 
/**/rs956.next();
03-03 11:35:51 jdbc: 
/**/rs956.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs956.wasNull();
03-03 11:35:51 jdbc: 
/**/rs956.getLong("contentN1_1_1_");
03-03 11:35:51 jdbc: 
/**/rs956.wasNull();
03-03 11:35:51 jdbc: 
/**/rs956.getLong("contentT2_1_");
03-03 11:35:51 jdbc: 
/**/rs956.wasNull();
03-03 11:35:51 jdbc: 
/**/rs956.next();
03-03 11:35:51 jdbc: 
/**/rs956.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs956.wasNull();
03-03 11:35:51 jdbc: 
/**/rs956.getLong("contentN1_1_1_");
03-03 11:35:51 jdbc: 
/**/rs956.wasNull();
03-03 11:35:51 jdbc: 
/**/rs956.getLong("contentT2_1_");
03-03 11:35:51 jdbc: 
/**/rs956.wasNull();
03-03 11:35:51 jdbc: 
/**/rs956.next();
03-03 11:35:51 jdbc: 
/**/rs956.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs956.wasNull();
03-03 11:35:51 jdbc: 
/**/rs956.getLong("contentN1_1_1_");
03-03 11:35:51 jdbc: 
/**/rs956.wasNull();
03-03 11:35:51 jdbc: 
/**/rs956.getLong("contentT2_1_");
03-03 11:35:51 jdbc: 
/**/rs956.wasNull();
03-03 11:35:51 jdbc: 
/**/rs956.next();
03-03 11:35:51 jdbc: 
/**/rs956.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs956.wasNull();
03-03 11:35:51 jdbc: 
/**/rs956.getLong("contentN1_1_1_");
03-03 11:35:51 jdbc: 
/**/rs956.wasNull();
03-03 11:35:51 jdbc: 
/**/rs956.getLong("contentT2_1_");
03-03 11:35:51 jdbc: 
/**/rs956.wasNull();
03-03 11:35:51 jdbc: 
/**/rs956.next();
03-03 11:35:51 jdbc: 
/**/rs956.close();
03-03 11:35:51 jdbc: 
/**/prep955.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep955.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 196
03-03 11:35:51 jdbc: RESULT_CLOSE 250
03-03 11:35:51 jdbc: 
/**/prep955.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 248
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep956 = conn83.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 251
03-03 11:35:51 jdbc: 
/**/prep956.setLong(1, 164L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs957 = prep956.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 251
03-03 11:35:51 jdbc: RESULT_CLOSE 252
03-03 11:35:51 jdbc: 
/**/rs957.next();
03-03 11:35:51 jdbc: 
/**/rs957.getLong("id1_0_");
03-03 11:35:51 jdbc: 
/**/rs957.wasNull();
03-03 11:35:51 jdbc: 
/**/rs957.getLong("id0_1_");
03-03 11:35:51 jdbc: 
/**/rs957.wasNull();
03-03 11:35:51 jdbc: 
/**/rs957.getLong("id4_2_");
03-03 11:35:51 jdbc: 
/**/rs957.wasNull();
03-03 11:35:51 jdbc: 
/**/rs957.getLong("id4_3_");
03-03 11:35:51 jdbc: 
/**/rs957.wasNull();
03-03 11:35:51 jdbc: 
/**/rs957.getLong("contentT2_2_4_");
03-03 11:35:51 jdbc: 
/**/rs957.wasNull();
03-03 11:35:51 jdbc: 
/**/rs957.getLong("contentN1_4_");
03-03 11:35:51 jdbc: 
/**/rs957.wasNull();
03-03 11:35:51 jdbc: 
/**/rs957.next();
03-03 11:35:51 jdbc: 
/**/rs957.getLong("id1_0_");
03-03 11:35:51 jdbc: 
/**/rs957.wasNull();
03-03 11:35:51 jdbc: 
/**/rs957.getLong("id0_1_");
03-03 11:35:51 jdbc: 
/**/rs957.wasNull();
03-03 11:35:51 jdbc: 
/**/rs957.getLong("id4_2_");
03-03 11:35:51 jdbc: 
/**/rs957.wasNull();
03-03 11:35:51 jdbc: 
/**/rs957.getLong("id4_3_");
03-03 11:35:51 jdbc: 
/**/rs957.wasNull();
03-03 11:35:51 jdbc: 
/**/rs957.getLong("author8_1_0_");
03-03 11:35:51 jdbc: 
/**/rs957.wasNull();
03-03 11:35:51 jdbc: 
/**/rs957.getLong("contentId1_0_");
03-03 11:35:51 jdbc: 
/**/rs957.wasNull();
03-03 11:35:51 jdbc: 
/**/rs957.getString("contentR3_1_0_");
03-03 11:35:51 jdbc: 
/**/rs957.wasNull();
03-03 11:35:51 jdbc: 
/**/rs957.getTimestamp("creation4_1_0_");
03-03 11:35:51 jdbc: 
/**/rs957.wasNull();
03-03 11:35:51 jdbc: 
/**/rs957.getTimestamp("lastModi5_1_0_");
03-03 11:35:51 jdbc: 
/**/rs957.wasNull();
03-03 11:35:51 jdbc: 
/**/rs957.getString("name1_0_");
03-03 11:35:51 jdbc: 
/**/rs957.wasNull();
03-03 11:35:51 jdbc: 
/**/rs957.getLong("parent9_1_0_");
03-03 11:35:51 jdbc: 
/**/rs957.wasNull();
03-03 11:35:51 jdbc: 
/**/rs957.getBoolean("publicated1_0_");
03-03 11:35:51 jdbc: 
/**/rs957.wasNull();
03-03 11:35:51 jdbc: 
/**/rs957.getString("name4_2_");
03-03 11:35:51 jdbc: 
/**/rs957.wasNull();
03-03 11:35:51 jdbc: 
/**/rs957.getLong("parent3_4_2_");
03-03 11:35:51 jdbc: 
/**/rs957.wasNull();
03-03 11:35:51 jdbc: 
/**/rs957.getLong("contentT2_2_4_");
03-03 11:35:51 jdbc: 
/**/rs957.wasNull();
03-03 11:35:51 jdbc: 
/**/rs957.getLong("contentN1_4_");
03-03 11:35:51 jdbc: 
/**/rs957.wasNull();
03-03 11:35:51 jdbc: 
/**/rs957.next();
03-03 11:35:51 jdbc: 
/**/rs957.close();
03-03 11:35:51 jdbc: 
/**/prep956.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep956.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 196
03-03 11:35:51 jdbc: RESULT_CLOSE 253
03-03 11:35:51 jdbc: 
/**/prep956.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 251
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep957 = conn83.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 254
03-03 11:35:51 jdbc: 
/**/prep957.setLong(1, 57L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs958 = prep957.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 254
03-03 11:35:51 jdbc: RESULT_CLOSE 255
03-03 11:35:51 jdbc: 
/**/rs958.next();
03-03 11:35:51 jdbc: 
/**/rs958.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs958.wasNull();
03-03 11:35:51 jdbc: 
/**/rs958.getLong("contentN1_1_1_");
03-03 11:35:51 jdbc: 
/**/rs958.wasNull();
03-03 11:35:51 jdbc: 
/**/rs958.getLong("contentT2_1_");
03-03 11:35:51 jdbc: 
/**/rs958.wasNull();
03-03 11:35:51 jdbc: 
/**/rs958.next();
03-03 11:35:51 jdbc: 
/**/rs958.close();
03-03 11:35:51 jdbc: 
/**/prep957.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep957.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 196
03-03 11:35:51 jdbc: RESULT_CLOSE 256
03-03 11:35:51 jdbc: 
/**/prep957.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 254
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep958 = conn83.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 257
03-03 11:35:51 jdbc: 
/**/prep958.setLong(1, 165L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs959 = prep958.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 257
03-03 11:35:51 jdbc: RESULT_CLOSE 258
03-03 11:35:51 jdbc: 
/**/rs959.next();
03-03 11:35:51 jdbc: 
/**/rs959.getLong("id1_0_");
03-03 11:35:51 jdbc: 
/**/rs959.wasNull();
03-03 11:35:51 jdbc: 
/**/rs959.getLong("id0_1_");
03-03 11:35:51 jdbc: 
/**/rs959.wasNull();
03-03 11:35:51 jdbc: 
/**/rs959.getLong("id4_2_");
03-03 11:35:51 jdbc: 
/**/rs959.wasNull();
03-03 11:35:51 jdbc: 
/**/rs959.getLong("id4_3_");
03-03 11:35:51 jdbc: 
/**/rs959.wasNull();
03-03 11:35:51 jdbc: 
/**/rs959.getLong("contentT2_2_4_");
03-03 11:35:51 jdbc: 
/**/rs959.wasNull();
03-03 11:35:51 jdbc: 
/**/rs959.getLong("contentN1_4_");
03-03 11:35:51 jdbc: 
/**/rs959.wasNull();
03-03 11:35:51 jdbc: 
/**/rs959.next();
03-03 11:35:51 jdbc: 
/**/rs959.close();
03-03 11:35:51 jdbc: 
/**/prep958.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep958.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: SESSION_PREPARE 260
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 260
03-03 11:35:51 jdbc: RESULT_CLOSE 259
03-03 11:35:51 jdbc: 
/**/prep958.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 257
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep959 = conn83.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 261
03-03 11:35:51 jdbc: 
/**/prep959.setLong(1, 166L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs960 = prep959.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 261
03-03 11:35:51 jdbc: RESULT_CLOSE 262
03-03 11:35:51 jdbc: 
/**/rs960.next();
03-03 11:35:51 jdbc: 
/**/rs960.getLong("id1_0_");
03-03 11:35:51 jdbc: 
/**/rs960.wasNull();
03-03 11:35:51 jdbc: 
/**/rs960.getLong("id0_1_");
03-03 11:35:51 jdbc: 
/**/rs960.wasNull();
03-03 11:35:51 jdbc: 
/**/rs960.getLong("id4_2_");
03-03 11:35:51 jdbc: 
/**/rs960.wasNull();
03-03 11:35:51 jdbc: 
/**/rs960.getLong("id4_3_");
03-03 11:35:51 jdbc: 
/**/rs960.wasNull();
03-03 11:35:51 jdbc: 
/**/rs960.getLong("contentT2_2_4_");
03-03 11:35:51 jdbc: 
/**/rs960.wasNull();
03-03 11:35:51 jdbc: 
/**/rs960.getLong("contentN1_4_");
03-03 11:35:51 jdbc: 
/**/rs960.wasNull();
03-03 11:35:51 jdbc: 
/**/rs960.next();
03-03 11:35:51 jdbc: 
/**/rs960.close();
03-03 11:35:51 jdbc: 
/**/prep959.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep959.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 260
03-03 11:35:51 jdbc: RESULT_CLOSE 263
03-03 11:35:51 jdbc: 
/**/prep959.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 261
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep960 = conn83.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 264
03-03 11:35:51 jdbc: 
/**/prep960.setLong(1, 167L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs961 = prep960.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 264
03-03 11:35:51 jdbc: RESULT_CLOSE 265
03-03 11:35:51 jdbc: 
/**/rs961.next();
03-03 11:35:51 jdbc: 
/**/rs961.getLong("id1_0_");
03-03 11:35:51 jdbc: 
/**/rs961.wasNull();
03-03 11:35:51 jdbc: 
/**/rs961.getLong("id0_1_");
03-03 11:35:51 jdbc: 
/**/rs961.wasNull();
03-03 11:35:51 jdbc: 
/**/rs961.getLong("id4_2_");
03-03 11:35:51 jdbc: 
/**/rs961.wasNull();
03-03 11:35:51 jdbc: 
/**/rs961.getLong("id4_3_");
03-03 11:35:51 jdbc: 
/**/rs961.wasNull();
03-03 11:35:51 jdbc: 
/**/rs961.getLong("author8_1_0_");
03-03 11:35:51 jdbc: 
/**/rs961.wasNull();
03-03 11:35:51 jdbc: 
/**/rs961.getLong("contentId1_0_");
03-03 11:35:51 jdbc: 
/**/rs961.wasNull();
03-03 11:35:51 jdbc: 
/**/rs961.getString("contentR3_1_0_");
03-03 11:35:51 jdbc: 
/**/rs961.wasNull();
03-03 11:35:51 jdbc: 
/**/rs961.getTimestamp("creation4_1_0_");
03-03 11:35:51 jdbc: 
/**/rs961.wasNull();
03-03 11:35:51 jdbc: 
/**/rs961.getTimestamp("lastModi5_1_0_");
03-03 11:35:51 jdbc: 
/**/rs961.wasNull();
03-03 11:35:51 jdbc: 
/**/rs961.getString("name1_0_");
03-03 11:35:51 jdbc: 
/**/rs961.wasNull();
03-03 11:35:51 jdbc: 
/**/rs961.getLong("parent9_1_0_");
03-03 11:35:51 jdbc: 
/**/rs961.wasNull();
03-03 11:35:51 jdbc: 
/**/rs961.getBoolean("publicated1_0_");
03-03 11:35:51 jdbc: 
/**/rs961.wasNull();
03-03 11:35:51 jdbc: 
/**/rs961.getString("name4_2_");
03-03 11:35:51 jdbc: 
/**/rs961.wasNull();
03-03 11:35:51 jdbc: 
/**/rs961.getLong("parent3_4_2_");
03-03 11:35:51 jdbc: 
/**/rs961.wasNull();
03-03 11:35:51 jdbc: 
/**/rs961.getLong("contentT2_2_4_");
03-03 11:35:51 jdbc: 
/**/rs961.wasNull();
03-03 11:35:51 jdbc: 
/**/rs961.getLong("contentN1_4_");
03-03 11:35:51 jdbc: 
/**/rs961.wasNull();
03-03 11:35:51 jdbc: 
/**/rs961.next();
03-03 11:35:51 jdbc: 
/**/rs961.close();
03-03 11:35:51 jdbc: 
/**/prep960.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep960.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 260
03-03 11:35:51 jdbc: RESULT_CLOSE 266
03-03 11:35:51 jdbc: 
/**/prep960.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 264
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep961 = conn83.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 267
03-03 11:35:51 jdbc: 
/**/prep961.setLong(1, 53L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs962 = prep961.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 267
03-03 11:35:51 jdbc: RESULT_CLOSE 268
03-03 11:35:51 jdbc: 
/**/rs962.next();
03-03 11:35:51 jdbc: 
/**/rs962.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs962.wasNull();
03-03 11:35:51 jdbc: 
/**/rs962.getLong("contentN1_1_1_");
03-03 11:35:51 jdbc: 
/**/rs962.wasNull();
03-03 11:35:51 jdbc: 
/**/rs962.getLong("contentT2_1_");
03-03 11:35:51 jdbc: 
/**/rs962.wasNull();
03-03 11:35:51 jdbc: 
/**/rs962.next();
03-03 11:35:51 jdbc: 
/**/rs962.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs962.wasNull();
03-03 11:35:51 jdbc: 
/**/rs962.getLong("contentN1_1_1_");
03-03 11:35:51 jdbc: 
/**/rs962.wasNull();
03-03 11:35:51 jdbc: 
/**/rs962.getLong("contentT2_1_");
03-03 11:35:51 jdbc: 
/**/rs962.wasNull();
03-03 11:35:51 jdbc: 
/**/rs962.next();
03-03 11:35:51 jdbc: 
/**/rs962.close();
03-03 11:35:51 jdbc: 
/**/prep961.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep961.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 260
03-03 11:35:51 jdbc: RESULT_CLOSE 269
03-03 11:35:51 jdbc: 
/**/prep961.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 267
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep962 = conn83.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 270
03-03 11:35:51 jdbc: 
/**/prep962.setLong(1, 168L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs963 = prep962.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 270
03-03 11:35:51 jdbc: RESULT_CLOSE 271
03-03 11:35:51 jdbc: 
/**/rs963.next();
03-03 11:35:51 jdbc: 
/**/rs963.getLong("id1_0_");
03-03 11:35:51 jdbc: 
/**/rs963.wasNull();
03-03 11:35:51 jdbc: 
/**/rs963.getLong("id0_1_");
03-03 11:35:51 jdbc: 
/**/rs963.wasNull();
03-03 11:35:51 jdbc: 
/**/rs963.getLong("id4_2_");
03-03 11:35:51 jdbc: 
/**/rs963.wasNull();
03-03 11:35:51 jdbc: 
/**/rs963.getLong("id4_3_");
03-03 11:35:51 jdbc: 
/**/rs963.wasNull();
03-03 11:35:51 jdbc: 
/**/rs963.getLong("author8_1_0_");
03-03 11:35:51 jdbc: 
/**/rs963.wasNull();
03-03 11:35:51 jdbc: 
/**/rs963.getLong("contentId1_0_");
03-03 11:35:51 jdbc: 
/**/rs963.wasNull();
03-03 11:35:51 jdbc: 
/**/rs963.getString("contentR3_1_0_");
03-03 11:35:51 jdbc: 
/**/rs963.wasNull();
03-03 11:35:51 jdbc: 
/**/rs963.getTimestamp("creation4_1_0_");
03-03 11:35:51 jdbc: 
/**/rs963.wasNull();
03-03 11:35:51 jdbc: 
/**/rs963.getTimestamp("lastModi5_1_0_");
03-03 11:35:51 jdbc: 
/**/rs963.wasNull();
03-03 11:35:51 jdbc: 
/**/rs963.getString("name1_0_");
03-03 11:35:51 jdbc: 
/**/rs963.wasNull();
03-03 11:35:51 jdbc: 
/**/rs963.getLong("parent9_1_0_");
03-03 11:35:51 jdbc: 
/**/rs963.wasNull();
03-03 11:35:51 jdbc: 
/**/rs963.getBoolean("publicated1_0_");
03-03 11:35:51 jdbc: 
/**/rs963.wasNull();
03-03 11:35:51 jdbc: 
/**/rs963.getLong("contentT2_2_4_");
03-03 11:35:51 jdbc: 
/**/rs963.wasNull();
03-03 11:35:51 jdbc: 
/**/rs963.getLong("contentN1_4_");
03-03 11:35:51 jdbc: 
/**/rs963.wasNull();
03-03 11:35:51 jdbc: 
/**/rs963.next();
03-03 11:35:51 jdbc: 
/**/rs963.close();
03-03 11:35:51 jdbc: 
/**/prep962.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep962.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 260
03-03 11:35:51 jdbc: RESULT_CLOSE 272
03-03 11:35:51 jdbc: 
/**/prep962.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 270
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep963 = conn83.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 273
03-03 11:35:51 jdbc: 
/**/prep963.setLong(1, 54L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs964 = prep963.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 273
03-03 11:35:51 jdbc: RESULT_CLOSE 274
03-03 11:35:51 jdbc: 
/**/rs964.next();
03-03 11:35:51 jdbc: 
/**/rs964.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs964.wasNull();
03-03 11:35:51 jdbc: 
/**/rs964.getLong("contentN1_1_1_");
03-03 11:35:51 jdbc: 
/**/rs964.wasNull();
03-03 11:35:51 jdbc: 
/**/rs964.getLong("contentT2_1_");
03-03 11:35:51 jdbc: 
/**/rs964.wasNull();
03-03 11:35:51 jdbc: 
/**/rs964.next();
03-03 11:35:51 jdbc: 
/**/rs964.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs964.wasNull();
03-03 11:35:51 jdbc: 
/**/rs964.getLong("contentN1_1_1_");
03-03 11:35:51 jdbc: 
/**/rs964.wasNull();
03-03 11:35:51 jdbc: 
/**/rs964.getLong("contentT2_1_");
03-03 11:35:51 jdbc: 
/**/rs964.wasNull();
03-03 11:35:51 jdbc: 
/**/rs964.next();
03-03 11:35:51 jdbc: 
/**/rs964.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs964.wasNull();
03-03 11:35:51 jdbc: 
/**/rs964.getLong("contentN1_1_1_");
03-03 11:35:51 jdbc: 
/**/rs964.wasNull();
03-03 11:35:51 jdbc: 
/**/rs964.getLong("contentT2_1_");
03-03 11:35:51 jdbc: 
/**/rs964.wasNull();
03-03 11:35:51 jdbc: 
/**/rs964.next();
03-03 11:35:51 jdbc: 
/**/rs964.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs964.wasNull();
03-03 11:35:51 jdbc: 
/**/rs964.getLong("contentN1_1_1_");
03-03 11:35:51 jdbc: 
/**/rs964.wasNull();
03-03 11:35:51 jdbc: 
/**/rs964.getLong("contentT2_1_");
03-03 11:35:51 jdbc: 
/**/rs964.wasNull();
03-03 11:35:51 jdbc: 
/**/rs964.next();
03-03 11:35:51 jdbc: 
/**/rs964.close();
03-03 11:35:51 jdbc: 
/**/prep963.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep963.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 260
03-03 11:35:51 jdbc: RESULT_CLOSE 275
03-03 11:35:51 jdbc: 
/**/prep963.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 273
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep964 = conn83.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 276
03-03 11:35:51 jdbc: 
/**/prep964.setLong(1, 169L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs965 = prep964.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 276
03-03 11:35:51 jdbc: RESULT_CLOSE 277
03-03 11:35:51 jdbc: 
/**/rs965.next();
03-03 11:35:51 jdbc: 
/**/rs965.getLong("id1_0_");
03-03 11:35:51 jdbc: 
/**/rs965.wasNull();
03-03 11:35:51 jdbc: 
/**/rs965.getLong("id0_1_");
03-03 11:35:51 jdbc: 
/**/rs965.wasNull();
03-03 11:35:51 jdbc: 
/**/rs965.getLong("id4_2_");
03-03 11:35:51 jdbc: 
/**/rs965.wasNull();
03-03 11:35:51 jdbc: 
/**/rs965.getLong("id4_3_");
03-03 11:35:51 jdbc: 
/**/rs965.wasNull();
03-03 11:35:51 jdbc: 
/**/rs965.getLong("contentT2_2_4_");
03-03 11:35:51 jdbc: 
/**/rs965.wasNull();
03-03 11:35:51 jdbc: 
/**/rs965.getLong("contentN1_4_");
03-03 11:35:51 jdbc: 
/**/rs965.wasNull();
03-03 11:35:51 jdbc: 
/**/rs965.next();
03-03 11:35:51 jdbc: 
/**/rs965.close();
03-03 11:35:51 jdbc: 
/**/prep964.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep964.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 260
03-03 11:35:51 jdbc: RESULT_CLOSE 278
03-03 11:35:51 jdbc: 
/**/prep964.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 276
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep965 = conn83.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 279
03-03 11:35:51 jdbc: 
/**/prep965.setLong(1, 170L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs966 = prep965.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 279
03-03 11:35:51 jdbc: RESULT_CLOSE 280
03-03 11:35:51 jdbc: 
/**/rs966.next();
03-03 11:35:51 jdbc: 
/**/rs966.getLong("id1_0_");
03-03 11:35:51 jdbc: 
/**/rs966.wasNull();
03-03 11:35:51 jdbc: 
/**/rs966.getLong("id0_1_");
03-03 11:35:51 jdbc: 
/**/rs966.wasNull();
03-03 11:35:51 jdbc: 
/**/rs966.getLong("id4_2_");
03-03 11:35:51 jdbc: 
/**/rs966.wasNull();
03-03 11:35:51 jdbc: 
/**/rs966.getLong("id4_3_");
03-03 11:35:51 jdbc: 
/**/rs966.wasNull();
03-03 11:35:51 jdbc: 
/**/rs966.getLong("contentT2_2_4_");
03-03 11:35:51 jdbc: 
/**/rs966.wasNull();
03-03 11:35:51 jdbc: 
/**/rs966.getLong("contentN1_4_");
03-03 11:35:51 jdbc: 
/**/rs966.wasNull();
03-03 11:35:51 jdbc: 
/**/rs966.next();
03-03 11:35:51 jdbc: 
/**/rs966.close();
03-03 11:35:51 jdbc: 
/**/prep965.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep965.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 260
03-03 11:35:51 jdbc: RESULT_CLOSE 281
03-03 11:35:51 jdbc: 
/**/prep965.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 279
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep966 = conn83.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 282
03-03 11:35:51 jdbc: 
/**/prep966.setLong(1, 178L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs967 = prep966.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 282
03-03 11:35:51 jdbc: RESULT_CLOSE 283
03-03 11:35:51 jdbc: 
/**/rs967.next();
03-03 11:35:51 jdbc: 
/**/rs967.getLong("id1_0_");
03-03 11:35:51 jdbc: 
/**/rs967.wasNull();
03-03 11:35:51 jdbc: 
/**/rs967.getLong("id0_1_");
03-03 11:35:51 jdbc: 
/**/rs967.wasNull();
03-03 11:35:51 jdbc: 
/**/rs967.getLong("id4_2_");
03-03 11:35:51 jdbc: 
/**/rs967.wasNull();
03-03 11:35:51 jdbc: 
/**/rs967.getLong("id4_3_");
03-03 11:35:51 jdbc: 
/**/rs967.wasNull();
03-03 11:35:51 jdbc: 
/**/rs967.getLong("author8_1_0_");
03-03 11:35:51 jdbc: 
/**/rs967.wasNull();
03-03 11:35:51 jdbc: 
/**/rs967.getLong("contentId1_0_");
03-03 11:35:51 jdbc: 
/**/rs967.wasNull();
03-03 11:35:51 jdbc: 
/**/rs967.getString("contentR3_1_0_");
03-03 11:35:51 jdbc: 
/**/rs967.wasNull();
03-03 11:35:51 jdbc: 
/**/rs967.getTimestamp("creation4_1_0_");
03-03 11:35:51 jdbc: 
/**/rs967.wasNull();
03-03 11:35:51 jdbc: 
/**/rs967.getTimestamp("lastModi5_1_0_");
03-03 11:35:51 jdbc: 
/**/rs967.wasNull();
03-03 11:35:51 jdbc: 
/**/rs967.getString("name1_0_");
03-03 11:35:51 jdbc: 
/**/rs967.wasNull();
03-03 11:35:51 jdbc: 
/**/rs967.getLong("parent9_1_0_");
03-03 11:35:51 jdbc: 
/**/rs967.wasNull();
03-03 11:35:51 jdbc: 
/**/rs967.getBoolean("publicated1_0_");
03-03 11:35:51 jdbc: 
/**/rs967.wasNull();
03-03 11:35:51 jdbc: 
/**/rs967.getLong("contentT2_2_4_");
03-03 11:35:51 jdbc: 
/**/rs967.wasNull();
03-03 11:35:51 jdbc: 
/**/rs967.getLong("contentN1_4_");
03-03 11:35:51 jdbc: 
/**/rs967.wasNull();
03-03 11:35:51 jdbc: 
/**/rs967.next();
03-03 11:35:51 jdbc: 
/**/rs967.close();
03-03 11:35:51 jdbc: 
/**/prep966.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep966.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 260
03-03 11:35:51 jdbc: RESULT_CLOSE 284
03-03 11:35:51 jdbc: 
/**/prep966.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 282
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep967 = conn83.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 285
03-03 11:35:51 jdbc: 
/**/prep967.setLong(1, 65L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs968 = prep967.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 285
03-03 11:35:51 jdbc: RESULT_CLOSE 286
03-03 11:35:51 jdbc: 
/**/rs968.next();
03-03 11:35:51 jdbc: 
/**/rs968.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs968.wasNull();
03-03 11:35:51 jdbc: 
/**/rs968.getLong("contentN1_1_1_");
03-03 11:35:51 jdbc: 
/**/rs968.wasNull();
03-03 11:35:51 jdbc: 
/**/rs968.getLong("contentT2_1_");
03-03 11:35:51 jdbc: 
/**/rs968.wasNull();
03-03 11:35:51 jdbc: 
/**/rs968.next();
03-03 11:35:51 jdbc: 
/**/rs968.close();
03-03 11:35:51 jdbc: 
/**/prep967.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep967.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 260
03-03 11:35:51 jdbc: RESULT_CLOSE 287
03-03 11:35:51 jdbc: 
/**/prep967.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 285
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep968 = conn83.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 288
03-03 11:35:51 jdbc: 
/**/prep968.setLong(1, 180L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs969 = prep968.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 288
03-03 11:35:51 jdbc: RESULT_CLOSE 289
03-03 11:35:51 jdbc: 
/**/rs969.next();
03-03 11:35:51 jdbc: 
/**/rs969.getLong("id1_0_");
03-03 11:35:51 jdbc: 
/**/rs969.wasNull();
03-03 11:35:51 jdbc: 
/**/rs969.getLong("id0_1_");
03-03 11:35:51 jdbc: 
/**/rs969.wasNull();
03-03 11:35:51 jdbc: 
/**/rs969.getLong("id4_2_");
03-03 11:35:51 jdbc: 
/**/rs969.wasNull();
03-03 11:35:51 jdbc: 
/**/rs969.getLong("id4_3_");
03-03 11:35:51 jdbc: 
/**/rs969.wasNull();
03-03 11:35:51 jdbc: 
/**/rs969.getLong("author8_1_0_");
03-03 11:35:51 jdbc: 
/**/rs969.wasNull();
03-03 11:35:51 jdbc: 
/**/rs969.getLong("contentId1_0_");
03-03 11:35:51 jdbc: 
/**/rs969.wasNull();
03-03 11:35:51 jdbc: 
/**/rs969.getString("contentR3_1_0_");
03-03 11:35:51 jdbc: 
/**/rs969.wasNull();
03-03 11:35:51 jdbc: 
/**/rs969.getTimestamp("creation4_1_0_");
03-03 11:35:51 jdbc: 
/**/rs969.wasNull();
03-03 11:35:51 jdbc: 
/**/rs969.getTimestamp("lastModi5_1_0_");
03-03 11:35:51 jdbc: 
/**/rs969.wasNull();
03-03 11:35:51 jdbc: 
/**/rs969.getString("name1_0_");
03-03 11:35:51 jdbc: 
/**/rs969.wasNull();
03-03 11:35:51 jdbc: 
/**/rs969.getLong("parent9_1_0_");
03-03 11:35:51 jdbc: 
/**/rs969.wasNull();
03-03 11:35:51 jdbc: 
/**/rs969.getBoolean("publicated1_0_");
03-03 11:35:51 jdbc: 
/**/rs969.wasNull();
03-03 11:35:51 jdbc: 
/**/rs969.getString("name4_2_");
03-03 11:35:51 jdbc: 
/**/rs969.wasNull();
03-03 11:35:51 jdbc: 
/**/rs969.getLong("parent3_4_2_");
03-03 11:35:51 jdbc: 
/**/rs969.wasNull();
03-03 11:35:51 jdbc: 
/**/rs969.getLong("contentT2_2_4_");
03-03 11:35:51 jdbc: 
/**/rs969.wasNull();
03-03 11:35:51 jdbc: 
/**/rs969.getLong("contentN1_4_");
03-03 11:35:51 jdbc: 
/**/rs969.wasNull();
03-03 11:35:51 jdbc: 
/**/rs969.next();
03-03 11:35:51 jdbc: 
/**/rs969.close();
03-03 11:35:51 jdbc: 
/**/prep968.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep968.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 260
03-03 11:35:51 jdbc: RESULT_CLOSE 290
03-03 11:35:51 jdbc: 
/**/prep968.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 288
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep969 = conn83.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 291
03-03 11:35:51 jdbc: 
/**/prep969.setLong(1, 66L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs970 = prep969.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 291
03-03 11:35:51 jdbc: RESULT_CLOSE 292
03-03 11:35:51 jdbc: 
/**/rs970.next();
03-03 11:35:51 jdbc: 
/**/rs970.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs970.wasNull();
03-03 11:35:51 jdbc: 
/**/rs970.getLong("contentN1_1_1_");
03-03 11:35:51 jdbc: 
/**/rs970.wasNull();
03-03 11:35:51 jdbc: 
/**/rs970.getLong("contentT2_1_");
03-03 11:35:51 jdbc: 
/**/rs970.wasNull();
03-03 11:35:51 jdbc: 
/**/rs970.next();
03-03 11:35:51 jdbc: 
/**/rs970.close();
03-03 11:35:51 jdbc: 
/**/prep969.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep969.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 260
03-03 11:35:51 jdbc: RESULT_CLOSE 293
03-03 11:35:51 jdbc: 
/**/prep969.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 291
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep970 = conn83.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 294
03-03 11:35:51 jdbc: 
/**/prep970.setLong(1, 182L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs971 = prep970.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 294
03-03 11:35:51 jdbc: RESULT_CLOSE 295
03-03 11:35:51 jdbc: 
/**/rs971.next();
03-03 11:35:51 jdbc: 
/**/rs971.getLong("id1_0_");
03-03 11:35:51 jdbc: 
/**/rs971.wasNull();
03-03 11:35:51 jdbc: 
/**/rs971.getLong("id0_1_");
03-03 11:35:51 jdbc: 
/**/rs971.wasNull();
03-03 11:35:51 jdbc: 
/**/rs971.getLong("id4_2_");
03-03 11:35:51 jdbc: 
/**/rs971.wasNull();
03-03 11:35:51 jdbc: 
/**/rs971.getLong("id4_3_");
03-03 11:35:51 jdbc: 
/**/rs971.wasNull();
03-03 11:35:51 jdbc: 
/**/rs971.getLong("author8_1_0_");
03-03 11:35:51 jdbc: 
/**/rs971.wasNull();
03-03 11:35:51 jdbc: 
/**/rs971.getLong("contentId1_0_");
03-03 11:35:51 jdbc: 
/**/rs971.wasNull();
03-03 11:35:51 jdbc: 
/**/rs971.getString("contentR3_1_0_");
03-03 11:35:51 jdbc: 
/**/rs971.wasNull();
03-03 11:35:51 jdbc: 
/**/rs971.getTimestamp("creation4_1_0_");
03-03 11:35:51 jdbc: 
/**/rs971.wasNull();
03-03 11:35:51 jdbc: 
/**/rs971.getTimestamp("lastModi5_1_0_");
03-03 11:35:51 jdbc: 
/**/rs971.wasNull();
03-03 11:35:51 jdbc: 
/**/rs971.getString("name1_0_");
03-03 11:35:51 jdbc: 
/**/rs971.wasNull();
03-03 11:35:51 jdbc: 
/**/rs971.getLong("parent9_1_0_");
03-03 11:35:51 jdbc: 
/**/rs971.wasNull();
03-03 11:35:51 jdbc: 
/**/rs971.getBoolean("publicated1_0_");
03-03 11:35:51 jdbc: 
/**/rs971.wasNull();
03-03 11:35:51 jdbc: 
/**/rs971.getLong("contentT2_2_4_");
03-03 11:35:51 jdbc: 
/**/rs971.wasNull();
03-03 11:35:51 jdbc: 
/**/rs971.getLong("contentN1_4_");
03-03 11:35:51 jdbc: 
/**/rs971.wasNull();
03-03 11:35:51 jdbc: 
/**/rs971.next();
03-03 11:35:51 jdbc: 
/**/rs971.getLong("id1_0_");
03-03 11:35:51 jdbc: 
/**/rs971.wasNull();
03-03 11:35:51 jdbc: 
/**/rs971.getLong("id0_1_");
03-03 11:35:51 jdbc: 
/**/rs971.wasNull();
03-03 11:35:51 jdbc: 
/**/rs971.getLong("id4_2_");
03-03 11:35:51 jdbc: 
/**/rs971.wasNull();
03-03 11:35:51 jdbc: 
/**/rs971.getLong("id4_3_");
03-03 11:35:51 jdbc: 
/**/rs971.wasNull();
03-03 11:35:51 jdbc: 
/**/rs971.getLong("author8_1_0_");
03-03 11:35:51 jdbc: 
/**/rs971.wasNull();
03-03 11:35:51 jdbc: 
/**/rs971.getLong("contentId1_0_");
03-03 11:35:51 jdbc: 
/**/rs971.wasNull();
03-03 11:35:51 jdbc: 
/**/rs971.getString("contentR3_1_0_");
03-03 11:35:51 jdbc: 
/**/rs971.wasNull();
03-03 11:35:51 jdbc: 
/**/rs971.getTimestamp("creation4_1_0_");
03-03 11:35:51 jdbc: 
/**/rs971.wasNull();
03-03 11:35:51 jdbc: 
/**/rs971.getTimestamp("lastModi5_1_0_");
03-03 11:35:51 jdbc: 
/**/rs971.wasNull();
03-03 11:35:51 jdbc: 
/**/rs971.getString("name1_0_");
03-03 11:35:51 jdbc: 
/**/rs971.wasNull();
03-03 11:35:51 jdbc: 
/**/rs971.getLong("parent9_1_0_");
03-03 11:35:51 jdbc: 
/**/rs971.wasNull();
03-03 11:35:51 jdbc: 
/**/rs971.getBoolean("publicated1_0_");
03-03 11:35:51 jdbc: 
/**/rs971.wasNull();
03-03 11:35:51 jdbc: 
/**/rs971.getLong("contentT2_2_4_");
03-03 11:35:51 jdbc: 
/**/rs971.wasNull();
03-03 11:35:51 jdbc: 
/**/rs971.getLong("contentN1_4_");
03-03 11:35:51 jdbc: 
/**/rs971.wasNull();
03-03 11:35:51 jdbc: 
/**/rs971.next();
03-03 11:35:51 jdbc: 
/**/rs971.close();
03-03 11:35:51 jdbc: 
/**/prep970.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep970.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 260
03-03 11:35:51 jdbc: RESULT_CLOSE 296
03-03 11:35:51 jdbc: 
/**/prep970.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 294
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep971 = conn83.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 297
03-03 11:35:51 jdbc: 
/**/prep971.setLong(1, 68L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs972 = prep971.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 297
03-03 11:35:51 jdbc: RESULT_CLOSE 298
03-03 11:35:51 jdbc: 
/**/rs972.next();
03-03 11:35:51 jdbc: 
/**/rs972.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs972.wasNull();
03-03 11:35:51 jdbc: 
/**/rs972.getLong("contentN1_1_1_");
03-03 11:35:51 jdbc: 
/**/rs972.wasNull();
03-03 11:35:51 jdbc: 
/**/rs972.getLong("contentT2_1_");
03-03 11:35:51 jdbc: 
/**/rs972.wasNull();
03-03 11:35:51 jdbc: 
/**/rs972.next();
03-03 11:35:51 jdbc: 
/**/rs972.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs972.wasNull();
03-03 11:35:51 jdbc: 
/**/rs972.getLong("contentN1_1_1_");
03-03 11:35:51 jdbc: 
/**/rs972.wasNull();
03-03 11:35:51 jdbc: 
/**/rs972.getLong("contentT2_1_");
03-03 11:35:51 jdbc: 
/**/rs972.wasNull();
03-03 11:35:51 jdbc: 
/**/rs972.next();
03-03 11:35:51 jdbc: 
/**/rs972.close();
03-03 11:35:51 jdbc: 
/**/prep971.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep971.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 260
03-03 11:35:51 jdbc: RESULT_CLOSE 299
03-03 11:35:51 jdbc: 
/**/prep971.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 297
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep972 = conn83.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 300
03-03 11:35:51 jdbc: 
/**/prep972.setLong(1, 67L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs973 = prep972.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 300
03-03 11:35:51 jdbc: RESULT_CLOSE 301
03-03 11:35:51 jdbc: 
/**/rs973.next();
03-03 11:35:51 jdbc: 
/**/rs973.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs973.wasNull();
03-03 11:35:51 jdbc: 
/**/rs973.getLong("contentN1_1_1_");
03-03 11:35:51 jdbc: 
/**/rs973.wasNull();
03-03 11:35:51 jdbc: 
/**/rs973.getLong("contentT2_1_");
03-03 11:35:51 jdbc: 
/**/rs973.wasNull();
03-03 11:35:51 jdbc: 
/**/rs973.next();
03-03 11:35:51 jdbc: 
/**/rs973.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs973.wasNull();
03-03 11:35:51 jdbc: 
/**/rs973.getLong("contentN1_1_1_");
03-03 11:35:51 jdbc: 
/**/rs973.wasNull();
03-03 11:35:51 jdbc: 
/**/rs973.getLong("contentT2_1_");
03-03 11:35:51 jdbc: 
/**/rs973.wasNull();
03-03 11:35:51 jdbc: 
/**/rs973.next();
03-03 11:35:51 jdbc: 
/**/rs973.close();
03-03 11:35:51 jdbc: 
/**/prep972.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep972.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 260
03-03 11:35:51 jdbc: RESULT_CLOSE 302
03-03 11:35:51 jdbc: 
/**/prep972.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 300
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep973 = conn83.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 303
03-03 11:35:51 jdbc: 
/**/prep973.setLong(1, 183L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs974 = prep973.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 303
03-03 11:35:51 jdbc: RESULT_CLOSE 304
03-03 11:35:51 jdbc: 
/**/rs974.next();
03-03 11:35:51 jdbc: 
/**/rs974.getLong("id1_0_");
03-03 11:35:51 jdbc: 
/**/rs974.wasNull();
03-03 11:35:51 jdbc: 
/**/rs974.getLong("id0_1_");
03-03 11:35:51 jdbc: 
/**/rs974.wasNull();
03-03 11:35:51 jdbc: 
/**/rs974.getLong("id4_2_");
03-03 11:35:51 jdbc: 
/**/rs974.wasNull();
03-03 11:35:51 jdbc: 
/**/rs974.getLong("id4_3_");
03-03 11:35:51 jdbc: 
/**/rs974.wasNull();
03-03 11:35:51 jdbc: 
/**/rs974.getLong("contentT2_2_4_");
03-03 11:35:51 jdbc: 
/**/rs974.wasNull();
03-03 11:35:51 jdbc: 
/**/rs974.getLong("contentN1_4_");
03-03 11:35:51 jdbc: 
/**/rs974.wasNull();
03-03 11:35:51 jdbc: 
/**/rs974.next();
03-03 11:35:51 jdbc: 
/**/rs974.getLong("id1_0_");
03-03 11:35:51 jdbc: 
/**/rs974.wasNull();
03-03 11:35:51 jdbc: 
/**/rs974.getLong("id0_1_");
03-03 11:35:51 jdbc: 
/**/rs974.wasNull();
03-03 11:35:51 jdbc: 
/**/rs974.getLong("id4_2_");
03-03 11:35:51 jdbc: 
/**/rs974.wasNull();
03-03 11:35:51 jdbc: 
/**/rs974.getLong("id4_3_");
03-03 11:35:51 jdbc: 
/**/rs974.wasNull();
03-03 11:35:51 jdbc: 
/**/rs974.getLong("contentT2_2_4_");
03-03 11:35:51 jdbc: 
/**/rs974.wasNull();
03-03 11:35:51 jdbc: 
/**/rs974.getLong("contentN1_4_");
03-03 11:35:51 jdbc: 
/**/rs974.wasNull();
03-03 11:35:51 jdbc: 
/**/rs974.next();
03-03 11:35:51 jdbc: 
/**/rs974.getLong("id1_0_");
03-03 11:35:51 jdbc: 
/**/rs974.wasNull();
03-03 11:35:51 jdbc: 
/**/rs974.getLong("id0_1_");
03-03 11:35:51 jdbc: 
/**/rs974.wasNull();
03-03 11:35:51 jdbc: 
/**/rs974.getLong("id4_2_");
03-03 11:35:51 jdbc: 
/**/rs974.wasNull();
03-03 11:35:51 jdbc: 
/**/rs974.getLong("id4_3_");
03-03 11:35:51 jdbc: 
/**/rs974.wasNull();
03-03 11:35:51 jdbc: 
/**/rs974.getLong("author8_1_0_");
03-03 11:35:51 jdbc: 
/**/rs974.wasNull();
03-03 11:35:51 jdbc: 
/**/rs974.getLong("contentId1_0_");
03-03 11:35:51 jdbc: 
/**/rs974.wasNull();
03-03 11:35:51 jdbc: 
/**/rs974.getString("contentR3_1_0_");
03-03 11:35:51 jdbc: 
/**/rs974.wasNull();
03-03 11:35:51 jdbc: 
/**/rs974.getTimestamp("creation4_1_0_");
03-03 11:35:51 jdbc: 
/**/rs974.wasNull();
03-03 11:35:51 jdbc: 
/**/rs974.getTimestamp("lastModi5_1_0_");
03-03 11:35:51 jdbc: 
/**/rs974.wasNull();
03-03 11:35:51 jdbc: 
/**/rs974.getString("name1_0_");
03-03 11:35:51 jdbc: 
/**/rs974.wasNull();
03-03 11:35:51 jdbc: 
/**/rs974.getLong("parent9_1_0_");
03-03 11:35:51 jdbc: 
/**/rs974.wasNull();
03-03 11:35:51 jdbc: 
/**/rs974.getBoolean("publicated1_0_");
03-03 11:35:51 jdbc: 
/**/rs974.wasNull();
03-03 11:35:51 jdbc: 
/**/rs974.getLong("contentT2_2_4_");
03-03 11:35:51 jdbc: 
/**/rs974.wasNull();
03-03 11:35:51 jdbc: 
/**/rs974.getLong("contentN1_4_");
03-03 11:35:51 jdbc: 
/**/rs974.wasNull();
03-03 11:35:51 jdbc: 
/**/rs974.next();
03-03 11:35:51 jdbc: 
/**/rs974.getLong("id1_0_");
03-03 11:35:51 jdbc: 
/**/rs974.wasNull();
03-03 11:35:51 jdbc: 
/**/rs974.getLong("id0_1_");
03-03 11:35:51 jdbc: 
/**/rs974.wasNull();
03-03 11:35:51 jdbc: 
/**/rs974.getLong("id4_2_");
03-03 11:35:51 jdbc: 
/**/rs974.wasNull();
03-03 11:35:51 jdbc: 
/**/rs974.getLong("id4_3_");
03-03 11:35:51 jdbc: 
/**/rs974.wasNull();
03-03 11:35:51 jdbc: 
/**/rs974.getLong("contentT2_2_4_");
03-03 11:35:51 jdbc: 
/**/rs974.wasNull();
03-03 11:35:51 jdbc: 
/**/rs974.getLong("contentN1_4_");
03-03 11:35:51 jdbc: 
/**/rs974.wasNull();
03-03 11:35:51 jdbc: 
/**/rs974.next();
03-03 11:35:51 jdbc: 
/**/rs974.getLong("id1_0_");
03-03 11:35:51 jdbc: 
/**/rs974.wasNull();
03-03 11:35:51 jdbc: 
/**/rs974.getLong("id0_1_");
03-03 11:35:51 jdbc: 
/**/rs974.wasNull();
03-03 11:35:51 jdbc: 
/**/rs974.getLong("id4_2_");
03-03 11:35:51 jdbc: 
/**/rs974.wasNull();
03-03 11:35:51 jdbc: 
/**/rs974.getLong("id4_3_");
03-03 11:35:51 jdbc: 
/**/rs974.wasNull();
03-03 11:35:51 jdbc: 
/**/rs974.getLong("author8_1_0_");
03-03 11:35:51 jdbc: 
/**/rs974.wasNull();
03-03 11:35:51 jdbc: 
/**/rs974.getLong("contentId1_0_");
03-03 11:35:51 jdbc: 
/**/rs974.wasNull();
03-03 11:35:51 jdbc: 
/**/rs974.getString("contentR3_1_0_");
03-03 11:35:51 jdbc: 
/**/rs974.wasNull();
03-03 11:35:51 jdbc: 
/**/rs974.getTimestamp("creation4_1_0_");
03-03 11:35:51 jdbc: 
/**/rs974.wasNull();
03-03 11:35:51 jdbc: 
/**/rs974.getTimestamp("lastModi5_1_0_");
03-03 11:35:51 jdbc: 
/**/rs974.wasNull();
03-03 11:35:51 jdbc: 
/**/rs974.getString("name1_0_");
03-03 11:35:51 jdbc: 
/**/rs974.wasNull();
03-03 11:35:51 jdbc: 
/**/rs974.getLong("parent9_1_0_");
03-03 11:35:51 jdbc: 
/**/rs974.wasNull();
03-03 11:35:51 jdbc: 
/**/rs974.getBoolean("publicated1_0_");
03-03 11:35:51 jdbc: 
/**/rs974.wasNull();
03-03 11:35:51 jdbc: 
/**/rs974.getLong("contentT2_2_4_");
03-03 11:35:51 jdbc: 
/**/rs974.wasNull();
03-03 11:35:51 jdbc: 
/**/rs974.getLong("contentN1_4_");
03-03 11:35:51 jdbc: 
/**/rs974.wasNull();
03-03 11:35:51 jdbc: 
/**/rs974.next();
03-03 11:35:51 jdbc: 
/**/rs974.getLong("id1_0_");
03-03 11:35:51 jdbc: 
/**/rs974.wasNull();
03-03 11:35:51 jdbc: 
/**/rs974.getLong("id0_1_");
03-03 11:35:51 jdbc: 
/**/rs974.wasNull();
03-03 11:35:51 jdbc: 
/**/rs974.getLong("id4_2_");
03-03 11:35:51 jdbc: 
/**/rs974.wasNull();
03-03 11:35:51 jdbc: 
/**/rs974.getLong("id4_3_");
03-03 11:35:51 jdbc: 
/**/rs974.wasNull();
03-03 11:35:51 jdbc: 
/**/rs974.getLong("contentT2_2_4_");
03-03 11:35:51 jdbc: 
/**/rs974.wasNull();
03-03 11:35:51 jdbc: 
/**/rs974.getLong("contentN1_4_");
03-03 11:35:51 jdbc: 
/**/rs974.wasNull();
03-03 11:35:51 jdbc: 
/**/rs974.next();
03-03 11:35:51 jdbc: 
/**/rs974.getLong("id1_0_");
03-03 11:35:51 jdbc: 
/**/rs974.wasNull();
03-03 11:35:51 jdbc: 
/**/rs974.getLong("id0_1_");
03-03 11:35:51 jdbc: 
/**/rs974.wasNull();
03-03 11:35:51 jdbc: 
/**/rs974.getLong("id4_2_");
03-03 11:35:51 jdbc: 
/**/rs974.wasNull();
03-03 11:35:51 jdbc: 
/**/rs974.getLong("id4_3_");
03-03 11:35:51 jdbc: 
/**/rs974.wasNull();
03-03 11:35:51 jdbc: 
/**/rs974.getLong("contentT2_2_4_");
03-03 11:35:51 jdbc: 
/**/rs974.wasNull();
03-03 11:35:51 jdbc: 
/**/rs974.getLong("contentN1_4_");
03-03 11:35:51 jdbc: 
/**/rs974.wasNull();
03-03 11:35:51 jdbc: 
/**/rs974.next();
03-03 11:35:51 jdbc: 
/**/rs974.close();
03-03 11:35:51 jdbc: 
/**/prep973.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep973.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 260
03-03 11:35:51 jdbc: RESULT_CLOSE 305
03-03 11:35:51 jdbc: 
/**/prep973.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 303
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep974 = conn83.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 306
03-03 11:35:51 jdbc: 
/**/prep974.setLong(1, 55L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs975 = prep974.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 306
03-03 11:35:51 jdbc: RESULT_CLOSE 307
03-03 11:35:51 jdbc: 
/**/rs975.next();
03-03 11:35:51 jdbc: 
/**/rs975.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs975.wasNull();
03-03 11:35:51 jdbc: 
/**/rs975.getLong("contentN1_1_1_");
03-03 11:35:51 jdbc: 
/**/rs975.wasNull();
03-03 11:35:51 jdbc: 
/**/rs975.getLong("contentT2_1_");
03-03 11:35:51 jdbc: 
/**/rs975.wasNull();
03-03 11:35:51 jdbc: 
/**/rs975.next();
03-03 11:35:51 jdbc: 
/**/rs975.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs975.wasNull();
03-03 11:35:51 jdbc: 
/**/rs975.getLong("contentN1_1_1_");
03-03 11:35:51 jdbc: 
/**/rs975.wasNull();
03-03 11:35:51 jdbc: 
/**/rs975.getLong("contentT2_1_");
03-03 11:35:51 jdbc: 
/**/rs975.wasNull();
03-03 11:35:51 jdbc: 
/**/rs975.next();
03-03 11:35:51 jdbc: 
/**/rs975.close();
03-03 11:35:51 jdbc: 
/**/prep974.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep974.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 260
03-03 11:35:51 jdbc: RESULT_CLOSE 308
03-03 11:35:51 jdbc: 
/**/prep974.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 306
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep975 = conn83.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 309
03-03 11:35:51 jdbc: 
/**/prep975.setLong(1, 52L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs976 = prep975.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 309
03-03 11:35:51 jdbc: RESULT_CLOSE 310
03-03 11:35:51 jdbc: 
/**/rs976.next();
03-03 11:35:51 jdbc: 
/**/rs976.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs976.wasNull();
03-03 11:35:51 jdbc: 
/**/rs976.getLong("contentN1_1_1_");
03-03 11:35:51 jdbc: 
/**/rs976.wasNull();
03-03 11:35:51 jdbc: 
/**/rs976.getLong("contentT2_1_");
03-03 11:35:51 jdbc: 
/**/rs976.wasNull();
03-03 11:35:51 jdbc: 
/**/rs976.next();
03-03 11:35:51 jdbc: 
/**/rs976.close();
03-03 11:35:51 jdbc: 
/**/prep975.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep975.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 260
03-03 11:35:51 jdbc: RESULT_CLOSE 311
03-03 11:35:51 jdbc: 
/**/prep975.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 309
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep976 = conn83.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 312
03-03 11:35:51 jdbc: 
/**/prep976.setLong(1, 184L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs977 = prep976.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 312
03-03 11:35:51 jdbc: RESULT_CLOSE 313
03-03 11:35:51 jdbc: 
/**/rs977.next();
03-03 11:35:51 jdbc: 
/**/rs977.getLong("id1_0_");
03-03 11:35:51 jdbc: 
/**/rs977.wasNull();
03-03 11:35:51 jdbc: 
/**/rs977.getLong("id0_1_");
03-03 11:35:51 jdbc: 
/**/rs977.wasNull();
03-03 11:35:51 jdbc: 
/**/rs977.getLong("id4_2_");
03-03 11:35:51 jdbc: 
/**/rs977.wasNull();
03-03 11:35:51 jdbc: 
/**/rs977.getLong("id4_3_");
03-03 11:35:51 jdbc: 
/**/rs977.wasNull();
03-03 11:35:51 jdbc: 
/**/rs977.getLong("author8_1_0_");
03-03 11:35:51 jdbc: 
/**/rs977.wasNull();
03-03 11:35:51 jdbc: 
/**/rs977.getLong("contentId1_0_");
03-03 11:35:51 jdbc: 
/**/rs977.wasNull();
03-03 11:35:51 jdbc: 
/**/rs977.getString("contentR3_1_0_");
03-03 11:35:51 jdbc: 
/**/rs977.wasNull();
03-03 11:35:51 jdbc: 
/**/rs977.getTimestamp("creation4_1_0_");
03-03 11:35:51 jdbc: 
/**/rs977.wasNull();
03-03 11:35:51 jdbc: 
/**/rs977.getTimestamp("lastModi5_1_0_");
03-03 11:35:51 jdbc: 
/**/rs977.wasNull();
03-03 11:35:51 jdbc: 
/**/rs977.getString("name1_0_");
03-03 11:35:51 jdbc: 
/**/rs977.wasNull();
03-03 11:35:51 jdbc: 
/**/rs977.getLong("parent9_1_0_");
03-03 11:35:51 jdbc: 
/**/rs977.wasNull();
03-03 11:35:51 jdbc: 
/**/rs977.getBoolean("publicated1_0_");
03-03 11:35:51 jdbc: 
/**/rs977.wasNull();
03-03 11:35:51 jdbc: 
/**/rs977.getLong("contentT2_2_4_");
03-03 11:35:51 jdbc: 
/**/rs977.wasNull();
03-03 11:35:51 jdbc: 
/**/rs977.getLong("contentN1_4_");
03-03 11:35:51 jdbc: 
/**/rs977.wasNull();
03-03 11:35:51 jdbc: 
/**/rs977.next();
03-03 11:35:51 jdbc: 
/**/rs977.close();
03-03 11:35:51 jdbc: 
/**/prep976.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep976.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 260
03-03 11:35:51 jdbc: RESULT_CLOSE 314
03-03 11:35:51 jdbc: 
/**/prep976.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 312
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep977 = conn83.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 315
03-03 11:35:51 jdbc: 
/**/prep977.setLong(1, 8L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs978 = prep977.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 315
03-03 11:35:51 jdbc: RESULT_CLOSE 316
03-03 11:35:51 jdbc: 
/**/rs978.next();
03-03 11:35:51 jdbc: 
/**/rs978.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs978.wasNull();
03-03 11:35:51 jdbc: 
/**/rs978.getLong("contentN1_1_1_");
03-03 11:35:51 jdbc: 
/**/rs978.wasNull();
03-03 11:35:51 jdbc: 
/**/rs978.getLong("contentT2_1_");
03-03 11:35:51 jdbc: 
/**/rs978.wasNull();
03-03 11:35:51 jdbc: 
/**/rs978.next();
03-03 11:35:51 jdbc: 
/**/rs978.close();
03-03 11:35:51 jdbc: 
/**/prep977.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep977.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 260
03-03 11:35:51 jdbc: RESULT_CLOSE 317
03-03 11:35:51 jdbc: 
/**/prep977.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 315
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep978 = conn83.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 318
03-03 11:35:51 jdbc: 
/**/prep978.setLong(1, 186L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs979 = prep978.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 318
03-03 11:35:51 jdbc: RESULT_CLOSE 319
03-03 11:35:51 jdbc: 
/**/rs979.next();
03-03 11:35:51 jdbc: 
/**/rs979.getLong("id1_0_");
03-03 11:35:51 jdbc: 
/**/rs979.wasNull();
03-03 11:35:51 jdbc: 
/**/rs979.getLong("id0_1_");
03-03 11:35:51 jdbc: 
/**/rs979.wasNull();
03-03 11:35:51 jdbc: 
/**/rs979.getLong("id4_2_");
03-03 11:35:51 jdbc: 
/**/rs979.wasNull();
03-03 11:35:51 jdbc: 
/**/rs979.getLong("id4_3_");
03-03 11:35:51 jdbc: 
/**/rs979.wasNull();
03-03 11:35:51 jdbc: 
/**/rs979.getLong("contentT2_2_4_");
03-03 11:35:51 jdbc: 
/**/rs979.wasNull();
03-03 11:35:51 jdbc: 
/**/rs979.getLong("contentN1_4_");
03-03 11:35:51 jdbc: 
/**/rs979.wasNull();
03-03 11:35:51 jdbc: 
/**/rs979.next();
03-03 11:35:51 jdbc: 
/**/rs979.close();
03-03 11:35:51 jdbc: 
/**/prep978.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep978.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 260
03-03 11:35:51 jdbc: RESULT_CLOSE 320
03-03 11:35:51 jdbc: 
/**/prep978.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 318
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep979 = conn83.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 321
03-03 11:35:51 jdbc: 
/**/prep979.setLong(1, 187L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs980 = prep979.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 321
03-03 11:35:51 jdbc: RESULT_CLOSE 322
03-03 11:35:51 jdbc: 
/**/rs980.next();
03-03 11:35:51 jdbc: 
/**/rs980.getLong("id1_0_");
03-03 11:35:51 jdbc: 
/**/rs980.wasNull();
03-03 11:35:51 jdbc: 
/**/rs980.getLong("id0_1_");
03-03 11:35:51 jdbc: 
/**/rs980.wasNull();
03-03 11:35:51 jdbc: 
/**/rs980.getLong("id4_2_");
03-03 11:35:51 jdbc: 
/**/rs980.wasNull();
03-03 11:35:51 jdbc: 
/**/rs980.getLong("id4_3_");
03-03 11:35:51 jdbc: 
/**/rs980.wasNull();
03-03 11:35:51 jdbc: 
/**/rs980.getLong("contentT2_2_4_");
03-03 11:35:51 jdbc: 
/**/rs980.wasNull();
03-03 11:35:51 jdbc: 
/**/rs980.getLong("contentN1_4_");
03-03 11:35:51 jdbc: 
/**/rs980.wasNull();
03-03 11:35:51 jdbc: 
/**/rs980.next();
03-03 11:35:51 jdbc: 
/**/rs980.close();
03-03 11:35:51 jdbc: 
/**/prep979.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep979.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: SESSION_PREPARE 324
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 324
03-03 11:35:51 jdbc: RESULT_CLOSE 323
03-03 11:35:51 jdbc: 
/**/prep979.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 321
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep980 = conn83.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 325
03-03 11:35:51 jdbc: 
/**/prep980.setLong(1, 188L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs981 = prep980.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 325
03-03 11:35:51 jdbc: RESULT_CLOSE 326
03-03 11:35:51 jdbc: 
/**/rs981.next();
03-03 11:35:51 jdbc: 
/**/rs981.getLong("id1_0_");
03-03 11:35:51 jdbc: 
/**/rs981.wasNull();
03-03 11:35:51 jdbc: 
/**/rs981.getLong("id0_1_");
03-03 11:35:51 jdbc: 
/**/rs981.wasNull();
03-03 11:35:51 jdbc: 
/**/rs981.getLong("id4_2_");
03-03 11:35:51 jdbc: 
/**/rs981.wasNull();
03-03 11:35:51 jdbc: 
/**/rs981.getLong("id4_3_");
03-03 11:35:51 jdbc: 
/**/rs981.wasNull();
03-03 11:35:51 jdbc: 
/**/rs981.getLong("contentT2_2_4_");
03-03 11:35:51 jdbc: 
/**/rs981.wasNull();
03-03 11:35:51 jdbc: 
/**/rs981.getLong("contentN1_4_");
03-03 11:35:51 jdbc: 
/**/rs981.wasNull();
03-03 11:35:51 jdbc: 
/**/rs981.next();
03-03 11:35:51 jdbc: 
/**/rs981.getLong("id1_0_");
03-03 11:35:51 jdbc: 
/**/rs981.wasNull();
03-03 11:35:51 jdbc: 
/**/rs981.getLong("id0_1_");
03-03 11:35:51 jdbc: 
/**/rs981.wasNull();
03-03 11:35:51 jdbc: 
/**/rs981.getLong("id4_2_");
03-03 11:35:51 jdbc: 
/**/rs981.wasNull();
03-03 11:35:51 jdbc: 
/**/rs981.getLong("id4_3_");
03-03 11:35:51 jdbc: 
/**/rs981.wasNull();
03-03 11:35:51 jdbc: 
/**/rs981.getLong("contentT2_2_4_");
03-03 11:35:51 jdbc: 
/**/rs981.wasNull();
03-03 11:35:51 jdbc: 
/**/rs981.getLong("contentN1_4_");
03-03 11:35:51 jdbc: 
/**/rs981.wasNull();
03-03 11:35:51 jdbc: 
/**/rs981.next();
03-03 11:35:51 jdbc: 
/**/rs981.close();
03-03 11:35:51 jdbc: 
/**/prep980.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep980.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 324
03-03 11:35:51 jdbc: RESULT_CLOSE 327
03-03 11:35:51 jdbc: 
/**/prep980.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 325
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep981 = conn83.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 328
03-03 11:35:51 jdbc: 
/**/prep981.setLong(1, 189L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs982 = prep981.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 328
03-03 11:35:51 jdbc: RESULT_CLOSE 329
03-03 11:35:51 jdbc: 
/**/rs982.next();
03-03 11:35:51 jdbc: 
/**/rs982.getLong("id1_0_");
03-03 11:35:51 jdbc: 
/**/rs982.wasNull();
03-03 11:35:51 jdbc: 
/**/rs982.getLong("id0_1_");
03-03 11:35:51 jdbc: 
/**/rs982.wasNull();
03-03 11:35:51 jdbc: 
/**/rs982.getLong("id4_2_");
03-03 11:35:51 jdbc: 
/**/rs982.wasNull();
03-03 11:35:51 jdbc: 
/**/rs982.getLong("id4_3_");
03-03 11:35:51 jdbc: 
/**/rs982.wasNull();
03-03 11:35:51 jdbc: 
/**/rs982.getLong("contentT2_2_4_");
03-03 11:35:51 jdbc: 
/**/rs982.wasNull();
03-03 11:35:51 jdbc: 
/**/rs982.getLong("contentN1_4_");
03-03 11:35:51 jdbc: 
/**/rs982.wasNull();
03-03 11:35:51 jdbc: 
/**/rs982.next();
03-03 11:35:51 jdbc: 
/**/rs982.close();
03-03 11:35:51 jdbc: 
/**/prep981.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep981.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 324
03-03 11:35:51 jdbc: RESULT_CLOSE 330
03-03 11:35:51 jdbc: 
/**/prep981.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 328
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep982 = conn83.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 331
03-03 11:35:51 jdbc: 
/**/prep982.setLong(1, 192L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs983 = prep982.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 331
03-03 11:35:51 jdbc: RESULT_CLOSE 332
03-03 11:35:51 jdbc: 
/**/rs983.next();
03-03 11:35:51 jdbc: 
/**/rs983.getLong("id1_0_");
03-03 11:35:51 jdbc: 
/**/rs983.wasNull();
03-03 11:35:51 jdbc: 
/**/rs983.getLong("id0_1_");
03-03 11:35:51 jdbc: 
/**/rs983.wasNull();
03-03 11:35:51 jdbc: 
/**/rs983.getLong("id4_2_");
03-03 11:35:51 jdbc: 
/**/rs983.wasNull();
03-03 11:35:51 jdbc: 
/**/rs983.getLong("id4_3_");
03-03 11:35:51 jdbc: 
/**/rs983.wasNull();
03-03 11:35:51 jdbc: 
/**/rs983.getLong("author8_1_0_");
03-03 11:35:51 jdbc: 
/**/rs983.wasNull();
03-03 11:35:51 jdbc: 
/**/rs983.getLong("contentId1_0_");
03-03 11:35:51 jdbc: 
/**/rs983.wasNull();
03-03 11:35:51 jdbc: 
/**/rs983.getString("contentR3_1_0_");
03-03 11:35:51 jdbc: 
/**/rs983.wasNull();
03-03 11:35:51 jdbc: 
/**/rs983.getTimestamp("creation4_1_0_");
03-03 11:35:51 jdbc: 
/**/rs983.wasNull();
03-03 11:35:51 jdbc: 
/**/rs983.getTimestamp("lastModi5_1_0_");
03-03 11:35:51 jdbc: 
/**/rs983.wasNull();
03-03 11:35:51 jdbc: 
/**/rs983.getString("name1_0_");
03-03 11:35:51 jdbc: 
/**/rs983.wasNull();
03-03 11:35:51 jdbc: 
/**/rs983.getLong("parent9_1_0_");
03-03 11:35:51 jdbc: 
/**/rs983.wasNull();
03-03 11:35:51 jdbc: 
/**/rs983.getBoolean("publicated1_0_");
03-03 11:35:51 jdbc: 
/**/rs983.wasNull();
03-03 11:35:51 jdbc: 
/**/rs983.getLong("contentT2_2_4_");
03-03 11:35:51 jdbc: 
/**/rs983.wasNull();
03-03 11:35:51 jdbc: 
/**/rs983.getLong("contentN1_4_");
03-03 11:35:51 jdbc: 
/**/rs983.wasNull();
03-03 11:35:51 jdbc: 
/**/rs983.next();
03-03 11:35:51 jdbc: 
/**/rs983.close();
03-03 11:35:51 jdbc: 
/**/prep982.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep982.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 324
03-03 11:35:51 jdbc: RESULT_CLOSE 333
03-03 11:35:51 jdbc: 
/**/prep982.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 331
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep983 = conn83.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 334
03-03 11:35:51 jdbc: 
/**/prep983.setLong(1, 47L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs984 = prep983.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 334
03-03 11:35:51 jdbc: RESULT_CLOSE 335
03-03 11:35:51 jdbc: 
/**/rs984.next();
03-03 11:35:51 jdbc: 
/**/rs984.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs984.wasNull();
03-03 11:35:51 jdbc: 
/**/rs984.getLong("contentN1_1_1_");
03-03 11:35:51 jdbc: 
/**/rs984.wasNull();
03-03 11:35:51 jdbc: 
/**/rs984.getLong("contentT2_1_");
03-03 11:35:51 jdbc: 
/**/rs984.wasNull();
03-03 11:35:51 jdbc: 
/**/rs984.next();
03-03 11:35:51 jdbc: 
/**/rs984.close();
03-03 11:35:51 jdbc: 
/**/prep983.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep983.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 324
03-03 11:35:51 jdbc: RESULT_CLOSE 336
03-03 11:35:51 jdbc: 
/**/prep983.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 334
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep984 = conn83.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 337
03-03 11:35:51 jdbc: 
/**/prep984.setLong(1, 193L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs985 = prep984.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 337
03-03 11:35:51 jdbc: RESULT_CLOSE 338
03-03 11:35:51 jdbc: 
/**/rs985.next();
03-03 11:35:51 jdbc: 
/**/rs985.getLong("id1_0_");
03-03 11:35:51 jdbc: 
/**/rs985.wasNull();
03-03 11:35:51 jdbc: 
/**/rs985.getLong("id0_1_");
03-03 11:35:51 jdbc: 
/**/rs985.wasNull();
03-03 11:35:51 jdbc: 
/**/rs985.getLong("id4_2_");
03-03 11:35:51 jdbc: 
/**/rs985.wasNull();
03-03 11:35:51 jdbc: 
/**/rs985.getLong("id4_3_");
03-03 11:35:51 jdbc: 
/**/rs985.wasNull();
03-03 11:35:51 jdbc: 
/**/rs985.getLong("contentT2_2_4_");
03-03 11:35:51 jdbc: 
/**/rs985.wasNull();
03-03 11:35:51 jdbc: 
/**/rs985.getLong("contentN1_4_");
03-03 11:35:51 jdbc: 
/**/rs985.wasNull();
03-03 11:35:51 jdbc: 
/**/rs985.next();
03-03 11:35:51 jdbc: 
/**/rs985.close();
03-03 11:35:51 jdbc: 
/**/prep984.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep984.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 324
03-03 11:35:51 jdbc: RESULT_CLOSE 339
03-03 11:35:51 jdbc: 
/**/prep984.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 337
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep985 = conn83.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 340
03-03 11:35:51 jdbc: 
/**/prep985.setLong(1, 194L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs986 = prep985.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 340
03-03 11:35:51 jdbc: RESULT_CLOSE 341
03-03 11:35:51 jdbc: 
/**/rs986.next();
03-03 11:35:51 jdbc: 
/**/rs986.getLong("id1_0_");
03-03 11:35:51 jdbc: 
/**/rs986.wasNull();
03-03 11:35:51 jdbc: 
/**/rs986.getLong("id0_1_");
03-03 11:35:51 jdbc: 
/**/rs986.wasNull();
03-03 11:35:51 jdbc: 
/**/rs986.getLong("id4_2_");
03-03 11:35:51 jdbc: 
/**/rs986.wasNull();
03-03 11:35:51 jdbc: 
/**/rs986.getLong("id4_3_");
03-03 11:35:51 jdbc: 
/**/rs986.wasNull();
03-03 11:35:51 jdbc: 
/**/rs986.getLong("author8_1_0_");
03-03 11:35:51 jdbc: 
/**/rs986.wasNull();
03-03 11:35:51 jdbc: 
/**/rs986.getLong("contentId1_0_");
03-03 11:35:51 jdbc: 
/**/rs986.wasNull();
03-03 11:35:51 jdbc: 
/**/rs986.getString("contentR3_1_0_");
03-03 11:35:51 jdbc: 
/**/rs986.wasNull();
03-03 11:35:51 jdbc: 
/**/rs986.getTimestamp("creation4_1_0_");
03-03 11:35:51 jdbc: 
/**/rs986.wasNull();
03-03 11:35:51 jdbc: 
/**/rs986.getTimestamp("lastModi5_1_0_");
03-03 11:35:51 jdbc: 
/**/rs986.wasNull();
03-03 11:35:51 jdbc: 
/**/rs986.getString("name1_0_");
03-03 11:35:51 jdbc: 
/**/rs986.wasNull();
03-03 11:35:51 jdbc: 
/**/rs986.getLong("parent9_1_0_");
03-03 11:35:51 jdbc: 
/**/rs986.wasNull();
03-03 11:35:51 jdbc: 
/**/rs986.getBoolean("publicated1_0_");
03-03 11:35:51 jdbc: 
/**/rs986.wasNull();
03-03 11:35:51 jdbc: 
/**/rs986.getString("name4_2_");
03-03 11:35:51 jdbc: 
/**/rs986.wasNull();
03-03 11:35:51 jdbc: 
/**/rs986.getLong("parent3_4_2_");
03-03 11:35:51 jdbc: 
/**/rs986.wasNull();
03-03 11:35:51 jdbc: 
/**/rs986.getLong("contentT2_2_4_");
03-03 11:35:51 jdbc: 
/**/rs986.wasNull();
03-03 11:35:51 jdbc: 
/**/rs986.getLong("contentN1_4_");
03-03 11:35:51 jdbc: 
/**/rs986.wasNull();
03-03 11:35:51 jdbc: 
/**/rs986.next();
03-03 11:35:51 jdbc: 
/**/rs986.close();
03-03 11:35:51 jdbc: 
/**/prep985.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep985.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 324
03-03 11:35:51 jdbc: RESULT_CLOSE 342
03-03 11:35:51 jdbc: 
/**/prep985.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 340
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep986 = conn83.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 343
03-03 11:35:51 jdbc: 
/**/prep986.setLong(1, 56L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs987 = prep986.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 343
03-03 11:35:51 jdbc: RESULT_CLOSE 344
03-03 11:35:51 jdbc: 
/**/rs987.next();
03-03 11:35:51 jdbc: 
/**/rs987.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs987.wasNull();
03-03 11:35:51 jdbc: 
/**/rs987.getLong("contentN1_1_1_");
03-03 11:35:51 jdbc: 
/**/rs987.wasNull();
03-03 11:35:51 jdbc: 
/**/rs987.getLong("contentT2_1_");
03-03 11:35:51 jdbc: 
/**/rs987.wasNull();
03-03 11:35:51 jdbc: 
/**/rs987.next();
03-03 11:35:51 jdbc: 
/**/rs987.close();
03-03 11:35:51 jdbc: 
/**/prep986.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep986.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 324
03-03 11:35:51 jdbc: RESULT_CLOSE 345
03-03 11:35:51 jdbc: 
/**/prep986.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 343
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep987 = conn83.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 346
03-03 11:35:51 jdbc: 
/**/prep987.setLong(1, 195L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs988 = prep987.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 346
03-03 11:35:51 jdbc: RESULT_CLOSE 347
03-03 11:35:51 jdbc: 
/**/rs988.next();
03-03 11:35:51 jdbc: 
/**/rs988.getLong("id1_0_");
03-03 11:35:51 jdbc: 
/**/rs988.wasNull();
03-03 11:35:51 jdbc: 
/**/rs988.getLong("id0_1_");
03-03 11:35:51 jdbc: 
/**/rs988.wasNull();
03-03 11:35:51 jdbc: 
/**/rs988.getLong("id4_2_");
03-03 11:35:51 jdbc: 
/**/rs988.wasNull();
03-03 11:35:51 jdbc: 
/**/rs988.getLong("id4_3_");
03-03 11:35:51 jdbc: 
/**/rs988.wasNull();
03-03 11:35:51 jdbc: 
/**/rs988.getLong("author8_1_0_");
03-03 11:35:51 jdbc: 
/**/rs988.wasNull();
03-03 11:35:51 jdbc: 
/**/rs988.getLong("contentId1_0_");
03-03 11:35:51 jdbc: 
/**/rs988.wasNull();
03-03 11:35:51 jdbc: 
/**/rs988.getString("contentR3_1_0_");
03-03 11:35:51 jdbc: 
/**/rs988.wasNull();
03-03 11:35:51 jdbc: 
/**/rs988.getTimestamp("creation4_1_0_");
03-03 11:35:51 jdbc: 
/**/rs988.wasNull();
03-03 11:35:51 jdbc: 
/**/rs988.getTimestamp("lastModi5_1_0_");
03-03 11:35:51 jdbc: 
/**/rs988.wasNull();
03-03 11:35:51 jdbc: 
/**/rs988.getString("name1_0_");
03-03 11:35:51 jdbc: 
/**/rs988.wasNull();
03-03 11:35:51 jdbc: 
/**/rs988.getLong("parent9_1_0_");
03-03 11:35:51 jdbc: 
/**/rs988.wasNull();
03-03 11:35:51 jdbc: 
/**/rs988.getBoolean("publicated1_0_");
03-03 11:35:51 jdbc: 
/**/rs988.wasNull();
03-03 11:35:51 jdbc: 
/**/rs988.getString("name4_2_");
03-03 11:35:51 jdbc: 
/**/rs988.wasNull();
03-03 11:35:51 jdbc: 
/**/rs988.getLong("parent3_4_2_");
03-03 11:35:51 jdbc: 
/**/rs988.wasNull();
03-03 11:35:51 jdbc: 
/**/rs988.getLong("contentT2_2_4_");
03-03 11:35:51 jdbc: 
/**/rs988.wasNull();
03-03 11:35:51 jdbc: 
/**/rs988.getLong("contentN1_4_");
03-03 11:35:51 jdbc: 
/**/rs988.wasNull();
03-03 11:35:51 jdbc: 
/**/rs988.next();
03-03 11:35:51 jdbc: 
/**/rs988.close();
03-03 11:35:51 jdbc: 
/**/prep987.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep987.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 324
03-03 11:35:51 jdbc: RESULT_CLOSE 348
03-03 11:35:51 jdbc: 
/**/prep987.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 346
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep988 = conn83.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 349
03-03 11:35:51 jdbc: 
/**/prep988.setLong(1, 58L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs989 = prep988.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 349
03-03 11:35:51 jdbc: RESULT_CLOSE 350
03-03 11:35:51 jdbc: 
/**/rs989.next();
03-03 11:35:51 jdbc: 
/**/rs989.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs989.wasNull();
03-03 11:35:51 jdbc: 
/**/rs989.getLong("contentN1_1_1_");
03-03 11:35:51 jdbc: 
/**/rs989.wasNull();
03-03 11:35:51 jdbc: 
/**/rs989.getLong("contentT2_1_");
03-03 11:35:51 jdbc: 
/**/rs989.wasNull();
03-03 11:35:51 jdbc: 
/**/rs989.next();
03-03 11:35:51 jdbc: 
/**/rs989.close();
03-03 11:35:51 jdbc: 
/**/prep988.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep988.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 324
03-03 11:35:51 jdbc: RESULT_CLOSE 351
03-03 11:35:51 jdbc: 
/**/prep988.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 349
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep989 = conn83.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 352
03-03 11:35:51 jdbc: 
/**/prep989.setLong(1, 196L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs990 = prep989.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 352
03-03 11:35:51 jdbc: RESULT_CLOSE 353
03-03 11:35:51 jdbc: 
/**/rs990.next();
03-03 11:35:51 jdbc: 
/**/rs990.getLong("id1_0_");
03-03 11:35:51 jdbc: 
/**/rs990.wasNull();
03-03 11:35:51 jdbc: 
/**/rs990.getLong("id0_1_");
03-03 11:35:51 jdbc: 
/**/rs990.wasNull();
03-03 11:35:51 jdbc: 
/**/rs990.getLong("id4_2_");
03-03 11:35:51 jdbc: 
/**/rs990.wasNull();
03-03 11:35:51 jdbc: 
/**/rs990.getLong("id4_3_");
03-03 11:35:51 jdbc: 
/**/rs990.wasNull();
03-03 11:35:51 jdbc: 
/**/rs990.getLong("author8_1_0_");
03-03 11:35:51 jdbc: 
/**/rs990.wasNull();
03-03 11:35:51 jdbc: 
/**/rs990.getLong("contentId1_0_");
03-03 11:35:51 jdbc: 
/**/rs990.wasNull();
03-03 11:35:51 jdbc: 
/**/rs990.getString("contentR3_1_0_");
03-03 11:35:51 jdbc: 
/**/rs990.wasNull();
03-03 11:35:51 jdbc: 
/**/rs990.getTimestamp("creation4_1_0_");
03-03 11:35:51 jdbc: 
/**/rs990.wasNull();
03-03 11:35:51 jdbc: 
/**/rs990.getTimestamp("lastModi5_1_0_");
03-03 11:35:51 jdbc: 
/**/rs990.wasNull();
03-03 11:35:51 jdbc: 
/**/rs990.getString("name1_0_");
03-03 11:35:51 jdbc: 
/**/rs990.wasNull();
03-03 11:35:51 jdbc: 
/**/rs990.getLong("parent9_1_0_");
03-03 11:35:51 jdbc: 
/**/rs990.wasNull();
03-03 11:35:51 jdbc: 
/**/rs990.getBoolean("publicated1_0_");
03-03 11:35:51 jdbc: 
/**/rs990.wasNull();
03-03 11:35:51 jdbc: 
/**/rs990.getLong("contentT2_2_4_");
03-03 11:35:51 jdbc: 
/**/rs990.wasNull();
03-03 11:35:51 jdbc: 
/**/rs990.getLong("contentN1_4_");
03-03 11:35:51 jdbc: 
/**/rs990.wasNull();
03-03 11:35:51 jdbc: 
/**/rs990.next();
03-03 11:35:51 jdbc: 
/**/rs990.close();
03-03 11:35:51 jdbc: 
/**/prep989.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep989.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 324
03-03 11:35:51 jdbc: RESULT_CLOSE 354
03-03 11:35:51 jdbc: 
/**/prep989.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 352
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep990 = conn83.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 355
03-03 11:35:51 jdbc: 
/**/prep990.setLong(1, 31L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs991 = prep990.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 355
03-03 11:35:51 jdbc: RESULT_CLOSE 356
03-03 11:35:51 jdbc: 
/**/rs991.next();
03-03 11:35:51 jdbc: 
/**/rs991.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs991.wasNull();
03-03 11:35:51 jdbc: 
/**/rs991.getLong("contentN1_1_1_");
03-03 11:35:51 jdbc: 
/**/rs991.wasNull();
03-03 11:35:51 jdbc: 
/**/rs991.getLong("contentT2_1_");
03-03 11:35:51 jdbc: 
/**/rs991.wasNull();
03-03 11:35:51 jdbc: 
/**/rs991.next();
03-03 11:35:51 jdbc: 
/**/rs991.getLong("id2_0_");
03-03 11:35:51 jdbc: 
/**/rs991.wasNull();
03-03 11:35:51 jdbc: 
/**/rs991.getLong("contentN1_1_1_");
03-03 11:35:51 jdbc: 
/**/rs991.wasNull();
03-03 11:35:51 jdbc: 
/**/rs991.getLong("contentT2_1_");
03-03 11:35:51 jdbc: 
/**/rs991.wasNull();
03-03 11:35:51 jdbc: 
/**/rs991.next();
03-03 11:35:51 jdbc: 
/**/rs991.close();
03-03 11:35:51 jdbc: 
/**/prep990.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep990.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 324
03-03 11:35:51 jdbc: RESULT_CLOSE 357
03-03 11:35:51 jdbc: 
/**/prep990.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 355
03-03 11:35:51 jdbc: 
/**/PreparedStatement prep991 = conn83.prepareStatement("select contentnod0_.contentTags_id as contentT2_2_4_, contentnod0_.contentNodes_id as contentN1_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from CONTENTNODE_CONTENT_TAG contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.contentTags_id=?");
03-03 11:35:51 jdbc: SESSION_PREPARE_READ_PARAMS 358
03-03 11:35:51 jdbc: 
/**/prep991.setLong(1, 197L);
03-03 11:35:51 jdbc: 
/**/ResultSet rs992 = prep991.executeQuery();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 358
03-03 11:35:51 jdbc: RESULT_CLOSE 359
03-03 11:35:51 jdbc: 
/**/rs992.next();
03-03 11:35:51 jdbc: 
/**/rs992.getLong("id1_0_");
03-03 11:35:51 jdbc: 
/**/rs992.wasNull();
03-03 11:35:51 jdbc: 
/**/rs992.getLong("id0_1_");
03-03 11:35:51 jdbc: 
/**/rs992.wasNull();
03-03 11:35:51 jdbc: 
/**/rs992.getLong("id4_2_");
03-03 11:35:51 jdbc: 
/**/rs992.wasNull();
03-03 11:35:51 jdbc: 
/**/rs992.getLong("id4_3_");
03-03 11:35:51 jdbc: 
/**/rs992.wasNull();
03-03 11:35:51 jdbc: 
/**/rs992.getLong("contentT2_2_4_");
03-03 11:35:51 jdbc: 
/**/rs992.wasNull();
03-03 11:35:51 jdbc: 
/**/rs992.getLong("contentN1_4_");
03-03 11:35:51 jdbc: 
/**/rs992.wasNull();
03-03 11:35:51 jdbc: 
/**/rs992.next();
03-03 11:35:51 jdbc: 
/**/rs992.close();
03-03 11:35:51 jdbc: 
/**/prep991.getMaxRows();
03-03 11:35:51 jdbc: 
/**/prep991.getQueryTimeout();
03-03 11:35:51 jdbc: 
/**/conn83.getQueryTimeout();
03-03 11:35:51 jdbc: COMMAND_EXECUTE_QUERY 324
03-03 11:35:51 jdbc: RESULT_CLOSE 360
03-03 11:35:51 jdbc: 
/**/prep991.close();
03-03 11:35:51 jdbc: COMMAND_CLOSE 358
