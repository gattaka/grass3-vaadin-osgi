<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/tx 
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
        http://www.springframework.org/schema/data/jpa 
        http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd">

	<!-- Zajistí nahrání hodnot z properties souboru a jejich dosazení na placeholdery 
		jako třeba ${hibernate.connection.url} -->
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="ignoreUnresolvablePlaceholders" value="false" />
		<property name="locations">
			<list>
				<value>classpath:properties/test.properties</value>
			</list>
		</property>
	</bean>

	<!-- org.apache.tomcat.jdbc.pool.DataSource musí vidět na driver - protože 
		je to ale volané z Tomcat classloaderu musí se dodat přímo do serveru, viz. 
		http://stackoverflow.com/questions/13161747/jdbc-apache-tomcat-pooling-jar -->
	<bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource">
		<property name="driverClassName" value="${hibernate.connection.driver_class}" />
		<property name="url" value="${hibernate.connection.url}" />
		<property name="username" value="${hibernate.connection.username}" />
		<property name="password" value="${hibernate.connection.password}" />
	</bean>

	<!-- factory na JPA EntityManager -->
	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="persistenceXmlLocation" value="classpath:jpa/jpa-persistence.xml" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="showSql" value="${hibernate.show_sql}" />
				<property name="generateDdl" value="true" />
				<property name="databasePlatform" value="${hibernate.dialect}" />
			</bean>
		</property>
	</bean>

	<!-- podpora transakcí -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>
	<tx:annotation-driven transaction-manager="transactionManager"
		proxy-target-class="false" />

	<!-- určuje kde jsou interfaces repozitářů spring jpa -->
	<jpa:repositories base-package="org.myftp.gattserver.jpatest" />

	<!-- povoluje nahrávání komponent přes anotace v zadané package struktuře -->
	<context:annotation-config />
	<context:component-scan base-package="org.myftp.gattserver.jpatest" />

</beans>