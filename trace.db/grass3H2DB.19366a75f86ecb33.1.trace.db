03-03 10:48:28 jdbc: 
/**/Connection conn5 = DriverManager.getConnection("jdbc:h2:tcp://localhost/grass3H2DB;TRACE_LEVEL_FIlE=3", "SA", "");
03-03 10:48:28 jdbc: 
/**/DatabaseMetaData dbMeta0 = conn5.getMetaData();
03-03 10:48:28 jdbc: 
/**/dbMeta0.getDatabaseProductName();
03-03 10:48:28 jdbc: 
/**/dbMeta0.getURL();
03-03 10:48:28 jdbc: 
/**/dbMeta0.getConnection();
03-03 10:48:28 jdbc: 
/**/Statement stat4 = conn5.createStatement();
03-03 10:48:28 jdbc: 
/**/ResultSet rs23 = stat4.executeQuery("SELECT UPPER(VALUE) FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME='MODE'");
03-03 10:48:28 jdbc: SESSION_PREPARE_READ_PARAMS 0
03-03 10:48:28 jdbc: COMMAND_EXECUTE_QUERY 0
03-03 10:48:28 jdbc: RESULT_CLOSE 1
03-03 10:48:28 jdbc: COMMAND_CLOSE 0
03-03 10:48:28 jdbc: 
/**/rs23.next();
03-03 10:48:28 jdbc: 
/**/rs23.getString(1);
03-03 10:48:28 jdbc: 
/**/rs23.close();
03-03 10:48:28 jdbc: 
/**/stat4.close();
03-03 10:48:28 jdbc: 
/**/dbMeta0.storesUpperCaseIdentifiers();
03-03 10:48:28 jdbc: 
/**/dbMeta0.getSchemas();
03-03 10:48:28 jdbc: 
/**/PreparedStatement prep8 = conn5.prepareStatement("SELECT SCHEMA_NAME TABLE_SCHEM, CATALOG_NAME TABLE_CATALOG,  IS_DEFAULT FROM INFORMATION_SCHEMA.SCHEMATA ORDER BY SCHEMA_NAME");
03-03 10:48:28 jdbc: SESSION_PREPARE_READ_PARAMS 2
03-03 10:48:28 jdbc: 
/**/ResultSet rs24 = prep8.executeQuery();
03-03 10:48:28 jdbc: COMMAND_EXECUTE_QUERY 2
03-03 10:48:28 jdbc: RESULT_CLOSE 3
03-03 10:48:28 jdbc: 
/**/rs24.findColumn("IS_DEFAULT");
03-03 10:48:28 jdbc: 
/**/rs24.next();
03-03 10:48:28 jdbc: 
/**/rs24.getBoolean(3);
03-03 10:48:28 jdbc: 
/**/rs24.next();
03-03 10:48:28 jdbc: 
/**/rs24.getBoolean(3);
03-03 10:48:28 jdbc: 
/**/rs24.getString("TABLE_SCHEM");
03-03 10:48:28 jdbc: 
/**/rs24.next();
03-03 10:48:28 jdbc: 
/**/dbMeta0.getSchemas();
03-03 10:48:28 jdbc: 
/**/PreparedStatement prep9 = conn5.prepareStatement("SELECT SCHEMA_NAME TABLE_SCHEM, CATALOG_NAME TABLE_CATALOG,  IS_DEFAULT FROM INFORMATION_SCHEMA.SCHEMATA ORDER BY SCHEMA_NAME");
03-03 10:48:28 jdbc: SESSION_PREPARE_READ_PARAMS 4
03-03 10:48:28 jdbc: 
/**/ResultSet rs25 = prep9.executeQuery();
03-03 10:48:28 jdbc: COMMAND_EXECUTE_QUERY 4
03-03 10:48:28 jdbc: RESULT_CLOSE 5
03-03 10:48:28 jdbc: 
/**/rs25.next();
03-03 10:48:28 jdbc: 
/**/rs25.findColumn("TABLE_SCHEM");
03-03 10:48:28 jdbc: 
/**/rs25.getString(1);
03-03 10:48:28 jdbc: 
/**/rs25.next();
03-03 10:48:28 jdbc: 
/**/rs25.findColumn("TABLE_SCHEM");
03-03 10:48:28 jdbc: 
/**/rs25.getString(1);
03-03 10:48:28 jdbc: 
/**/rs25.next();
03-03 10:48:28 jdbc: 
/**/rs25.close();
03-03 10:48:28 jdbc: 
/**/prep9.close();
03-03 10:48:28 jdbc: COMMAND_CLOSE 4
03-03 10:48:28 jdbc: 
/**/dbMeta0.getTables(null, "INFORMATION_SCHEMA", null, new String[]{"TABLE", "SYSTEM TABLE", "VIEW", "SYSTEM VIEW", "TABLE LINK", "SYNONYM"});
03-03 10:48:28 jdbc: 
/**/PreparedStatement prep10 = conn5.prepareStatement("SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, TABLE_TYPE, REMARKS, TYPE_NAME TYPE_CAT, TYPE_NAME TYPE_SCHEM, TYPE_NAME, TYPE_NAME SELF_REFERENCING_COL_NAME, TYPE_NAME REF_GENERATION, SQL FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND TABLE_NAME LIKE ? ESCAPE ? AND (TABLE_TYPE IN(?, ?, ?, ?, ?, ?)) ORDER BY TABLE_TYPE, TABLE_SCHEMA, TABLE_NAME");
03-03 10:48:28 jdbc: SESSION_PREPARE_READ_PARAMS 6
03-03 10:48:28 jdbc: 
/**/prep10.setString(1, "%");
03-03 10:48:28 jdbc: 
/**/prep10.setString(2, "\\");
03-03 10:48:28 jdbc: 
/**/prep10.setString(3, "INFORMATION_SCHEMA");
03-03 10:48:28 jdbc: 
/**/prep10.setString(4, "\\");
03-03 10:48:28 jdbc: 
/**/prep10.setString(5, "%");
03-03 10:48:28 jdbc: 
/**/prep10.setString(6, "\\");
03-03 10:48:28 jdbc: 
/**/prep10.setString(7, "TABLE");
03-03 10:48:28 jdbc: 
/**/prep10.setString(8, "SYSTEM TABLE");
03-03 10:48:28 jdbc: 
/**/prep10.setString(9, "VIEW");
03-03 10:48:28 jdbc: 
/**/prep10.setString(10, "SYSTEM VIEW");
03-03 10:48:28 jdbc: 
/**/prep10.setString(11, "TABLE LINK");
03-03 10:48:28 jdbc: 
/**/prep10.setString(12, "SYNONYM");
03-03 10:48:28 jdbc: 
/**/ResultSet rs26 = prep10.executeQuery();
03-03 10:48:28 jdbc: COMMAND_EXECUTE_QUERY 6
03-03 10:48:28 jdbc: RESULT_CLOSE 7
03-03 10:48:28 jdbc: 
/**/rs26.next();
03-03 10:48:28 jdbc: 
/**/rs26.getString("TABLE_NAME");
03-03 10:48:28 jdbc: 
/**/rs26.getString("TABLE_TYPE");
03-03 10:48:28 jdbc: 
/**/rs26.next();
03-03 10:48:28 jdbc: 
/**/rs26.getString("TABLE_NAME");
03-03 10:48:28 jdbc: 
/**/rs26.getString("TABLE_TYPE");
03-03 10:48:28 jdbc: 
/**/rs26.next();
03-03 10:48:28 jdbc: 
/**/rs26.getString("TABLE_NAME");
03-03 10:48:28 jdbc: 
/**/rs26.getString("TABLE_TYPE");
03-03 10:48:28 jdbc: 
/**/rs26.next();
03-03 10:48:28 jdbc: 
/**/rs26.getString("TABLE_NAME");
03-03 10:48:28 jdbc: 
/**/rs26.getString("TABLE_TYPE");
03-03 10:48:28 jdbc: 
/**/rs26.next();
03-03 10:48:28 jdbc: 
/**/rs26.getString("TABLE_NAME");
03-03 10:48:28 jdbc: 
/**/rs26.getString("TABLE_TYPE");
03-03 10:48:28 jdbc: 
/**/rs26.next();
03-03 10:48:28 jdbc: 
/**/rs26.getString("TABLE_NAME");
03-03 10:48:28 jdbc: 
/**/rs26.getString("TABLE_TYPE");
03-03 10:48:28 jdbc: 
/**/rs26.next();
03-03 10:48:28 jdbc: 
/**/rs26.getString("TABLE_NAME");
03-03 10:48:28 jdbc: 
/**/rs26.getString("TABLE_TYPE");
03-03 10:48:28 jdbc: 
/**/rs26.next();
03-03 10:48:28 jdbc: 
/**/rs26.getString("TABLE_NAME");
03-03 10:48:28 jdbc: 
/**/rs26.getString("TABLE_TYPE");
03-03 10:48:28 jdbc: 
/**/rs26.next();
03-03 10:48:28 jdbc: 
/**/rs26.getString("TABLE_NAME");
03-03 10:48:28 jdbc: 
/**/rs26.getString("TABLE_TYPE");
03-03 10:48:28 jdbc: 
/**/rs26.next();
03-03 10:48:28 jdbc: 
/**/rs26.getString("TABLE_NAME");
03-03 10:48:28 jdbc: 
/**/rs26.getString("TABLE_TYPE");
03-03 10:48:28 jdbc: 
/**/rs26.next();
03-03 10:48:28 jdbc: 
/**/rs26.getString("TABLE_NAME");
03-03 10:48:28 jdbc: 
/**/rs26.getString("TABLE_TYPE");
03-03 10:48:28 jdbc: 
/**/rs26.next();
03-03 10:48:28 jdbc: 
/**/rs26.getString("TABLE_NAME");
03-03 10:48:28 jdbc: 
/**/rs26.getString("TABLE_TYPE");
03-03 10:48:28 jdbc: 
/**/rs26.next();
03-03 10:48:28 jdbc: 
/**/rs26.getString("TABLE_NAME");
03-03 10:48:28 jdbc: 
/**/rs26.getString("TABLE_TYPE");
03-03 10:48:28 jdbc: 
/**/rs26.next();
03-03 10:48:28 jdbc: 
/**/rs26.getString("TABLE_NAME");
03-03 10:48:28 jdbc: 
/**/rs26.getString("TABLE_TYPE");
03-03 10:48:28 jdbc: 
/**/rs26.next();
03-03 10:48:28 jdbc: 
/**/rs26.getString("TABLE_NAME");
03-03 10:48:28 jdbc: 
/**/rs26.getString("TABLE_TYPE");
03-03 10:48:28 jdbc: 
/**/rs26.next();
03-03 10:48:28 jdbc: 
/**/rs26.getString("TABLE_NAME");
03-03 10:48:28 jdbc: 
/**/rs26.getString("TABLE_TYPE");
03-03 10:48:28 jdbc: 
/**/rs26.next();
03-03 10:48:28 jdbc: 
/**/rs26.getString("TABLE_NAME");
03-03 10:48:28 jdbc: 
/**/rs26.getString("TABLE_TYPE");
03-03 10:48:28 jdbc: 
/**/rs26.next();
03-03 10:48:28 jdbc: 
/**/rs26.getString("TABLE_NAME");
03-03 10:48:28 jdbc: 
/**/rs26.getString("TABLE_TYPE");
03-03 10:48:28 jdbc: 
/**/rs26.next();
03-03 10:48:28 jdbc: 
/**/rs26.getString("TABLE_NAME");
03-03 10:48:28 jdbc: 
/**/rs26.getString("TABLE_TYPE");
03-03 10:48:28 jdbc: 
/**/rs26.next();
03-03 10:48:28 jdbc: 
/**/rs26.getString("TABLE_NAME");
03-03 10:48:28 jdbc: 
/**/rs26.getString("TABLE_TYPE");
03-03 10:48:28 jdbc: 
/**/rs26.next();
03-03 10:48:28 jdbc: 
/**/rs26.getString("TABLE_NAME");
03-03 10:48:28 jdbc: 
/**/rs26.getString("TABLE_TYPE");
03-03 10:48:28 jdbc: 
/**/rs26.next();
03-03 10:48:28 jdbc: 
/**/rs26.getString("TABLE_NAME");
03-03 10:48:28 jdbc: 
/**/rs26.getString("TABLE_TYPE");
03-03 10:48:28 jdbc: 
/**/rs26.next();
03-03 10:48:28 jdbc: 
/**/rs26.getString("TABLE_NAME");
03-03 10:48:28 jdbc: 
/**/rs26.getString("TABLE_TYPE");
03-03 10:48:28 jdbc: 
/**/rs26.next();
03-03 10:48:28 jdbc: 
/**/rs26.getString("TABLE_NAME");
03-03 10:48:28 jdbc: 
/**/rs26.getString("TABLE_TYPE");
03-03 10:48:28 jdbc: 
/**/rs26.next();
03-03 10:48:28 jdbc: 
/**/rs26.getString("TABLE_NAME");
03-03 10:48:28 jdbc: 
/**/rs26.getString("TABLE_TYPE");
03-03 10:48:28 jdbc: 
/**/rs26.next();
03-03 10:48:28 jdbc: 
/**/rs26.getString("TABLE_NAME");
03-03 10:48:28 jdbc: 
/**/rs26.getString("TABLE_TYPE");
03-03 10:48:28 jdbc: 
/**/rs26.next();
03-03 10:48:28 jdbc: 
/**/rs26.getString("TABLE_NAME");
03-03 10:48:28 jdbc: 
/**/rs26.getString("TABLE_TYPE");
03-03 10:48:28 jdbc: 
/**/rs26.next();
03-03 10:48:28 jdbc: 
/**/rs26.getString("TABLE_NAME");
03-03 10:48:28 jdbc: 
/**/rs26.getString("TABLE_TYPE");
03-03 10:48:28 jdbc: 
/**/rs26.next();
03-03 10:48:28 jdbc: 
/**/rs26.close();
03-03 10:48:28 jdbc: 
/**/prep10.close();
03-03 10:48:28 jdbc: COMMAND_CLOSE 6
03-03 10:48:28 jdbc: 
/**/dbMeta0.getColumns(null, "INFORMATION_SCHEMA", "CATALOGS", null);
03-03 10:48:28 jdbc: 
/**/PreparedStatement prep11 = conn5.prepareStatement("SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, COLUMN_NAME, DATA_TYPE, TYPE_NAME, CHARACTER_MAXIMUM_LENGTH COLUMN_SIZE, CHARACTER_MAXIMUM_LENGTH BUFFER_LENGTH, NUMERIC_SCALE DECIMAL_DIGITS, NUMERIC_PRECISION_RADIX NUM_PREC_RADIX, NULLABLE, REMARKS, COLUMN_DEFAULT COLUMN_DEF, DATA_TYPE SQL_DATA_TYPE, ZERO() SQL_DATETIME_SUB, CHARACTER_OCTET_LENGTH CHAR_OCTET_LENGTH, ORDINAL_POSITION, IS_NULLABLE IS_NULLABLE, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_CATALOG, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_SCHEMA, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_TABLE, SOURCE_DATA_TYPE, CASE WHEN SEQUENCE_NAME IS NULL THEN CAST(? AS VARCHAR) ELSE CAST(? AS VARCHAR) END IS_AUTOINCREMENT, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_CATLOG FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND TABLE_NAME LIKE ? ESCAPE ? AND COLUMN_NAME LIKE ? ESCAPE ? ORDER BY TABLE_SCHEM, TABLE_NAME, ORDINAL_POSITION");
03-03 10:48:28 jdbc: SESSION_PREPARE_READ_PARAMS 8
03-03 10:48:28 jdbc: 
/**/prep11.setString(1, "NO");
03-03 10:48:28 jdbc: 
/**/prep11.setString(2, "YES");
03-03 10:48:28 jdbc: 
/**/prep11.setString(3, "%");
03-03 10:48:28 jdbc: 
/**/prep11.setString(4, "\\");
03-03 10:48:28 jdbc: 
/**/prep11.setString(5, "INFORMATION_SCHEMA");
03-03 10:48:28 jdbc: 
/**/prep11.setString(6, "\\");
03-03 10:48:28 jdbc: 
/**/prep11.setString(7, "CATALOGS");
03-03 10:48:28 jdbc: 
/**/prep11.setString(8, "\\");
03-03 10:48:28 jdbc: 
/**/prep11.setString(9, "%");
03-03 10:48:28 jdbc: 
/**/prep11.setString(10, "\\");
03-03 10:48:28 jdbc: 
/**/ResultSet rs27 = prep11.executeQuery();
03-03 10:48:28 jdbc: COMMAND_EXECUTE_QUERY 8
03-03 10:48:28 jdbc: RESULT_CLOSE 9
03-03 10:48:28 jdbc: 
/**/rs27.next();
03-03 10:48:28 jdbc: 
/**/rs27.getString("COLUMN_NAME");
03-03 10:48:28 jdbc: 
/**/rs27.getString("TYPE_NAME");
03-03 10:48:28 jdbc: 
/**/rs27.findColumn("COLUMN_SIZE");
03-03 10:48:28 jdbc: 
/**/rs27.getInt(7);
03-03 10:48:28 jdbc: 
/**/rs27.findColumn("DECIMAL_DIGITS");
03-03 10:48:28 jdbc: 
/**/rs27.getInt(9);
03-03 10:48:28 jdbc: 
/**/rs27.getInt("NULLABLE");
03-03 10:48:28 jdbc: 
/**/rs27.next();
03-03 10:48:28 jdbc: 
/**/rs27.close();
03-03 10:48:28 jdbc: 
/**/prep11.close();
03-03 10:48:28 jdbc: COMMAND_CLOSE 8
03-03 10:48:28 jdbc: 
/**/dbMeta0.getColumns(null, "INFORMATION_SCHEMA", "COLLATIONS", null);
03-03 10:48:28 jdbc: 
/**/PreparedStatement prep12 = conn5.prepareStatement("SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, COLUMN_NAME, DATA_TYPE, TYPE_NAME, CHARACTER_MAXIMUM_LENGTH COLUMN_SIZE, CHARACTER_MAXIMUM_LENGTH BUFFER_LENGTH, NUMERIC_SCALE DECIMAL_DIGITS, NUMERIC_PRECISION_RADIX NUM_PREC_RADIX, NULLABLE, REMARKS, COLUMN_DEFAULT COLUMN_DEF, DATA_TYPE SQL_DATA_TYPE, ZERO() SQL_DATETIME_SUB, CHARACTER_OCTET_LENGTH CHAR_OCTET_LENGTH, ORDINAL_POSITION, IS_NULLABLE IS_NULLABLE, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_CATALOG, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_SCHEMA, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_TABLE, SOURCE_DATA_TYPE, CASE WHEN SEQUENCE_NAME IS NULL THEN CAST(? AS VARCHAR) ELSE CAST(? AS VARCHAR) END IS_AUTOINCREMENT, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_CATLOG FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND TABLE_NAME LIKE ? ESCAPE ? AND COLUMN_NAME LIKE ? ESCAPE ? ORDER BY TABLE_SCHEM, TABLE_NAME, ORDINAL_POSITION");
03-03 10:48:28 jdbc: SESSION_PREPARE_READ_PARAMS 10
03-03 10:48:28 jdbc: 
/**/prep12.setString(1, "NO");
03-03 10:48:28 jdbc: 
/**/prep12.setString(2, "YES");
03-03 10:48:28 jdbc: 
/**/prep12.setString(3, "%");
03-03 10:48:28 jdbc: 
/**/prep12.setString(4, "\\");
03-03 10:48:28 jdbc: 
/**/prep12.setString(5, "INFORMATION_SCHEMA");
03-03 10:48:28 jdbc: 
/**/prep12.setString(6, "\\");
03-03 10:48:28 jdbc: 
/**/prep12.setString(7, "COLLATIONS");
03-03 10:48:28 jdbc: 
/**/prep12.setString(8, "\\");
03-03 10:48:28 jdbc: 
/**/prep12.setString(9, "%");
03-03 10:48:28 jdbc: 
/**/prep12.setString(10, "\\");
03-03 10:48:28 jdbc: 
/**/ResultSet rs28 = prep12.executeQuery();
03-03 10:48:28 jdbc: COMMAND_EXECUTE_QUERY 10
03-03 10:48:28 jdbc: RESULT_CLOSE 11
03-03 10:48:28 jdbc: 
/**/rs28.next();
03-03 10:48:28 jdbc: 
/**/rs28.getString("COLUMN_NAME");
03-03 10:48:28 jdbc: 
/**/rs28.getString("TYPE_NAME");
03-03 10:48:28 jdbc: 
/**/rs28.findColumn("COLUMN_SIZE");
03-03 10:48:28 jdbc: 
/**/rs28.getInt(7);
03-03 10:48:28 jdbc: 
/**/rs28.findColumn("DECIMAL_DIGITS");
03-03 10:48:28 jdbc: 
/**/rs28.getInt(9);
03-03 10:48:28 jdbc: 
/**/rs28.getInt("NULLABLE");
03-03 10:48:28 jdbc: 
/**/rs28.next();
03-03 10:48:28 jdbc: 
/**/rs28.getString("COLUMN_NAME");
03-03 10:48:28 jdbc: 
/**/rs28.getString("TYPE_NAME");
03-03 10:48:28 jdbc: 
/**/rs28.findColumn("COLUMN_SIZE");
03-03 10:48:28 jdbc: 
/**/rs28.getInt(7);
03-03 10:48:28 jdbc: 
/**/rs28.findColumn("DECIMAL_DIGITS");
03-03 10:48:28 jdbc: 
/**/rs28.getInt(9);
03-03 10:48:28 jdbc: 
/**/rs28.getInt("NULLABLE");
03-03 10:48:28 jdbc: 
/**/rs28.next();
03-03 10:48:28 jdbc: 
/**/rs28.close();
03-03 10:48:28 jdbc: 
/**/prep12.close();
03-03 10:48:28 jdbc: COMMAND_CLOSE 10
03-03 10:48:28 jdbc: 
/**/dbMeta0.getColumns(null, "INFORMATION_SCHEMA", "COLUMNS", null);
03-03 10:48:28 jdbc: 
/**/PreparedStatement prep13 = conn5.prepareStatement("SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, COLUMN_NAME, DATA_TYPE, TYPE_NAME, CHARACTER_MAXIMUM_LENGTH COLUMN_SIZE, CHARACTER_MAXIMUM_LENGTH BUFFER_LENGTH, NUMERIC_SCALE DECIMAL_DIGITS, NUMERIC_PRECISION_RADIX NUM_PREC_RADIX, NULLABLE, REMARKS, COLUMN_DEFAULT COLUMN_DEF, DATA_TYPE SQL_DATA_TYPE, ZERO() SQL_DATETIME_SUB, CHARACTER_OCTET_LENGTH CHAR_OCTET_LENGTH, ORDINAL_POSITION, IS_NULLABLE IS_NULLABLE, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_CATALOG, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_SCHEMA, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_TABLE, SOURCE_DATA_TYPE, CASE WHEN SEQUENCE_NAME IS NULL THEN CAST(? AS VARCHAR) ELSE CAST(? AS VARCHAR) END IS_AUTOINCREMENT, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_CATLOG FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND TABLE_NAME LIKE ? ESCAPE ? AND COLUMN_NAME LIKE ? ESCAPE ? ORDER BY TABLE_SCHEM, TABLE_NAME, ORDINAL_POSITION");
03-03 10:48:28 jdbc: SESSION_PREPARE_READ_PARAMS 12
03-03 10:48:29 jdbc: 
/**/prep13.setString(1, "NO");
03-03 10:48:29 jdbc: 
/**/prep13.setString(2, "YES");
03-03 10:48:29 jdbc: 
/**/prep13.setString(3, "%");
03-03 10:48:29 jdbc: 
/**/prep13.setString(4, "\\");
03-03 10:48:29 jdbc: 
/**/prep13.setString(5, "INFORMATION_SCHEMA");
03-03 10:48:29 jdbc: 
/**/prep13.setString(6, "\\");
03-03 10:48:29 jdbc: 
/**/prep13.setString(7, "COLUMNS");
03-03 10:48:29 jdbc: 
/**/prep13.setString(8, "\\");
03-03 10:48:29 jdbc: 
/**/prep13.setString(9, "%");
03-03 10:48:29 jdbc: 
/**/prep13.setString(10, "\\");
03-03 10:48:29 jdbc: 
/**/ResultSet rs29 = prep13.executeQuery();
03-03 10:48:29 jdbc: COMMAND_EXECUTE_QUERY 12
03-03 10:48:29 jdbc: RESULT_CLOSE 13
03-03 10:48:29 jdbc: 
/**/rs29.next();
03-03 10:48:29 jdbc: 
/**/rs29.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs29.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs29.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs29.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs29.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs29.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs29.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs29.next();
03-03 10:48:29 jdbc: 
/**/rs29.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs29.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs29.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs29.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs29.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs29.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs29.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs29.next();
03-03 10:48:29 jdbc: 
/**/rs29.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs29.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs29.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs29.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs29.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs29.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs29.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs29.next();
03-03 10:48:29 jdbc: 
/**/rs29.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs29.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs29.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs29.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs29.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs29.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs29.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs29.next();
03-03 10:48:29 jdbc: 
/**/rs29.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs29.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs29.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs29.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs29.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs29.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs29.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs29.next();
03-03 10:48:29 jdbc: 
/**/rs29.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs29.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs29.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs29.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs29.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs29.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs29.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs29.next();
03-03 10:48:29 jdbc: 
/**/rs29.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs29.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs29.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs29.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs29.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs29.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs29.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs29.next();
03-03 10:48:29 jdbc: 
/**/rs29.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs29.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs29.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs29.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs29.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs29.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs29.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs29.next();
03-03 10:48:29 jdbc: 
/**/rs29.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs29.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs29.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs29.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs29.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs29.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs29.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs29.next();
03-03 10:48:29 jdbc: 
/**/rs29.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs29.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs29.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs29.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs29.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs29.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs29.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs29.next();
03-03 10:48:29 jdbc: 
/**/rs29.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs29.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs29.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs29.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs29.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs29.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs29.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs29.next();
03-03 10:48:29 jdbc: 
/**/rs29.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs29.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs29.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs29.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs29.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs29.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs29.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs29.next();
03-03 10:48:29 jdbc: 
/**/rs29.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs29.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs29.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs29.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs29.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs29.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs29.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs29.next();
03-03 10:48:29 jdbc: 
/**/rs29.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs29.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs29.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs29.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs29.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs29.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs29.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs29.next();
03-03 10:48:29 jdbc: 
/**/rs29.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs29.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs29.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs29.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs29.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs29.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs29.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs29.next();
03-03 10:48:29 jdbc: 
/**/rs29.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs29.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs29.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs29.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs29.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs29.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs29.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs29.next();
03-03 10:48:29 jdbc: 
/**/rs29.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs29.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs29.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs29.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs29.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs29.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs29.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs29.next();
03-03 10:48:29 jdbc: 
/**/rs29.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs29.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs29.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs29.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs29.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs29.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs29.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs29.next();
03-03 10:48:29 jdbc: 
/**/rs29.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs29.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs29.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs29.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs29.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs29.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs29.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs29.next();
03-03 10:48:29 jdbc: 
/**/rs29.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs29.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs29.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs29.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs29.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs29.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs29.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs29.next();
03-03 10:48:29 jdbc: 
/**/rs29.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs29.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs29.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs29.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs29.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs29.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs29.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs29.next();
03-03 10:48:29 jdbc: 
/**/rs29.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs29.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs29.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs29.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs29.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs29.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs29.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs29.next();
03-03 10:48:29 jdbc: 
/**/rs29.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs29.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs29.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs29.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs29.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs29.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs29.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs29.next();
03-03 10:48:29 jdbc: 
/**/rs29.close();
03-03 10:48:29 jdbc: 
/**/prep13.close();
03-03 10:48:29 jdbc: COMMAND_CLOSE 12
03-03 10:48:29 jdbc: 
/**/dbMeta0.getColumns(null, "INFORMATION_SCHEMA", "COLUMN_PRIVILEGES", null);
03-03 10:48:29 jdbc: 
/**/PreparedStatement prep14 = conn5.prepareStatement("SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, COLUMN_NAME, DATA_TYPE, TYPE_NAME, CHARACTER_MAXIMUM_LENGTH COLUMN_SIZE, CHARACTER_MAXIMUM_LENGTH BUFFER_LENGTH, NUMERIC_SCALE DECIMAL_DIGITS, NUMERIC_PRECISION_RADIX NUM_PREC_RADIX, NULLABLE, REMARKS, COLUMN_DEFAULT COLUMN_DEF, DATA_TYPE SQL_DATA_TYPE, ZERO() SQL_DATETIME_SUB, CHARACTER_OCTET_LENGTH CHAR_OCTET_LENGTH, ORDINAL_POSITION, IS_NULLABLE IS_NULLABLE, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_CATALOG, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_SCHEMA, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_TABLE, SOURCE_DATA_TYPE, CASE WHEN SEQUENCE_NAME IS NULL THEN CAST(? AS VARCHAR) ELSE CAST(? AS VARCHAR) END IS_AUTOINCREMENT, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_CATLOG FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND TABLE_NAME LIKE ? ESCAPE ? AND COLUMN_NAME LIKE ? ESCAPE ? ORDER BY TABLE_SCHEM, TABLE_NAME, ORDINAL_POSITION");
03-03 10:48:29 jdbc: SESSION_PREPARE_READ_PARAMS 14
03-03 10:48:29 jdbc: 
/**/prep14.setString(1, "NO");
03-03 10:48:29 jdbc: 
/**/prep14.setString(2, "YES");
03-03 10:48:29 jdbc: 
/**/prep14.setString(3, "%");
03-03 10:48:29 jdbc: 
/**/prep14.setString(4, "\\");
03-03 10:48:29 jdbc: 
/**/prep14.setString(5, "INFORMATION_SCHEMA");
03-03 10:48:29 jdbc: 
/**/prep14.setString(6, "\\");
03-03 10:48:29 jdbc: 
/**/prep14.setString(7, "COLUMN_PRIVILEGES");
03-03 10:48:29 jdbc: 
/**/prep14.setString(8, "\\");
03-03 10:48:29 jdbc: 
/**/prep14.setString(9, "%");
03-03 10:48:29 jdbc: 
/**/prep14.setString(10, "\\");
03-03 10:48:29 jdbc: 
/**/ResultSet rs30 = prep14.executeQuery();
03-03 10:48:29 jdbc: COMMAND_EXECUTE_QUERY 14
03-03 10:48:29 jdbc: RESULT_CLOSE 15
03-03 10:48:29 jdbc: 
/**/rs30.next();
03-03 10:48:29 jdbc: 
/**/rs30.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs30.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs30.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs30.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs30.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs30.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs30.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs30.next();
03-03 10:48:29 jdbc: 
/**/rs30.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs30.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs30.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs30.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs30.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs30.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs30.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs30.next();
03-03 10:48:29 jdbc: 
/**/rs30.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs30.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs30.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs30.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs30.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs30.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs30.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs30.next();
03-03 10:48:29 jdbc: 
/**/rs30.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs30.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs30.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs30.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs30.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs30.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs30.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs30.next();
03-03 10:48:29 jdbc: 
/**/rs30.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs30.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs30.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs30.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs30.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs30.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs30.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs30.next();
03-03 10:48:29 jdbc: 
/**/rs30.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs30.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs30.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs30.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs30.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs30.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs30.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs30.next();
03-03 10:48:29 jdbc: 
/**/rs30.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs30.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs30.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs30.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs30.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs30.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs30.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs30.next();
03-03 10:48:29 jdbc: 
/**/rs30.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs30.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs30.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs30.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs30.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs30.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs30.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs30.next();
03-03 10:48:29 jdbc: 
/**/rs30.close();
03-03 10:48:29 jdbc: 
/**/prep14.close();
03-03 10:48:29 jdbc: COMMAND_CLOSE 14
03-03 10:48:29 jdbc: 
/**/dbMeta0.getColumns(null, "INFORMATION_SCHEMA", "CONSTANTS", null);
03-03 10:48:29 jdbc: 
/**/PreparedStatement prep15 = conn5.prepareStatement("SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, COLUMN_NAME, DATA_TYPE, TYPE_NAME, CHARACTER_MAXIMUM_LENGTH COLUMN_SIZE, CHARACTER_MAXIMUM_LENGTH BUFFER_LENGTH, NUMERIC_SCALE DECIMAL_DIGITS, NUMERIC_PRECISION_RADIX NUM_PREC_RADIX, NULLABLE, REMARKS, COLUMN_DEFAULT COLUMN_DEF, DATA_TYPE SQL_DATA_TYPE, ZERO() SQL_DATETIME_SUB, CHARACTER_OCTET_LENGTH CHAR_OCTET_LENGTH, ORDINAL_POSITION, IS_NULLABLE IS_NULLABLE, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_CATALOG, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_SCHEMA, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_TABLE, SOURCE_DATA_TYPE, CASE WHEN SEQUENCE_NAME IS NULL THEN CAST(? AS VARCHAR) ELSE CAST(? AS VARCHAR) END IS_AUTOINCREMENT, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_CATLOG FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND TABLE_NAME LIKE ? ESCAPE ? AND COLUMN_NAME LIKE ? ESCAPE ? ORDER BY TABLE_SCHEM, TABLE_NAME, ORDINAL_POSITION");
03-03 10:48:29 jdbc: SESSION_PREPARE_READ_PARAMS 16
03-03 10:48:29 jdbc: 
/**/prep15.setString(1, "NO");
03-03 10:48:29 jdbc: 
/**/prep15.setString(2, "YES");
03-03 10:48:29 jdbc: 
/**/prep15.setString(3, "%");
03-03 10:48:29 jdbc: 
/**/prep15.setString(4, "\\");
03-03 10:48:29 jdbc: 
/**/prep15.setString(5, "INFORMATION_SCHEMA");
03-03 10:48:29 jdbc: 
/**/prep15.setString(6, "\\");
03-03 10:48:29 jdbc: 
/**/prep15.setString(7, "CONSTANTS");
03-03 10:48:29 jdbc: 
/**/prep15.setString(8, "\\");
03-03 10:48:29 jdbc: 
/**/prep15.setString(9, "%");
03-03 10:48:29 jdbc: 
/**/prep15.setString(10, "\\");
03-03 10:48:29 jdbc: 
/**/ResultSet rs31 = prep15.executeQuery();
03-03 10:48:29 jdbc: COMMAND_EXECUTE_QUERY 16
03-03 10:48:29 jdbc: RESULT_CLOSE 17
03-03 10:48:29 jdbc: 
/**/rs31.next();
03-03 10:48:29 jdbc: 
/**/rs31.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs31.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs31.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs31.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs31.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs31.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs31.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs31.next();
03-03 10:48:29 jdbc: 
/**/rs31.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs31.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs31.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs31.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs31.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs31.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs31.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs31.next();
03-03 10:48:29 jdbc: 
/**/rs31.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs31.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs31.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs31.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs31.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs31.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs31.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs31.next();
03-03 10:48:29 jdbc: 
/**/rs31.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs31.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs31.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs31.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs31.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs31.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs31.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs31.next();
03-03 10:48:29 jdbc: 
/**/rs31.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs31.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs31.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs31.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs31.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs31.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs31.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs31.next();
03-03 10:48:29 jdbc: 
/**/rs31.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs31.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs31.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs31.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs31.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs31.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs31.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs31.next();
03-03 10:48:29 jdbc: 
/**/rs31.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs31.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs31.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs31.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs31.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs31.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs31.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs31.next();
03-03 10:48:29 jdbc: 
/**/rs31.close();
03-03 10:48:29 jdbc: 
/**/prep15.close();
03-03 10:48:29 jdbc: COMMAND_CLOSE 16
03-03 10:48:29 jdbc: 
/**/dbMeta0.getColumns(null, "INFORMATION_SCHEMA", "CONSTRAINTS", null);
03-03 10:48:29 jdbc: 
/**/PreparedStatement prep16 = conn5.prepareStatement("SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, COLUMN_NAME, DATA_TYPE, TYPE_NAME, CHARACTER_MAXIMUM_LENGTH COLUMN_SIZE, CHARACTER_MAXIMUM_LENGTH BUFFER_LENGTH, NUMERIC_SCALE DECIMAL_DIGITS, NUMERIC_PRECISION_RADIX NUM_PREC_RADIX, NULLABLE, REMARKS, COLUMN_DEFAULT COLUMN_DEF, DATA_TYPE SQL_DATA_TYPE, ZERO() SQL_DATETIME_SUB, CHARACTER_OCTET_LENGTH CHAR_OCTET_LENGTH, ORDINAL_POSITION, IS_NULLABLE IS_NULLABLE, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_CATALOG, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_SCHEMA, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_TABLE, SOURCE_DATA_TYPE, CASE WHEN SEQUENCE_NAME IS NULL THEN CAST(? AS VARCHAR) ELSE CAST(? AS VARCHAR) END IS_AUTOINCREMENT, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_CATLOG FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND TABLE_NAME LIKE ? ESCAPE ? AND COLUMN_NAME LIKE ? ESCAPE ? ORDER BY TABLE_SCHEM, TABLE_NAME, ORDINAL_POSITION");
03-03 10:48:29 jdbc: SESSION_PREPARE_READ_PARAMS 18
03-03 10:48:29 jdbc: 
/**/prep16.setString(1, "NO");
03-03 10:48:29 jdbc: 
/**/prep16.setString(2, "YES");
03-03 10:48:29 jdbc: 
/**/prep16.setString(3, "%");
03-03 10:48:29 jdbc: 
/**/prep16.setString(4, "\\");
03-03 10:48:29 jdbc: 
/**/prep16.setString(5, "INFORMATION_SCHEMA");
03-03 10:48:29 jdbc: 
/**/prep16.setString(6, "\\");
03-03 10:48:29 jdbc: 
/**/prep16.setString(7, "CONSTRAINTS");
03-03 10:48:29 jdbc: 
/**/prep16.setString(8, "\\");
03-03 10:48:29 jdbc: 
/**/prep16.setString(9, "%");
03-03 10:48:29 jdbc: 
/**/prep16.setString(10, "\\");
03-03 10:48:29 jdbc: 
/**/ResultSet rs32 = prep16.executeQuery();
03-03 10:48:29 jdbc: COMMAND_EXECUTE_QUERY 18
03-03 10:48:29 jdbc: RESULT_CLOSE 19
03-03 10:48:29 jdbc: 
/**/rs32.next();
03-03 10:48:29 jdbc: 
/**/rs32.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs32.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs32.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs32.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs32.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs32.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs32.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs32.next();
03-03 10:48:29 jdbc: 
/**/rs32.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs32.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs32.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs32.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs32.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs32.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs32.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs32.next();
03-03 10:48:29 jdbc: 
/**/rs32.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs32.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs32.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs32.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs32.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs32.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs32.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs32.next();
03-03 10:48:29 jdbc: 
/**/rs32.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs32.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs32.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs32.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs32.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs32.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs32.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs32.next();
03-03 10:48:29 jdbc: 
/**/rs32.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs32.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs32.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs32.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs32.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs32.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs32.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs32.next();
03-03 10:48:29 jdbc: 
/**/rs32.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs32.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs32.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs32.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs32.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs32.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs32.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs32.next();
03-03 10:48:29 jdbc: 
/**/rs32.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs32.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs32.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs32.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs32.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs32.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs32.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs32.next();
03-03 10:48:29 jdbc: 
/**/rs32.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs32.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs32.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs32.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs32.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs32.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs32.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs32.next();
03-03 10:48:29 jdbc: 
/**/rs32.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs32.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs32.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs32.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs32.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs32.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs32.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs32.next();
03-03 10:48:29 jdbc: 
/**/rs32.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs32.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs32.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs32.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs32.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs32.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs32.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs32.next();
03-03 10:48:29 jdbc: 
/**/rs32.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs32.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs32.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs32.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs32.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs32.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs32.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs32.next();
03-03 10:48:29 jdbc: 
/**/rs32.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs32.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs32.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs32.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs32.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs32.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs32.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs32.next();
03-03 10:48:29 jdbc: 
/**/rs32.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs32.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs32.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs32.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs32.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs32.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs32.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs32.next();
03-03 10:48:29 jdbc: 
/**/rs32.close();
03-03 10:48:29 jdbc: 
/**/prep16.close();
03-03 10:48:29 jdbc: COMMAND_CLOSE 18
03-03 10:48:29 jdbc: 
/**/dbMeta0.getColumns(null, "INFORMATION_SCHEMA", "CROSS_REFERENCES", null);
03-03 10:48:29 jdbc: 
/**/PreparedStatement prep17 = conn5.prepareStatement("SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, COLUMN_NAME, DATA_TYPE, TYPE_NAME, CHARACTER_MAXIMUM_LENGTH COLUMN_SIZE, CHARACTER_MAXIMUM_LENGTH BUFFER_LENGTH, NUMERIC_SCALE DECIMAL_DIGITS, NUMERIC_PRECISION_RADIX NUM_PREC_RADIX, NULLABLE, REMARKS, COLUMN_DEFAULT COLUMN_DEF, DATA_TYPE SQL_DATA_TYPE, ZERO() SQL_DATETIME_SUB, CHARACTER_OCTET_LENGTH CHAR_OCTET_LENGTH, ORDINAL_POSITION, IS_NULLABLE IS_NULLABLE, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_CATALOG, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_SCHEMA, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_TABLE, SOURCE_DATA_TYPE, CASE WHEN SEQUENCE_NAME IS NULL THEN CAST(? AS VARCHAR) ELSE CAST(? AS VARCHAR) END IS_AUTOINCREMENT, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_CATLOG FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND TABLE_NAME LIKE ? ESCAPE ? AND COLUMN_NAME LIKE ? ESCAPE ? ORDER BY TABLE_SCHEM, TABLE_NAME, ORDINAL_POSITION");
03-03 10:48:29 jdbc: SESSION_PREPARE_READ_PARAMS 20
03-03 10:48:29 jdbc: 
/**/prep17.setString(1, "NO");
03-03 10:48:29 jdbc: 
/**/prep17.setString(2, "YES");
03-03 10:48:29 jdbc: 
/**/prep17.setString(3, "%");
03-03 10:48:29 jdbc: 
/**/prep17.setString(4, "\\");
03-03 10:48:29 jdbc: 
/**/prep17.setString(5, "INFORMATION_SCHEMA");
03-03 10:48:29 jdbc: 
/**/prep17.setString(6, "\\");
03-03 10:48:29 jdbc: 
/**/prep17.setString(7, "CROSS_REFERENCES");
03-03 10:48:29 jdbc: 
/**/prep17.setString(8, "\\");
03-03 10:48:29 jdbc: 
/**/prep17.setString(9, "%");
03-03 10:48:29 jdbc: 
/**/prep17.setString(10, "\\");
03-03 10:48:29 jdbc: 
/**/ResultSet rs33 = prep17.executeQuery();
03-03 10:48:29 jdbc: COMMAND_EXECUTE_QUERY 20
03-03 10:48:29 jdbc: RESULT_CLOSE 21
03-03 10:48:29 jdbc: 
/**/rs33.next();
03-03 10:48:29 jdbc: 
/**/rs33.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs33.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs33.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs33.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs33.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs33.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs33.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs33.next();
03-03 10:48:29 jdbc: 
/**/rs33.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs33.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs33.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs33.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs33.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs33.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs33.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs33.next();
03-03 10:48:29 jdbc: 
/**/rs33.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs33.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs33.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs33.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs33.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs33.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs33.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs33.next();
03-03 10:48:29 jdbc: 
/**/rs33.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs33.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs33.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs33.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs33.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs33.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs33.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs33.next();
03-03 10:48:29 jdbc: 
/**/rs33.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs33.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs33.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs33.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs33.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs33.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs33.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs33.next();
03-03 10:48:29 jdbc: 
/**/rs33.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs33.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs33.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs33.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs33.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs33.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs33.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs33.next();
03-03 10:48:29 jdbc: 
/**/rs33.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs33.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs33.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs33.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs33.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs33.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs33.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs33.next();
03-03 10:48:29 jdbc: 
/**/rs33.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs33.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs33.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs33.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs33.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs33.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs33.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs33.next();
03-03 10:48:29 jdbc: 
/**/rs33.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs33.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs33.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs33.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs33.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs33.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs33.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs33.next();
03-03 10:48:29 jdbc: 
/**/rs33.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs33.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs33.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs33.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs33.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs33.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs33.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs33.next();
03-03 10:48:29 jdbc: 
/**/rs33.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs33.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs33.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs33.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs33.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs33.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs33.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs33.next();
03-03 10:48:29 jdbc: 
/**/rs33.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs33.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs33.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs33.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs33.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs33.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs33.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs33.next();
03-03 10:48:29 jdbc: 
/**/rs33.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs33.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs33.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs33.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs33.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs33.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs33.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs33.next();
03-03 10:48:29 jdbc: 
/**/rs33.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs33.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs33.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs33.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs33.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs33.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs33.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs33.next();
03-03 10:48:29 jdbc: 
/**/rs33.close();
03-03 10:48:29 jdbc: 
/**/prep17.close();
03-03 10:48:29 jdbc: COMMAND_CLOSE 20
03-03 10:48:29 jdbc: 
/**/dbMeta0.getColumns(null, "INFORMATION_SCHEMA", "DOMAINS", null);
03-03 10:48:29 jdbc: 
/**/PreparedStatement prep18 = conn5.prepareStatement("SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, COLUMN_NAME, DATA_TYPE, TYPE_NAME, CHARACTER_MAXIMUM_LENGTH COLUMN_SIZE, CHARACTER_MAXIMUM_LENGTH BUFFER_LENGTH, NUMERIC_SCALE DECIMAL_DIGITS, NUMERIC_PRECISION_RADIX NUM_PREC_RADIX, NULLABLE, REMARKS, COLUMN_DEFAULT COLUMN_DEF, DATA_TYPE SQL_DATA_TYPE, ZERO() SQL_DATETIME_SUB, CHARACTER_OCTET_LENGTH CHAR_OCTET_LENGTH, ORDINAL_POSITION, IS_NULLABLE IS_NULLABLE, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_CATALOG, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_SCHEMA, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_TABLE, SOURCE_DATA_TYPE, CASE WHEN SEQUENCE_NAME IS NULL THEN CAST(? AS VARCHAR) ELSE CAST(? AS VARCHAR) END IS_AUTOINCREMENT, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_CATLOG FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND TABLE_NAME LIKE ? ESCAPE ? AND COLUMN_NAME LIKE ? ESCAPE ? ORDER BY TABLE_SCHEM, TABLE_NAME, ORDINAL_POSITION");
03-03 10:48:29 jdbc: SESSION_PREPARE_READ_PARAMS 22
03-03 10:48:29 jdbc: 
/**/prep18.setString(1, "NO");
03-03 10:48:29 jdbc: 
/**/prep18.setString(2, "YES");
03-03 10:48:29 jdbc: 
/**/prep18.setString(3, "%");
03-03 10:48:29 jdbc: 
/**/prep18.setString(4, "\\");
03-03 10:48:29 jdbc: 
/**/prep18.setString(5, "INFORMATION_SCHEMA");
03-03 10:48:29 jdbc: 
/**/prep18.setString(6, "\\");
03-03 10:48:29 jdbc: 
/**/prep18.setString(7, "DOMAINS");
03-03 10:48:29 jdbc: 
/**/prep18.setString(8, "\\");
03-03 10:48:29 jdbc: 
/**/prep18.setString(9, "%");
03-03 10:48:29 jdbc: 
/**/prep18.setString(10, "\\");
03-03 10:48:29 jdbc: 
/**/ResultSet rs34 = prep18.executeQuery();
03-03 10:48:29 jdbc: COMMAND_EXECUTE_QUERY 22
03-03 10:48:29 jdbc: RESULT_CLOSE 23
03-03 10:48:29 jdbc: 
/**/rs34.next();
03-03 10:48:29 jdbc: 
/**/rs34.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs34.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs34.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs34.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs34.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs34.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs34.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs34.next();
03-03 10:48:29 jdbc: 
/**/rs34.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs34.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs34.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs34.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs34.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs34.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs34.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs34.next();
03-03 10:48:29 jdbc: 
/**/rs34.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs34.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs34.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs34.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs34.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs34.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs34.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs34.next();
03-03 10:48:29 jdbc: 
/**/rs34.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs34.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs34.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs34.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs34.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs34.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs34.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs34.next();
03-03 10:48:29 jdbc: 
/**/rs34.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs34.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs34.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs34.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs34.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs34.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs34.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs34.next();
03-03 10:48:29 jdbc: 
/**/rs34.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs34.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs34.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs34.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs34.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs34.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs34.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs34.next();
03-03 10:48:29 jdbc: 
/**/rs34.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs34.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs34.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs34.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs34.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs34.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs34.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs34.next();
03-03 10:48:29 jdbc: 
/**/rs34.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs34.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs34.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs34.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs34.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs34.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs34.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs34.next();
03-03 10:48:29 jdbc: 
/**/rs34.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs34.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs34.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs34.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs34.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs34.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs34.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs34.next();
03-03 10:48:29 jdbc: 
/**/rs34.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs34.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs34.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs34.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs34.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs34.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs34.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs34.next();
03-03 10:48:29 jdbc: 
/**/rs34.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs34.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs34.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs34.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs34.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs34.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs34.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs34.next();
03-03 10:48:29 jdbc: 
/**/rs34.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs34.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs34.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs34.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs34.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs34.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs34.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs34.next();
03-03 10:48:29 jdbc: 
/**/rs34.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs34.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs34.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs34.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs34.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs34.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs34.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs34.next();
03-03 10:48:29 jdbc: 
/**/rs34.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs34.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs34.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs34.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs34.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs34.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs34.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs34.next();
03-03 10:48:29 jdbc: 
/**/rs34.close();
03-03 10:48:29 jdbc: 
/**/prep18.close();
03-03 10:48:29 jdbc: COMMAND_CLOSE 22
03-03 10:48:29 jdbc: 
/**/dbMeta0.getColumns(null, "INFORMATION_SCHEMA", "FUNCTION_ALIASES", null);
03-03 10:48:29 jdbc: 
/**/PreparedStatement prep19 = conn5.prepareStatement("SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, COLUMN_NAME, DATA_TYPE, TYPE_NAME, CHARACTER_MAXIMUM_LENGTH COLUMN_SIZE, CHARACTER_MAXIMUM_LENGTH BUFFER_LENGTH, NUMERIC_SCALE DECIMAL_DIGITS, NUMERIC_PRECISION_RADIX NUM_PREC_RADIX, NULLABLE, REMARKS, COLUMN_DEFAULT COLUMN_DEF, DATA_TYPE SQL_DATA_TYPE, ZERO() SQL_DATETIME_SUB, CHARACTER_OCTET_LENGTH CHAR_OCTET_LENGTH, ORDINAL_POSITION, IS_NULLABLE IS_NULLABLE, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_CATALOG, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_SCHEMA, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_TABLE, SOURCE_DATA_TYPE, CASE WHEN SEQUENCE_NAME IS NULL THEN CAST(? AS VARCHAR) ELSE CAST(? AS VARCHAR) END IS_AUTOINCREMENT, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_CATLOG FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND TABLE_NAME LIKE ? ESCAPE ? AND COLUMN_NAME LIKE ? ESCAPE ? ORDER BY TABLE_SCHEM, TABLE_NAME, ORDINAL_POSITION");
03-03 10:48:29 jdbc: SESSION_PREPARE_READ_PARAMS 24
03-03 10:48:29 jdbc: 
/**/prep19.setString(1, "NO");
03-03 10:48:29 jdbc: 
/**/prep19.setString(2, "YES");
03-03 10:48:29 jdbc: 
/**/prep19.setString(3, "%");
03-03 10:48:29 jdbc: 
/**/prep19.setString(4, "\\");
03-03 10:48:29 jdbc: 
/**/prep19.setString(5, "INFORMATION_SCHEMA");
03-03 10:48:29 jdbc: 
/**/prep19.setString(6, "\\");
03-03 10:48:29 jdbc: 
/**/prep19.setString(7, "FUNCTION_ALIASES");
03-03 10:48:29 jdbc: 
/**/prep19.setString(8, "\\");
03-03 10:48:29 jdbc: 
/**/prep19.setString(9, "%");
03-03 10:48:29 jdbc: 
/**/prep19.setString(10, "\\");
03-03 10:48:29 jdbc: 
/**/ResultSet rs35 = prep19.executeQuery();
03-03 10:48:29 jdbc: COMMAND_EXECUTE_QUERY 24
03-03 10:48:29 jdbc: RESULT_CLOSE 25
03-03 10:48:29 jdbc: 
/**/rs35.next();
03-03 10:48:29 jdbc: 
/**/rs35.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs35.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs35.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs35.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs35.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs35.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs35.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs35.next();
03-03 10:48:29 jdbc: 
/**/rs35.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs35.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs35.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs35.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs35.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs35.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs35.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs35.next();
03-03 10:48:29 jdbc: 
/**/rs35.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs35.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs35.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs35.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs35.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs35.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs35.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs35.next();
03-03 10:48:29 jdbc: 
/**/rs35.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs35.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs35.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs35.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs35.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs35.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs35.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs35.next();
03-03 10:48:29 jdbc: 
/**/rs35.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs35.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs35.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs35.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs35.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs35.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs35.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs35.next();
03-03 10:48:29 jdbc: 
/**/rs35.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs35.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs35.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs35.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs35.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs35.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs35.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs35.next();
03-03 10:48:29 jdbc: 
/**/rs35.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs35.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs35.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs35.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs35.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs35.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs35.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs35.next();
03-03 10:48:29 jdbc: 
/**/rs35.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs35.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs35.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs35.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs35.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs35.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs35.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs35.next();
03-03 10:48:29 jdbc: 
/**/rs35.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs35.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs35.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs35.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs35.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs35.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs35.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs35.next();
03-03 10:48:29 jdbc: 
/**/rs35.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs35.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs35.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs35.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs35.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs35.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs35.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs35.next();
03-03 10:48:29 jdbc: 
/**/rs35.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs35.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs35.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs35.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs35.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs35.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs35.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs35.next();
03-03 10:48:29 jdbc: 
/**/rs35.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs35.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs35.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs35.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs35.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs35.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs35.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs35.next();
03-03 10:48:29 jdbc: 
/**/rs35.close();
03-03 10:48:29 jdbc: 
/**/prep19.close();
03-03 10:48:29 jdbc: COMMAND_CLOSE 24
03-03 10:48:29 jdbc: 
/**/dbMeta0.getColumns(null, "INFORMATION_SCHEMA", "FUNCTION_COLUMNS", null);
03-03 10:48:29 jdbc: 
/**/PreparedStatement prep20 = conn5.prepareStatement("SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, COLUMN_NAME, DATA_TYPE, TYPE_NAME, CHARACTER_MAXIMUM_LENGTH COLUMN_SIZE, CHARACTER_MAXIMUM_LENGTH BUFFER_LENGTH, NUMERIC_SCALE DECIMAL_DIGITS, NUMERIC_PRECISION_RADIX NUM_PREC_RADIX, NULLABLE, REMARKS, COLUMN_DEFAULT COLUMN_DEF, DATA_TYPE SQL_DATA_TYPE, ZERO() SQL_DATETIME_SUB, CHARACTER_OCTET_LENGTH CHAR_OCTET_LENGTH, ORDINAL_POSITION, IS_NULLABLE IS_NULLABLE, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_CATALOG, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_SCHEMA, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_TABLE, SOURCE_DATA_TYPE, CASE WHEN SEQUENCE_NAME IS NULL THEN CAST(? AS VARCHAR) ELSE CAST(? AS VARCHAR) END IS_AUTOINCREMENT, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_CATLOG FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND TABLE_NAME LIKE ? ESCAPE ? AND COLUMN_NAME LIKE ? ESCAPE ? ORDER BY TABLE_SCHEM, TABLE_NAME, ORDINAL_POSITION");
03-03 10:48:29 jdbc: SESSION_PREPARE_READ_PARAMS 26
03-03 10:48:29 jdbc: 
/**/prep20.setString(1, "NO");
03-03 10:48:29 jdbc: 
/**/prep20.setString(2, "YES");
03-03 10:48:29 jdbc: 
/**/prep20.setString(3, "%");
03-03 10:48:29 jdbc: 
/**/prep20.setString(4, "\\");
03-03 10:48:29 jdbc: 
/**/prep20.setString(5, "INFORMATION_SCHEMA");
03-03 10:48:29 jdbc: 
/**/prep20.setString(6, "\\");
03-03 10:48:29 jdbc: 
/**/prep20.setString(7, "FUNCTION_COLUMNS");
03-03 10:48:29 jdbc: 
/**/prep20.setString(8, "\\");
03-03 10:48:29 jdbc: 
/**/prep20.setString(9, "%");
03-03 10:48:29 jdbc: 
/**/prep20.setString(10, "\\");
03-03 10:48:29 jdbc: 
/**/ResultSet rs36 = prep20.executeQuery();
03-03 10:48:29 jdbc: COMMAND_EXECUTE_QUERY 26
03-03 10:48:29 jdbc: RESULT_CLOSE 27
03-03 10:48:29 jdbc: 
/**/rs36.next();
03-03 10:48:29 jdbc: 
/**/rs36.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs36.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs36.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs36.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs36.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs36.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs36.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs36.next();
03-03 10:48:29 jdbc: 
/**/rs36.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs36.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs36.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs36.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs36.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs36.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs36.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs36.next();
03-03 10:48:29 jdbc: 
/**/rs36.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs36.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs36.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs36.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs36.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs36.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs36.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs36.next();
03-03 10:48:29 jdbc: 
/**/rs36.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs36.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs36.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs36.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs36.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs36.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs36.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs36.next();
03-03 10:48:29 jdbc: 
/**/rs36.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs36.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs36.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs36.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs36.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs36.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs36.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs36.next();
03-03 10:48:29 jdbc: 
/**/rs36.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs36.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs36.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs36.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs36.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs36.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs36.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs36.next();
03-03 10:48:29 jdbc: 
/**/rs36.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs36.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs36.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs36.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs36.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs36.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs36.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs36.next();
03-03 10:48:29 jdbc: 
/**/rs36.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs36.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs36.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs36.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs36.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs36.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs36.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs36.next();
03-03 10:48:29 jdbc: 
/**/rs36.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs36.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs36.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs36.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs36.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs36.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs36.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs36.next();
03-03 10:48:29 jdbc: 
/**/rs36.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs36.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs36.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs36.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs36.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs36.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs36.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs36.next();
03-03 10:48:29 jdbc: 
/**/rs36.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs36.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs36.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs36.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs36.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs36.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs36.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs36.next();
03-03 10:48:29 jdbc: 
/**/rs36.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs36.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs36.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs36.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs36.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs36.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs36.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs36.next();
03-03 10:48:29 jdbc: 
/**/rs36.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs36.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs36.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs36.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs36.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs36.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs36.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs36.next();
03-03 10:48:29 jdbc: 
/**/rs36.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs36.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs36.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs36.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs36.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs36.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs36.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs36.next();
03-03 10:48:29 jdbc: 
/**/rs36.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs36.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs36.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs36.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs36.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs36.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs36.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs36.next();
03-03 10:48:29 jdbc: 
/**/rs36.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs36.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs36.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs36.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs36.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs36.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs36.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs36.next();
03-03 10:48:29 jdbc: 
/**/rs36.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs36.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs36.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs36.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs36.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs36.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs36.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs36.next();
03-03 10:48:29 jdbc: 
/**/rs36.close();
03-03 10:48:29 jdbc: 
/**/prep20.close();
03-03 10:48:29 jdbc: COMMAND_CLOSE 26
03-03 10:48:29 jdbc: 
/**/dbMeta0.getColumns(null, "INFORMATION_SCHEMA", "HELP", null);
03-03 10:48:29 jdbc: 
/**/PreparedStatement prep21 = conn5.prepareStatement("SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, COLUMN_NAME, DATA_TYPE, TYPE_NAME, CHARACTER_MAXIMUM_LENGTH COLUMN_SIZE, CHARACTER_MAXIMUM_LENGTH BUFFER_LENGTH, NUMERIC_SCALE DECIMAL_DIGITS, NUMERIC_PRECISION_RADIX NUM_PREC_RADIX, NULLABLE, REMARKS, COLUMN_DEFAULT COLUMN_DEF, DATA_TYPE SQL_DATA_TYPE, ZERO() SQL_DATETIME_SUB, CHARACTER_OCTET_LENGTH CHAR_OCTET_LENGTH, ORDINAL_POSITION, IS_NULLABLE IS_NULLABLE, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_CATALOG, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_SCHEMA, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_TABLE, SOURCE_DATA_TYPE, CASE WHEN SEQUENCE_NAME IS NULL THEN CAST(? AS VARCHAR) ELSE CAST(? AS VARCHAR) END IS_AUTOINCREMENT, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_CATLOG FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND TABLE_NAME LIKE ? ESCAPE ? AND COLUMN_NAME LIKE ? ESCAPE ? ORDER BY TABLE_SCHEM, TABLE_NAME, ORDINAL_POSITION");
03-03 10:48:29 jdbc: SESSION_PREPARE_READ_PARAMS 28
03-03 10:48:29 jdbc: 
/**/prep21.setString(1, "NO");
03-03 10:48:29 jdbc: 
/**/prep21.setString(2, "YES");
03-03 10:48:29 jdbc: 
/**/prep21.setString(3, "%");
03-03 10:48:29 jdbc: 
/**/prep21.setString(4, "\\");
03-03 10:48:29 jdbc: 
/**/prep21.setString(5, "INFORMATION_SCHEMA");
03-03 10:48:29 jdbc: 
/**/prep21.setString(6, "\\");
03-03 10:48:29 jdbc: 
/**/prep21.setString(7, "HELP");
03-03 10:48:29 jdbc: 
/**/prep21.setString(8, "\\");
03-03 10:48:29 jdbc: 
/**/prep21.setString(9, "%");
03-03 10:48:29 jdbc: 
/**/prep21.setString(10, "\\");
03-03 10:48:29 jdbc: 
/**/ResultSet rs37 = prep21.executeQuery();
03-03 10:48:29 jdbc: COMMAND_EXECUTE_QUERY 28
03-03 10:48:29 jdbc: RESULT_CLOSE 29
03-03 10:48:29 jdbc: 
/**/rs37.next();
03-03 10:48:29 jdbc: 
/**/rs37.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs37.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs37.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs37.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs37.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs37.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs37.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs37.next();
03-03 10:48:29 jdbc: 
/**/rs37.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs37.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs37.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs37.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs37.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs37.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs37.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs37.next();
03-03 10:48:29 jdbc: 
/**/rs37.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs37.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs37.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs37.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs37.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs37.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs37.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs37.next();
03-03 10:48:29 jdbc: 
/**/rs37.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs37.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs37.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs37.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs37.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs37.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs37.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs37.next();
03-03 10:48:29 jdbc: 
/**/rs37.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs37.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs37.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs37.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs37.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs37.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs37.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs37.next();
03-03 10:48:29 jdbc: 
/**/rs37.close();
03-03 10:48:29 jdbc: 
/**/prep21.close();
03-03 10:48:29 jdbc: COMMAND_CLOSE 28
03-03 10:48:29 jdbc: 
/**/dbMeta0.getColumns(null, "INFORMATION_SCHEMA", "INDEXES", null);
03-03 10:48:29 jdbc: 
/**/PreparedStatement prep22 = conn5.prepareStatement("SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, COLUMN_NAME, DATA_TYPE, TYPE_NAME, CHARACTER_MAXIMUM_LENGTH COLUMN_SIZE, CHARACTER_MAXIMUM_LENGTH BUFFER_LENGTH, NUMERIC_SCALE DECIMAL_DIGITS, NUMERIC_PRECISION_RADIX NUM_PREC_RADIX, NULLABLE, REMARKS, COLUMN_DEFAULT COLUMN_DEF, DATA_TYPE SQL_DATA_TYPE, ZERO() SQL_DATETIME_SUB, CHARACTER_OCTET_LENGTH CHAR_OCTET_LENGTH, ORDINAL_POSITION, IS_NULLABLE IS_NULLABLE, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_CATALOG, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_SCHEMA, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_TABLE, SOURCE_DATA_TYPE, CASE WHEN SEQUENCE_NAME IS NULL THEN CAST(? AS VARCHAR) ELSE CAST(? AS VARCHAR) END IS_AUTOINCREMENT, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_CATLOG FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND TABLE_NAME LIKE ? ESCAPE ? AND COLUMN_NAME LIKE ? ESCAPE ? ORDER BY TABLE_SCHEM, TABLE_NAME, ORDINAL_POSITION");
03-03 10:48:29 jdbc: SESSION_PREPARE_READ_PARAMS 30
03-03 10:48:29 jdbc: 
/**/prep22.setString(1, "NO");
03-03 10:48:29 jdbc: 
/**/prep22.setString(2, "YES");
03-03 10:48:29 jdbc: 
/**/prep22.setString(3, "%");
03-03 10:48:29 jdbc: 
/**/prep22.setString(4, "\\");
03-03 10:48:29 jdbc: 
/**/prep22.setString(5, "INFORMATION_SCHEMA");
03-03 10:48:29 jdbc: 
/**/prep22.setString(6, "\\");
03-03 10:48:29 jdbc: 
/**/prep22.setString(7, "INDEXES");
03-03 10:48:29 jdbc: 
/**/prep22.setString(8, "\\");
03-03 10:48:29 jdbc: 
/**/prep22.setString(9, "%");
03-03 10:48:29 jdbc: 
/**/prep22.setString(10, "\\");
03-03 10:48:29 jdbc: 
/**/ResultSet rs38 = prep22.executeQuery();
03-03 10:48:29 jdbc: COMMAND_EXECUTE_QUERY 30
03-03 10:48:29 jdbc: RESULT_CLOSE 31
03-03 10:48:29 jdbc: 
/**/rs38.next();
03-03 10:48:29 jdbc: 
/**/rs38.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs38.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs38.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs38.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs38.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs38.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs38.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs38.next();
03-03 10:48:29 jdbc: 
/**/rs38.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs38.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs38.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs38.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs38.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs38.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs38.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs38.next();
03-03 10:48:29 jdbc: 
/**/rs38.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs38.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs38.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs38.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs38.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs38.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs38.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs38.next();
03-03 10:48:29 jdbc: 
/**/rs38.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs38.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs38.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs38.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs38.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs38.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs38.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs38.next();
03-03 10:48:29 jdbc: 
/**/rs38.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs38.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs38.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs38.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs38.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs38.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs38.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs38.next();
03-03 10:48:29 jdbc: 
/**/rs38.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs38.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs38.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs38.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs38.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs38.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs38.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs38.next();
03-03 10:48:29 jdbc: 
/**/rs38.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs38.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs38.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs38.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs38.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs38.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs38.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs38.next();
03-03 10:48:29 jdbc: 
/**/rs38.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs38.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs38.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs38.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs38.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs38.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs38.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs38.next();
03-03 10:48:29 jdbc: 
/**/rs38.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs38.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs38.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs38.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs38.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs38.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs38.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs38.next();
03-03 10:48:29 jdbc: 
/**/rs38.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs38.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs38.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs38.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs38.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs38.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs38.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs38.next();
03-03 10:48:29 jdbc: 
/**/rs38.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs38.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs38.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs38.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs38.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs38.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs38.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs38.next();
03-03 10:48:29 jdbc: 
/**/rs38.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs38.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs38.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs38.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs38.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs38.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs38.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs38.next();
03-03 10:48:29 jdbc: 
/**/rs38.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs38.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs38.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs38.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs38.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs38.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs38.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs38.next();
03-03 10:48:29 jdbc: 
/**/rs38.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs38.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs38.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs38.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs38.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs38.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs38.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs38.next();
03-03 10:48:29 jdbc: 
/**/rs38.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs38.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs38.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs38.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs38.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs38.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs38.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs38.next();
03-03 10:48:29 jdbc: 
/**/rs38.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs38.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs38.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs38.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs38.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs38.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs38.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs38.next();
03-03 10:48:29 jdbc: 
/**/rs38.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs38.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs38.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs38.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs38.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs38.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs38.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs38.next();
03-03 10:48:29 jdbc: 
/**/rs38.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs38.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs38.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs38.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs38.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs38.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs38.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs38.next();
03-03 10:48:29 jdbc: 
/**/rs38.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs38.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs38.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs38.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs38.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs38.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs38.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs38.next();
03-03 10:48:29 jdbc: 
/**/rs38.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs38.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs38.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs38.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs38.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs38.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs38.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs38.next();
03-03 10:48:29 jdbc: 
/**/rs38.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs38.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs38.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs38.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs38.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs38.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs38.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs38.next();
03-03 10:48:29 jdbc: 
/**/rs38.close();
03-03 10:48:29 jdbc: 
/**/prep22.close();
03-03 10:48:29 jdbc: COMMAND_CLOSE 30
03-03 10:48:29 jdbc: 
/**/dbMeta0.getColumns(null, "INFORMATION_SCHEMA", "IN_DOUBT", null);
03-03 10:48:29 jdbc: 
/**/PreparedStatement prep23 = conn5.prepareStatement("SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, COLUMN_NAME, DATA_TYPE, TYPE_NAME, CHARACTER_MAXIMUM_LENGTH COLUMN_SIZE, CHARACTER_MAXIMUM_LENGTH BUFFER_LENGTH, NUMERIC_SCALE DECIMAL_DIGITS, NUMERIC_PRECISION_RADIX NUM_PREC_RADIX, NULLABLE, REMARKS, COLUMN_DEFAULT COLUMN_DEF, DATA_TYPE SQL_DATA_TYPE, ZERO() SQL_DATETIME_SUB, CHARACTER_OCTET_LENGTH CHAR_OCTET_LENGTH, ORDINAL_POSITION, IS_NULLABLE IS_NULLABLE, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_CATALOG, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_SCHEMA, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_TABLE, SOURCE_DATA_TYPE, CASE WHEN SEQUENCE_NAME IS NULL THEN CAST(? AS VARCHAR) ELSE CAST(? AS VARCHAR) END IS_AUTOINCREMENT, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_CATLOG FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND TABLE_NAME LIKE ? ESCAPE ? AND COLUMN_NAME LIKE ? ESCAPE ? ORDER BY TABLE_SCHEM, TABLE_NAME, ORDINAL_POSITION");
03-03 10:48:29 jdbc: SESSION_PREPARE_READ_PARAMS 32
03-03 10:48:29 jdbc: 
/**/prep23.setString(1, "NO");
03-03 10:48:29 jdbc: 
/**/prep23.setString(2, "YES");
03-03 10:48:29 jdbc: 
/**/prep23.setString(3, "%");
03-03 10:48:29 jdbc: 
/**/prep23.setString(4, "\\");
03-03 10:48:29 jdbc: 
/**/prep23.setString(5, "INFORMATION_SCHEMA");
03-03 10:48:29 jdbc: 
/**/prep23.setString(6, "\\");
03-03 10:48:29 jdbc: 
/**/prep23.setString(7, "IN_DOUBT");
03-03 10:48:29 jdbc: 
/**/prep23.setString(8, "\\");
03-03 10:48:29 jdbc: 
/**/prep23.setString(9, "%");
03-03 10:48:29 jdbc: 
/**/prep23.setString(10, "\\");
03-03 10:48:29 jdbc: 
/**/ResultSet rs39 = prep23.executeQuery();
03-03 10:48:29 jdbc: COMMAND_EXECUTE_QUERY 32
03-03 10:48:29 jdbc: RESULT_CLOSE 33
03-03 10:48:29 jdbc: 
/**/rs39.next();
03-03 10:48:29 jdbc: 
/**/rs39.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs39.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs39.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs39.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs39.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs39.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs39.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs39.next();
03-03 10:48:29 jdbc: 
/**/rs39.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs39.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs39.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs39.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs39.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs39.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs39.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs39.next();
03-03 10:48:29 jdbc: 
/**/rs39.close();
03-03 10:48:29 jdbc: 
/**/prep23.close();
03-03 10:48:29 jdbc: COMMAND_CLOSE 32
03-03 10:48:29 jdbc: 
/**/dbMeta0.getColumns(null, "INFORMATION_SCHEMA", "LOCKS", null);
03-03 10:48:29 jdbc: 
/**/PreparedStatement prep24 = conn5.prepareStatement("SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, COLUMN_NAME, DATA_TYPE, TYPE_NAME, CHARACTER_MAXIMUM_LENGTH COLUMN_SIZE, CHARACTER_MAXIMUM_LENGTH BUFFER_LENGTH, NUMERIC_SCALE DECIMAL_DIGITS, NUMERIC_PRECISION_RADIX NUM_PREC_RADIX, NULLABLE, REMARKS, COLUMN_DEFAULT COLUMN_DEF, DATA_TYPE SQL_DATA_TYPE, ZERO() SQL_DATETIME_SUB, CHARACTER_OCTET_LENGTH CHAR_OCTET_LENGTH, ORDINAL_POSITION, IS_NULLABLE IS_NULLABLE, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_CATALOG, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_SCHEMA, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_TABLE, SOURCE_DATA_TYPE, CASE WHEN SEQUENCE_NAME IS NULL THEN CAST(? AS VARCHAR) ELSE CAST(? AS VARCHAR) END IS_AUTOINCREMENT, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_CATLOG FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND TABLE_NAME LIKE ? ESCAPE ? AND COLUMN_NAME LIKE ? ESCAPE ? ORDER BY TABLE_SCHEM, TABLE_NAME, ORDINAL_POSITION");
03-03 10:48:29 jdbc: SESSION_PREPARE_READ_PARAMS 34
03-03 10:48:29 jdbc: 
/**/prep24.setString(1, "NO");
03-03 10:48:29 jdbc: 
/**/prep24.setString(2, "YES");
03-03 10:48:29 jdbc: 
/**/prep24.setString(3, "%");
03-03 10:48:29 jdbc: 
/**/prep24.setString(4, "\\");
03-03 10:48:29 jdbc: 
/**/prep24.setString(5, "INFORMATION_SCHEMA");
03-03 10:48:29 jdbc: 
/**/prep24.setString(6, "\\");
03-03 10:48:29 jdbc: 
/**/prep24.setString(7, "LOCKS");
03-03 10:48:29 jdbc: 
/**/prep24.setString(8, "\\");
03-03 10:48:29 jdbc: 
/**/prep24.setString(9, "%");
03-03 10:48:29 jdbc: 
/**/prep24.setString(10, "\\");
03-03 10:48:29 jdbc: 
/**/ResultSet rs40 = prep24.executeQuery();
03-03 10:48:29 jdbc: COMMAND_EXECUTE_QUERY 34
03-03 10:48:29 jdbc: RESULT_CLOSE 35
03-03 10:48:29 jdbc: 
/**/rs40.next();
03-03 10:48:29 jdbc: 
/**/rs40.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs40.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs40.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs40.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs40.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs40.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs40.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs40.next();
03-03 10:48:29 jdbc: 
/**/rs40.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs40.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs40.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs40.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs40.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs40.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs40.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs40.next();
03-03 10:48:29 jdbc: 
/**/rs40.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs40.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs40.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs40.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs40.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs40.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs40.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs40.next();
03-03 10:48:29 jdbc: 
/**/rs40.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs40.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs40.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs40.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs40.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs40.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs40.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs40.next();
03-03 10:48:29 jdbc: 
/**/rs40.close();
03-03 10:48:29 jdbc: 
/**/prep24.close();
03-03 10:48:29 jdbc: COMMAND_CLOSE 34
03-03 10:48:29 jdbc: 
/**/dbMeta0.getColumns(null, "INFORMATION_SCHEMA", "RIGHTS", null);
03-03 10:48:29 jdbc: 
/**/PreparedStatement prep25 = conn5.prepareStatement("SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, COLUMN_NAME, DATA_TYPE, TYPE_NAME, CHARACTER_MAXIMUM_LENGTH COLUMN_SIZE, CHARACTER_MAXIMUM_LENGTH BUFFER_LENGTH, NUMERIC_SCALE DECIMAL_DIGITS, NUMERIC_PRECISION_RADIX NUM_PREC_RADIX, NULLABLE, REMARKS, COLUMN_DEFAULT COLUMN_DEF, DATA_TYPE SQL_DATA_TYPE, ZERO() SQL_DATETIME_SUB, CHARACTER_OCTET_LENGTH CHAR_OCTET_LENGTH, ORDINAL_POSITION, IS_NULLABLE IS_NULLABLE, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_CATALOG, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_SCHEMA, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_TABLE, SOURCE_DATA_TYPE, CASE WHEN SEQUENCE_NAME IS NULL THEN CAST(? AS VARCHAR) ELSE CAST(? AS VARCHAR) END IS_AUTOINCREMENT, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_CATLOG FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND TABLE_NAME LIKE ? ESCAPE ? AND COLUMN_NAME LIKE ? ESCAPE ? ORDER BY TABLE_SCHEM, TABLE_NAME, ORDINAL_POSITION");
03-03 10:48:29 jdbc: SESSION_PREPARE_READ_PARAMS 36
03-03 10:48:29 jdbc: 
/**/prep25.setString(1, "NO");
03-03 10:48:29 jdbc: 
/**/prep25.setString(2, "YES");
03-03 10:48:29 jdbc: 
/**/prep25.setString(3, "%");
03-03 10:48:29 jdbc: 
/**/prep25.setString(4, "\\");
03-03 10:48:29 jdbc: 
/**/prep25.setString(5, "INFORMATION_SCHEMA");
03-03 10:48:29 jdbc: 
/**/prep25.setString(6, "\\");
03-03 10:48:29 jdbc: 
/**/prep25.setString(7, "RIGHTS");
03-03 10:48:29 jdbc: 
/**/prep25.setString(8, "\\");
03-03 10:48:29 jdbc: 
/**/prep25.setString(9, "%");
03-03 10:48:29 jdbc: 
/**/prep25.setString(10, "\\");
03-03 10:48:29 jdbc: 
/**/ResultSet rs41 = prep25.executeQuery();
03-03 10:48:29 jdbc: COMMAND_EXECUTE_QUERY 36
03-03 10:48:29 jdbc: RESULT_CLOSE 37
03-03 10:48:29 jdbc: 
/**/rs41.next();
03-03 10:48:29 jdbc: 
/**/rs41.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs41.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs41.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs41.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs41.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs41.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs41.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs41.next();
03-03 10:48:29 jdbc: 
/**/rs41.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs41.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs41.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs41.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs41.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs41.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs41.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs41.next();
03-03 10:48:29 jdbc: 
/**/rs41.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs41.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs41.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs41.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs41.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs41.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs41.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs41.next();
03-03 10:48:29 jdbc: 
/**/rs41.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs41.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs41.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs41.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs41.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs41.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs41.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs41.next();
03-03 10:48:29 jdbc: 
/**/rs41.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs41.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs41.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs41.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs41.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs41.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs41.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs41.next();
03-03 10:48:29 jdbc: 
/**/rs41.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs41.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs41.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs41.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs41.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs41.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs41.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs41.next();
03-03 10:48:29 jdbc: 
/**/rs41.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs41.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs41.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs41.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs41.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs41.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs41.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs41.next();
03-03 10:48:29 jdbc: 
/**/rs41.close();
03-03 10:48:29 jdbc: 
/**/prep25.close();
03-03 10:48:29 jdbc: COMMAND_CLOSE 36
03-03 10:48:29 jdbc: 
/**/dbMeta0.getColumns(null, "INFORMATION_SCHEMA", "ROLES", null);
03-03 10:48:29 jdbc: 
/**/PreparedStatement prep26 = conn5.prepareStatement("SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, COLUMN_NAME, DATA_TYPE, TYPE_NAME, CHARACTER_MAXIMUM_LENGTH COLUMN_SIZE, CHARACTER_MAXIMUM_LENGTH BUFFER_LENGTH, NUMERIC_SCALE DECIMAL_DIGITS, NUMERIC_PRECISION_RADIX NUM_PREC_RADIX, NULLABLE, REMARKS, COLUMN_DEFAULT COLUMN_DEF, DATA_TYPE SQL_DATA_TYPE, ZERO() SQL_DATETIME_SUB, CHARACTER_OCTET_LENGTH CHAR_OCTET_LENGTH, ORDINAL_POSITION, IS_NULLABLE IS_NULLABLE, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_CATALOG, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_SCHEMA, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_TABLE, SOURCE_DATA_TYPE, CASE WHEN SEQUENCE_NAME IS NULL THEN CAST(? AS VARCHAR) ELSE CAST(? AS VARCHAR) END IS_AUTOINCREMENT, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_CATLOG FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND TABLE_NAME LIKE ? ESCAPE ? AND COLUMN_NAME LIKE ? ESCAPE ? ORDER BY TABLE_SCHEM, TABLE_NAME, ORDINAL_POSITION");
03-03 10:48:29 jdbc: SESSION_PREPARE_READ_PARAMS 38
03-03 10:48:29 jdbc: 
/**/prep26.setString(1, "NO");
03-03 10:48:29 jdbc: 
/**/prep26.setString(2, "YES");
03-03 10:48:29 jdbc: 
/**/prep26.setString(3, "%");
03-03 10:48:29 jdbc: 
/**/prep26.setString(4, "\\");
03-03 10:48:29 jdbc: 
/**/prep26.setString(5, "INFORMATION_SCHEMA");
03-03 10:48:29 jdbc: 
/**/prep26.setString(6, "\\");
03-03 10:48:29 jdbc: 
/**/prep26.setString(7, "ROLES");
03-03 10:48:29 jdbc: 
/**/prep26.setString(8, "\\");
03-03 10:48:29 jdbc: 
/**/prep26.setString(9, "%");
03-03 10:48:29 jdbc: 
/**/prep26.setString(10, "\\");
03-03 10:48:29 jdbc: 
/**/ResultSet rs42 = prep26.executeQuery();
03-03 10:48:29 jdbc: COMMAND_EXECUTE_QUERY 38
03-03 10:48:29 jdbc: RESULT_CLOSE 39
03-03 10:48:29 jdbc: 
/**/rs42.next();
03-03 10:48:29 jdbc: 
/**/rs42.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs42.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs42.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs42.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs42.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs42.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs42.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs42.next();
03-03 10:48:29 jdbc: 
/**/rs42.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs42.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs42.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs42.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs42.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs42.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs42.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs42.next();
03-03 10:48:29 jdbc: 
/**/rs42.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs42.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs42.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs42.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs42.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs42.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs42.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs42.next();
03-03 10:48:29 jdbc: 
/**/rs42.close();
03-03 10:48:29 jdbc: 
/**/prep26.close();
03-03 10:48:29 jdbc: COMMAND_CLOSE 38
03-03 10:48:29 jdbc: 
/**/dbMeta0.getColumns(null, "INFORMATION_SCHEMA", "SCHEMATA", null);
03-03 10:48:29 jdbc: 
/**/PreparedStatement prep27 = conn5.prepareStatement("SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, COLUMN_NAME, DATA_TYPE, TYPE_NAME, CHARACTER_MAXIMUM_LENGTH COLUMN_SIZE, CHARACTER_MAXIMUM_LENGTH BUFFER_LENGTH, NUMERIC_SCALE DECIMAL_DIGITS, NUMERIC_PRECISION_RADIX NUM_PREC_RADIX, NULLABLE, REMARKS, COLUMN_DEFAULT COLUMN_DEF, DATA_TYPE SQL_DATA_TYPE, ZERO() SQL_DATETIME_SUB, CHARACTER_OCTET_LENGTH CHAR_OCTET_LENGTH, ORDINAL_POSITION, IS_NULLABLE IS_NULLABLE, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_CATALOG, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_SCHEMA, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_TABLE, SOURCE_DATA_TYPE, CASE WHEN SEQUENCE_NAME IS NULL THEN CAST(? AS VARCHAR) ELSE CAST(? AS VARCHAR) END IS_AUTOINCREMENT, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_CATLOG FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND TABLE_NAME LIKE ? ESCAPE ? AND COLUMN_NAME LIKE ? ESCAPE ? ORDER BY TABLE_SCHEM, TABLE_NAME, ORDINAL_POSITION");
03-03 10:48:29 jdbc: SESSION_PREPARE_READ_PARAMS 40
03-03 10:48:29 jdbc: 
/**/prep27.setString(1, "NO");
03-03 10:48:29 jdbc: 
/**/prep27.setString(2, "YES");
03-03 10:48:29 jdbc: 
/**/prep27.setString(3, "%");
03-03 10:48:29 jdbc: 
/**/prep27.setString(4, "\\");
03-03 10:48:29 jdbc: 
/**/prep27.setString(5, "INFORMATION_SCHEMA");
03-03 10:48:29 jdbc: 
/**/prep27.setString(6, "\\");
03-03 10:48:29 jdbc: 
/**/prep27.setString(7, "SCHEMATA");
03-03 10:48:29 jdbc: 
/**/prep27.setString(8, "\\");
03-03 10:48:29 jdbc: 
/**/prep27.setString(9, "%");
03-03 10:48:29 jdbc: 
/**/prep27.setString(10, "\\");
03-03 10:48:29 jdbc: 
/**/ResultSet rs43 = prep27.executeQuery();
03-03 10:48:29 jdbc: COMMAND_EXECUTE_QUERY 40
03-03 10:48:29 jdbc: RESULT_CLOSE 41
03-03 10:48:29 jdbc: 
/**/rs43.next();
03-03 10:48:29 jdbc: 
/**/rs43.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs43.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs43.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs43.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs43.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs43.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs43.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs43.next();
03-03 10:48:29 jdbc: 
/**/rs43.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs43.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs43.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs43.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs43.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs43.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs43.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs43.next();
03-03 10:48:29 jdbc: 
/**/rs43.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs43.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs43.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs43.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs43.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs43.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs43.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs43.next();
03-03 10:48:29 jdbc: 
/**/rs43.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs43.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs43.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs43.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs43.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs43.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs43.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs43.next();
03-03 10:48:29 jdbc: 
/**/rs43.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs43.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs43.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs43.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs43.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs43.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs43.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs43.next();
03-03 10:48:29 jdbc: 
/**/rs43.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs43.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs43.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs43.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs43.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs43.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs43.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs43.next();
03-03 10:48:29 jdbc: 
/**/rs43.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs43.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs43.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs43.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs43.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs43.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs43.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs43.next();
03-03 10:48:29 jdbc: 
/**/rs43.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs43.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs43.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs43.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs43.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs43.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs43.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs43.next();
03-03 10:48:29 jdbc: 
/**/rs43.close();
03-03 10:48:29 jdbc: 
/**/prep27.close();
03-03 10:48:29 jdbc: COMMAND_CLOSE 40
03-03 10:48:29 jdbc: 
/**/dbMeta0.getColumns(null, "INFORMATION_SCHEMA", "SEQUENCES", null);
03-03 10:48:29 jdbc: 
/**/PreparedStatement prep28 = conn5.prepareStatement("SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, COLUMN_NAME, DATA_TYPE, TYPE_NAME, CHARACTER_MAXIMUM_LENGTH COLUMN_SIZE, CHARACTER_MAXIMUM_LENGTH BUFFER_LENGTH, NUMERIC_SCALE DECIMAL_DIGITS, NUMERIC_PRECISION_RADIX NUM_PREC_RADIX, NULLABLE, REMARKS, COLUMN_DEFAULT COLUMN_DEF, DATA_TYPE SQL_DATA_TYPE, ZERO() SQL_DATETIME_SUB, CHARACTER_OCTET_LENGTH CHAR_OCTET_LENGTH, ORDINAL_POSITION, IS_NULLABLE IS_NULLABLE, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_CATALOG, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_SCHEMA, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_TABLE, SOURCE_DATA_TYPE, CASE WHEN SEQUENCE_NAME IS NULL THEN CAST(? AS VARCHAR) ELSE CAST(? AS VARCHAR) END IS_AUTOINCREMENT, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_CATLOG FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND TABLE_NAME LIKE ? ESCAPE ? AND COLUMN_NAME LIKE ? ESCAPE ? ORDER BY TABLE_SCHEM, TABLE_NAME, ORDINAL_POSITION");
03-03 10:48:29 jdbc: SESSION_PREPARE_READ_PARAMS 42
03-03 10:48:29 jdbc: 
/**/prep28.setString(1, "NO");
03-03 10:48:29 jdbc: 
/**/prep28.setString(2, "YES");
03-03 10:48:29 jdbc: 
/**/prep28.setString(3, "%");
03-03 10:48:29 jdbc: 
/**/prep28.setString(4, "\\");
03-03 10:48:29 jdbc: 
/**/prep28.setString(5, "INFORMATION_SCHEMA");
03-03 10:48:29 jdbc: 
/**/prep28.setString(6, "\\");
03-03 10:48:29 jdbc: 
/**/prep28.setString(7, "SEQUENCES");
03-03 10:48:29 jdbc: 
/**/prep28.setString(8, "\\");
03-03 10:48:29 jdbc: 
/**/prep28.setString(9, "%");
03-03 10:48:29 jdbc: 
/**/prep28.setString(10, "\\");
03-03 10:48:29 jdbc: 
/**/ResultSet rs44 = prep28.executeQuery();
03-03 10:48:29 jdbc: COMMAND_EXECUTE_QUERY 42
03-03 10:48:29 jdbc: RESULT_CLOSE 43
03-03 10:48:29 jdbc: 
/**/rs44.next();
03-03 10:48:29 jdbc: 
/**/rs44.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs44.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs44.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs44.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs44.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs44.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs44.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs44.next();
03-03 10:48:29 jdbc: 
/**/rs44.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs44.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs44.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs44.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs44.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs44.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs44.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs44.next();
03-03 10:48:29 jdbc: 
/**/rs44.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs44.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs44.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs44.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs44.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs44.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs44.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs44.next();
03-03 10:48:29 jdbc: 
/**/rs44.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs44.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs44.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs44.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs44.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs44.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs44.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs44.next();
03-03 10:48:29 jdbc: 
/**/rs44.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs44.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs44.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs44.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs44.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs44.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs44.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs44.next();
03-03 10:48:29 jdbc: 
/**/rs44.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs44.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs44.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs44.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs44.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs44.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs44.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs44.next();
03-03 10:48:29 jdbc: 
/**/rs44.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs44.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs44.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs44.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs44.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs44.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs44.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs44.next();
03-03 10:48:29 jdbc: 
/**/rs44.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs44.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs44.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs44.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs44.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs44.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs44.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs44.next();
03-03 10:48:29 jdbc: 
/**/rs44.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs44.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs44.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs44.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs44.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs44.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs44.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs44.next();
03-03 10:48:29 jdbc: 
/**/rs44.close();
03-03 10:48:29 jdbc: 
/**/prep28.close();
03-03 10:48:29 jdbc: COMMAND_CLOSE 42
03-03 10:48:29 jdbc: 
/**/dbMeta0.getColumns(null, "INFORMATION_SCHEMA", "SESSIONS", null);
03-03 10:48:29 jdbc: 
/**/PreparedStatement prep29 = conn5.prepareStatement("SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, COLUMN_NAME, DATA_TYPE, TYPE_NAME, CHARACTER_MAXIMUM_LENGTH COLUMN_SIZE, CHARACTER_MAXIMUM_LENGTH BUFFER_LENGTH, NUMERIC_SCALE DECIMAL_DIGITS, NUMERIC_PRECISION_RADIX NUM_PREC_RADIX, NULLABLE, REMARKS, COLUMN_DEFAULT COLUMN_DEF, DATA_TYPE SQL_DATA_TYPE, ZERO() SQL_DATETIME_SUB, CHARACTER_OCTET_LENGTH CHAR_OCTET_LENGTH, ORDINAL_POSITION, IS_NULLABLE IS_NULLABLE, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_CATALOG, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_SCHEMA, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_TABLE, SOURCE_DATA_TYPE, CASE WHEN SEQUENCE_NAME IS NULL THEN CAST(? AS VARCHAR) ELSE CAST(? AS VARCHAR) END IS_AUTOINCREMENT, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_CATLOG FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND TABLE_NAME LIKE ? ESCAPE ? AND COLUMN_NAME LIKE ? ESCAPE ? ORDER BY TABLE_SCHEM, TABLE_NAME, ORDINAL_POSITION");
03-03 10:48:29 jdbc: SESSION_PREPARE_READ_PARAMS 44
03-03 10:48:29 jdbc: 
/**/prep29.setString(1, "NO");
03-03 10:48:29 jdbc: 
/**/prep29.setString(2, "YES");
03-03 10:48:29 jdbc: 
/**/prep29.setString(3, "%");
03-03 10:48:29 jdbc: 
/**/prep29.setString(4, "\\");
03-03 10:48:29 jdbc: 
/**/prep29.setString(5, "INFORMATION_SCHEMA");
03-03 10:48:29 jdbc: 
/**/prep29.setString(6, "\\");
03-03 10:48:29 jdbc: 
/**/prep29.setString(7, "SESSIONS");
03-03 10:48:29 jdbc: 
/**/prep29.setString(8, "\\");
03-03 10:48:29 jdbc: 
/**/prep29.setString(9, "%");
03-03 10:48:29 jdbc: 
/**/prep29.setString(10, "\\");
03-03 10:48:29 jdbc: 
/**/ResultSet rs45 = prep29.executeQuery();
03-03 10:48:29 jdbc: COMMAND_EXECUTE_QUERY 44
03-03 10:48:29 jdbc: RESULT_CLOSE 45
03-03 10:48:29 jdbc: 
/**/rs45.next();
03-03 10:48:29 jdbc: 
/**/rs45.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs45.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs45.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs45.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs45.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs45.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs45.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs45.next();
03-03 10:48:29 jdbc: 
/**/rs45.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs45.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs45.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs45.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs45.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs45.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs45.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs45.next();
03-03 10:48:29 jdbc: 
/**/rs45.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs45.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs45.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs45.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs45.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs45.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs45.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs45.next();
03-03 10:48:29 jdbc: 
/**/rs45.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs45.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs45.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs45.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs45.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs45.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs45.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs45.next();
03-03 10:48:29 jdbc: 
/**/rs45.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs45.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs45.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs45.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs45.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs45.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs45.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs45.next();
03-03 10:48:29 jdbc: 
/**/rs45.close();
03-03 10:48:29 jdbc: 
/**/prep29.close();
03-03 10:48:29 jdbc: COMMAND_CLOSE 44
03-03 10:48:29 jdbc: 
/**/dbMeta0.getColumns(null, "INFORMATION_SCHEMA", "SESSION_STATE", null);
03-03 10:48:29 jdbc: 
/**/PreparedStatement prep30 = conn5.prepareStatement("SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, COLUMN_NAME, DATA_TYPE, TYPE_NAME, CHARACTER_MAXIMUM_LENGTH COLUMN_SIZE, CHARACTER_MAXIMUM_LENGTH BUFFER_LENGTH, NUMERIC_SCALE DECIMAL_DIGITS, NUMERIC_PRECISION_RADIX NUM_PREC_RADIX, NULLABLE, REMARKS, COLUMN_DEFAULT COLUMN_DEF, DATA_TYPE SQL_DATA_TYPE, ZERO() SQL_DATETIME_SUB, CHARACTER_OCTET_LENGTH CHAR_OCTET_LENGTH, ORDINAL_POSITION, IS_NULLABLE IS_NULLABLE, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_CATALOG, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_SCHEMA, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_TABLE, SOURCE_DATA_TYPE, CASE WHEN SEQUENCE_NAME IS NULL THEN CAST(? AS VARCHAR) ELSE CAST(? AS VARCHAR) END IS_AUTOINCREMENT, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_CATLOG FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND TABLE_NAME LIKE ? ESCAPE ? AND COLUMN_NAME LIKE ? ESCAPE ? ORDER BY TABLE_SCHEM, TABLE_NAME, ORDINAL_POSITION");
03-03 10:48:29 jdbc: SESSION_PREPARE_READ_PARAMS 46
03-03 10:48:29 jdbc: 
/**/prep30.setString(1, "NO");
03-03 10:48:29 jdbc: 
/**/prep30.setString(2, "YES");
03-03 10:48:29 jdbc: 
/**/prep30.setString(3, "%");
03-03 10:48:29 jdbc: 
/**/prep30.setString(4, "\\");
03-03 10:48:29 jdbc: 
/**/prep30.setString(5, "INFORMATION_SCHEMA");
03-03 10:48:29 jdbc: 
/**/prep30.setString(6, "\\");
03-03 10:48:29 jdbc: 
/**/prep30.setString(7, "SESSION_STATE");
03-03 10:48:29 jdbc: 
/**/prep30.setString(8, "\\");
03-03 10:48:29 jdbc: 
/**/prep30.setString(9, "%");
03-03 10:48:29 jdbc: 
/**/prep30.setString(10, "\\");
03-03 10:48:29 jdbc: 
/**/ResultSet rs46 = prep30.executeQuery();
03-03 10:48:29 jdbc: COMMAND_EXECUTE_QUERY 46
03-03 10:48:29 jdbc: RESULT_CLOSE 47
03-03 10:48:29 jdbc: 
/**/rs46.next();
03-03 10:48:29 jdbc: 
/**/rs46.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs46.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs46.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs46.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs46.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs46.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs46.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs46.next();
03-03 10:48:29 jdbc: 
/**/rs46.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs46.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs46.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs46.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs46.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs46.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs46.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs46.next();
03-03 10:48:29 jdbc: 
/**/rs46.close();
03-03 10:48:29 jdbc: 
/**/prep30.close();
03-03 10:48:29 jdbc: COMMAND_CLOSE 46
03-03 10:48:29 jdbc: 
/**/dbMeta0.getColumns(null, "INFORMATION_SCHEMA", "SETTINGS", null);
03-03 10:48:29 jdbc: 
/**/PreparedStatement prep31 = conn5.prepareStatement("SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, COLUMN_NAME, DATA_TYPE, TYPE_NAME, CHARACTER_MAXIMUM_LENGTH COLUMN_SIZE, CHARACTER_MAXIMUM_LENGTH BUFFER_LENGTH, NUMERIC_SCALE DECIMAL_DIGITS, NUMERIC_PRECISION_RADIX NUM_PREC_RADIX, NULLABLE, REMARKS, COLUMN_DEFAULT COLUMN_DEF, DATA_TYPE SQL_DATA_TYPE, ZERO() SQL_DATETIME_SUB, CHARACTER_OCTET_LENGTH CHAR_OCTET_LENGTH, ORDINAL_POSITION, IS_NULLABLE IS_NULLABLE, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_CATALOG, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_SCHEMA, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_TABLE, SOURCE_DATA_TYPE, CASE WHEN SEQUENCE_NAME IS NULL THEN CAST(? AS VARCHAR) ELSE CAST(? AS VARCHAR) END IS_AUTOINCREMENT, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_CATLOG FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND TABLE_NAME LIKE ? ESCAPE ? AND COLUMN_NAME LIKE ? ESCAPE ? ORDER BY TABLE_SCHEM, TABLE_NAME, ORDINAL_POSITION");
03-03 10:48:29 jdbc: SESSION_PREPARE_READ_PARAMS 48
03-03 10:48:29 jdbc: 
/**/prep31.setString(1, "NO");
03-03 10:48:29 jdbc: 
/**/prep31.setString(2, "YES");
03-03 10:48:29 jdbc: 
/**/prep31.setString(3, "%");
03-03 10:48:29 jdbc: 
/**/prep31.setString(4, "\\");
03-03 10:48:29 jdbc: 
/**/prep31.setString(5, "INFORMATION_SCHEMA");
03-03 10:48:29 jdbc: 
/**/prep31.setString(6, "\\");
03-03 10:48:29 jdbc: 
/**/prep31.setString(7, "SETTINGS");
03-03 10:48:29 jdbc: 
/**/prep31.setString(8, "\\");
03-03 10:48:29 jdbc: 
/**/prep31.setString(9, "%");
03-03 10:48:29 jdbc: 
/**/prep31.setString(10, "\\");
03-03 10:48:29 jdbc: 
/**/ResultSet rs47 = prep31.executeQuery();
03-03 10:48:29 jdbc: COMMAND_EXECUTE_QUERY 48
03-03 10:48:29 jdbc: RESULT_CLOSE 49
03-03 10:48:29 jdbc: 
/**/rs47.next();
03-03 10:48:29 jdbc: 
/**/rs47.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs47.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs47.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs47.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs47.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs47.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs47.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs47.next();
03-03 10:48:29 jdbc: 
/**/rs47.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs47.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs47.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs47.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs47.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs47.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs47.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs47.next();
03-03 10:48:29 jdbc: 
/**/rs47.close();
03-03 10:48:29 jdbc: 
/**/prep31.close();
03-03 10:48:29 jdbc: COMMAND_CLOSE 48
03-03 10:48:29 jdbc: 
/**/dbMeta0.getColumns(null, "INFORMATION_SCHEMA", "TABLES", null);
03-03 10:48:29 jdbc: 
/**/PreparedStatement prep32 = conn5.prepareStatement("SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, COLUMN_NAME, DATA_TYPE, TYPE_NAME, CHARACTER_MAXIMUM_LENGTH COLUMN_SIZE, CHARACTER_MAXIMUM_LENGTH BUFFER_LENGTH, NUMERIC_SCALE DECIMAL_DIGITS, NUMERIC_PRECISION_RADIX NUM_PREC_RADIX, NULLABLE, REMARKS, COLUMN_DEFAULT COLUMN_DEF, DATA_TYPE SQL_DATA_TYPE, ZERO() SQL_DATETIME_SUB, CHARACTER_OCTET_LENGTH CHAR_OCTET_LENGTH, ORDINAL_POSITION, IS_NULLABLE IS_NULLABLE, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_CATALOG, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_SCHEMA, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_TABLE, SOURCE_DATA_TYPE, CASE WHEN SEQUENCE_NAME IS NULL THEN CAST(? AS VARCHAR) ELSE CAST(? AS VARCHAR) END IS_AUTOINCREMENT, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_CATLOG FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND TABLE_NAME LIKE ? ESCAPE ? AND COLUMN_NAME LIKE ? ESCAPE ? ORDER BY TABLE_SCHEM, TABLE_NAME, ORDINAL_POSITION");
03-03 10:48:29 jdbc: SESSION_PREPARE_READ_PARAMS 50
03-03 10:48:29 jdbc: 
/**/prep32.setString(1, "NO");
03-03 10:48:29 jdbc: 
/**/prep32.setString(2, "YES");
03-03 10:48:29 jdbc: 
/**/prep32.setString(3, "%");
03-03 10:48:29 jdbc: 
/**/prep32.setString(4, "\\");
03-03 10:48:29 jdbc: 
/**/prep32.setString(5, "INFORMATION_SCHEMA");
03-03 10:48:29 jdbc: 
/**/prep32.setString(6, "\\");
03-03 10:48:29 jdbc: 
/**/prep32.setString(7, "TABLES");
03-03 10:48:29 jdbc: 
/**/prep32.setString(8, "\\");
03-03 10:48:29 jdbc: 
/**/prep32.setString(9, "%");
03-03 10:48:29 jdbc: 
/**/prep32.setString(10, "\\");
03-03 10:48:29 jdbc: 
/**/ResultSet rs48 = prep32.executeQuery();
03-03 10:48:29 jdbc: COMMAND_EXECUTE_QUERY 50
03-03 10:48:29 jdbc: RESULT_CLOSE 51
03-03 10:48:29 jdbc: 
/**/rs48.next();
03-03 10:48:29 jdbc: 
/**/rs48.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs48.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs48.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs48.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs48.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs48.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs48.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs48.next();
03-03 10:48:29 jdbc: 
/**/rs48.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs48.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs48.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs48.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs48.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs48.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs48.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs48.next();
03-03 10:48:29 jdbc: 
/**/rs48.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs48.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs48.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs48.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs48.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs48.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs48.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs48.next();
03-03 10:48:29 jdbc: 
/**/rs48.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs48.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs48.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs48.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs48.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs48.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs48.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs48.next();
03-03 10:48:29 jdbc: 
/**/rs48.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs48.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs48.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs48.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs48.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs48.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs48.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs48.next();
03-03 10:48:29 jdbc: 
/**/rs48.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs48.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs48.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs48.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs48.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs48.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs48.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs48.next();
03-03 10:48:29 jdbc: 
/**/rs48.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs48.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs48.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs48.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs48.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs48.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs48.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs48.next();
03-03 10:48:29 jdbc: 
/**/rs48.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs48.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs48.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs48.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs48.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs48.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs48.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs48.next();
03-03 10:48:29 jdbc: 
/**/rs48.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs48.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs48.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs48.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs48.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs48.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs48.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs48.next();
03-03 10:48:29 jdbc: 
/**/rs48.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs48.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs48.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs48.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs48.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs48.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs48.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs48.next();
03-03 10:48:29 jdbc: 
/**/rs48.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs48.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs48.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs48.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs48.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs48.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs48.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs48.next();
03-03 10:48:29 jdbc: 
/**/rs48.close();
03-03 10:48:29 jdbc: 
/**/prep32.close();
03-03 10:48:29 jdbc: COMMAND_CLOSE 50
03-03 10:48:29 jdbc: 
/**/dbMeta0.getColumns(null, "INFORMATION_SCHEMA", "TABLE_PRIVILEGES", null);
03-03 10:48:29 jdbc: 
/**/PreparedStatement prep33 = conn5.prepareStatement("SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, COLUMN_NAME, DATA_TYPE, TYPE_NAME, CHARACTER_MAXIMUM_LENGTH COLUMN_SIZE, CHARACTER_MAXIMUM_LENGTH BUFFER_LENGTH, NUMERIC_SCALE DECIMAL_DIGITS, NUMERIC_PRECISION_RADIX NUM_PREC_RADIX, NULLABLE, REMARKS, COLUMN_DEFAULT COLUMN_DEF, DATA_TYPE SQL_DATA_TYPE, ZERO() SQL_DATETIME_SUB, CHARACTER_OCTET_LENGTH CHAR_OCTET_LENGTH, ORDINAL_POSITION, IS_NULLABLE IS_NULLABLE, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_CATALOG, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_SCHEMA, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_TABLE, SOURCE_DATA_TYPE, CASE WHEN SEQUENCE_NAME IS NULL THEN CAST(? AS VARCHAR) ELSE CAST(? AS VARCHAR) END IS_AUTOINCREMENT, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_CATLOG FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND TABLE_NAME LIKE ? ESCAPE ? AND COLUMN_NAME LIKE ? ESCAPE ? ORDER BY TABLE_SCHEM, TABLE_NAME, ORDINAL_POSITION");
03-03 10:48:29 jdbc: SESSION_PREPARE_READ_PARAMS 52
03-03 10:48:29 jdbc: 
/**/prep33.setString(1, "NO");
03-03 10:48:29 jdbc: 
/**/prep33.setString(2, "YES");
03-03 10:48:29 jdbc: 
/**/prep33.setString(3, "%");
03-03 10:48:29 jdbc: 
/**/prep33.setString(4, "\\");
03-03 10:48:29 jdbc: 
/**/prep33.setString(5, "INFORMATION_SCHEMA");
03-03 10:48:29 jdbc: 
/**/prep33.setString(6, "\\");
03-03 10:48:29 jdbc: 
/**/prep33.setString(7, "TABLE_PRIVILEGES");
03-03 10:48:29 jdbc: 
/**/prep33.setString(8, "\\");
03-03 10:48:29 jdbc: 
/**/prep33.setString(9, "%");
03-03 10:48:29 jdbc: 
/**/prep33.setString(10, "\\");
03-03 10:48:29 jdbc: 
/**/ResultSet rs49 = prep33.executeQuery();
03-03 10:48:29 jdbc: COMMAND_EXECUTE_QUERY 52
03-03 10:48:29 jdbc: RESULT_CLOSE 53
03-03 10:48:29 jdbc: 
/**/rs49.next();
03-03 10:48:29 jdbc: 
/**/rs49.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs49.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs49.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs49.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs49.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs49.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs49.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs49.next();
03-03 10:48:29 jdbc: 
/**/rs49.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs49.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs49.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs49.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs49.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs49.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs49.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs49.next();
03-03 10:48:29 jdbc: 
/**/rs49.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs49.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs49.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs49.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs49.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs49.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs49.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs49.next();
03-03 10:48:29 jdbc: 
/**/rs49.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs49.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs49.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs49.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs49.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs49.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs49.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs49.next();
03-03 10:48:29 jdbc: 
/**/rs49.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs49.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs49.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs49.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs49.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs49.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs49.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs49.next();
03-03 10:48:29 jdbc: 
/**/rs49.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs49.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs49.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs49.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs49.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs49.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs49.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs49.next();
03-03 10:48:29 jdbc: 
/**/rs49.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs49.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs49.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs49.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs49.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs49.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs49.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs49.next();
03-03 10:48:29 jdbc: 
/**/rs49.close();
03-03 10:48:29 jdbc: 
/**/prep33.close();
03-03 10:48:29 jdbc: COMMAND_CLOSE 52
03-03 10:48:29 jdbc: 
/**/dbMeta0.getColumns(null, "INFORMATION_SCHEMA", "TABLE_TYPES", null);
03-03 10:48:29 jdbc: 
/**/PreparedStatement prep34 = conn5.prepareStatement("SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, COLUMN_NAME, DATA_TYPE, TYPE_NAME, CHARACTER_MAXIMUM_LENGTH COLUMN_SIZE, CHARACTER_MAXIMUM_LENGTH BUFFER_LENGTH, NUMERIC_SCALE DECIMAL_DIGITS, NUMERIC_PRECISION_RADIX NUM_PREC_RADIX, NULLABLE, REMARKS, COLUMN_DEFAULT COLUMN_DEF, DATA_TYPE SQL_DATA_TYPE, ZERO() SQL_DATETIME_SUB, CHARACTER_OCTET_LENGTH CHAR_OCTET_LENGTH, ORDINAL_POSITION, IS_NULLABLE IS_NULLABLE, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_CATALOG, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_SCHEMA, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_TABLE, SOURCE_DATA_TYPE, CASE WHEN SEQUENCE_NAME IS NULL THEN CAST(? AS VARCHAR) ELSE CAST(? AS VARCHAR) END IS_AUTOINCREMENT, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_CATLOG FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND TABLE_NAME LIKE ? ESCAPE ? AND COLUMN_NAME LIKE ? ESCAPE ? ORDER BY TABLE_SCHEM, TABLE_NAME, ORDINAL_POSITION");
03-03 10:48:29 jdbc: SESSION_PREPARE_READ_PARAMS 54
03-03 10:48:29 jdbc: 
/**/prep34.setString(1, "NO");
03-03 10:48:29 jdbc: 
/**/prep34.setString(2, "YES");
03-03 10:48:29 jdbc: 
/**/prep34.setString(3, "%");
03-03 10:48:29 jdbc: 
/**/prep34.setString(4, "\\");
03-03 10:48:29 jdbc: 
/**/prep34.setString(5, "INFORMATION_SCHEMA");
03-03 10:48:29 jdbc: 
/**/prep34.setString(6, "\\");
03-03 10:48:29 jdbc: 
/**/prep34.setString(7, "TABLE_TYPES");
03-03 10:48:29 jdbc: 
/**/prep34.setString(8, "\\");
03-03 10:48:29 jdbc: 
/**/prep34.setString(9, "%");
03-03 10:48:29 jdbc: 
/**/prep34.setString(10, "\\");
03-03 10:48:29 jdbc: 
/**/ResultSet rs50 = prep34.executeQuery();
03-03 10:48:29 jdbc: COMMAND_EXECUTE_QUERY 54
03-03 10:48:29 jdbc: RESULT_CLOSE 55
03-03 10:48:29 jdbc: 
/**/rs50.next();
03-03 10:48:29 jdbc: 
/**/rs50.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs50.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs50.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs50.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs50.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs50.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs50.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs50.next();
03-03 10:48:29 jdbc: 
/**/rs50.close();
03-03 10:48:29 jdbc: 
/**/prep34.close();
03-03 10:48:29 jdbc: COMMAND_CLOSE 54
03-03 10:48:29 jdbc: 
/**/dbMeta0.getColumns(null, "INFORMATION_SCHEMA", "TRIGGERS", null);
03-03 10:48:29 jdbc: 
/**/PreparedStatement prep35 = conn5.prepareStatement("SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, COLUMN_NAME, DATA_TYPE, TYPE_NAME, CHARACTER_MAXIMUM_LENGTH COLUMN_SIZE, CHARACTER_MAXIMUM_LENGTH BUFFER_LENGTH, NUMERIC_SCALE DECIMAL_DIGITS, NUMERIC_PRECISION_RADIX NUM_PREC_RADIX, NULLABLE, REMARKS, COLUMN_DEFAULT COLUMN_DEF, DATA_TYPE SQL_DATA_TYPE, ZERO() SQL_DATETIME_SUB, CHARACTER_OCTET_LENGTH CHAR_OCTET_LENGTH, ORDINAL_POSITION, IS_NULLABLE IS_NULLABLE, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_CATALOG, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_SCHEMA, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_TABLE, SOURCE_DATA_TYPE, CASE WHEN SEQUENCE_NAME IS NULL THEN CAST(? AS VARCHAR) ELSE CAST(? AS VARCHAR) END IS_AUTOINCREMENT, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_CATLOG FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND TABLE_NAME LIKE ? ESCAPE ? AND COLUMN_NAME LIKE ? ESCAPE ? ORDER BY TABLE_SCHEM, TABLE_NAME, ORDINAL_POSITION");
03-03 10:48:29 jdbc: SESSION_PREPARE_READ_PARAMS 56
03-03 10:48:29 jdbc: 
/**/prep35.setString(1, "NO");
03-03 10:48:29 jdbc: 
/**/prep35.setString(2, "YES");
03-03 10:48:29 jdbc: 
/**/prep35.setString(3, "%");
03-03 10:48:29 jdbc: 
/**/prep35.setString(4, "\\");
03-03 10:48:29 jdbc: 
/**/prep35.setString(5, "INFORMATION_SCHEMA");
03-03 10:48:29 jdbc: 
/**/prep35.setString(6, "\\");
03-03 10:48:29 jdbc: 
/**/prep35.setString(7, "TRIGGERS");
03-03 10:48:29 jdbc: 
/**/prep35.setString(8, "\\");
03-03 10:48:29 jdbc: 
/**/prep35.setString(9, "%");
03-03 10:48:29 jdbc: 
/**/prep35.setString(10, "\\");
03-03 10:48:29 jdbc: 
/**/ResultSet rs51 = prep35.executeQuery();
03-03 10:48:29 jdbc: COMMAND_EXECUTE_QUERY 56
03-03 10:48:29 jdbc: RESULT_CLOSE 57
03-03 10:48:29 jdbc: 
/**/rs51.next();
03-03 10:48:29 jdbc: 
/**/rs51.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs51.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs51.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs51.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs51.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs51.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs51.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs51.next();
03-03 10:48:29 jdbc: 
/**/rs51.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs51.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs51.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs51.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs51.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs51.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs51.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs51.next();
03-03 10:48:29 jdbc: 
/**/rs51.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs51.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs51.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs51.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs51.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs51.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs51.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs51.next();
03-03 10:48:29 jdbc: 
/**/rs51.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs51.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs51.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs51.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs51.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs51.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs51.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs51.next();
03-03 10:48:29 jdbc: 
/**/rs51.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs51.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs51.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs51.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs51.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs51.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs51.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs51.next();
03-03 10:48:29 jdbc: 
/**/rs51.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs51.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs51.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs51.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs51.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs51.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs51.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs51.next();
03-03 10:48:29 jdbc: 
/**/rs51.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs51.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs51.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs51.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs51.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs51.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs51.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs51.next();
03-03 10:48:29 jdbc: 
/**/rs51.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs51.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs51.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs51.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs51.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs51.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs51.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs51.next();
03-03 10:48:29 jdbc: 
/**/rs51.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs51.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs51.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs51.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs51.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs51.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs51.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs51.next();
03-03 10:48:29 jdbc: 
/**/rs51.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs51.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs51.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs51.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs51.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs51.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs51.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs51.next();
03-03 10:48:29 jdbc: 
/**/rs51.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs51.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs51.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs51.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs51.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs51.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs51.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs51.next();
03-03 10:48:29 jdbc: 
/**/rs51.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs51.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs51.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs51.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs51.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs51.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs51.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs51.next();
03-03 10:48:29 jdbc: 
/**/rs51.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs51.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs51.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs51.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs51.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs51.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs51.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs51.next();
03-03 10:48:29 jdbc: 
/**/rs51.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs51.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs51.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs51.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs51.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs51.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs51.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs51.next();
03-03 10:48:29 jdbc: 
/**/rs51.close();
03-03 10:48:29 jdbc: 
/**/prep35.close();
03-03 10:48:29 jdbc: COMMAND_CLOSE 56
03-03 10:48:29 jdbc: 
/**/dbMeta0.getColumns(null, "INFORMATION_SCHEMA", "TYPE_INFO", null);
03-03 10:48:29 jdbc: 
/**/PreparedStatement prep36 = conn5.prepareStatement("SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, COLUMN_NAME, DATA_TYPE, TYPE_NAME, CHARACTER_MAXIMUM_LENGTH COLUMN_SIZE, CHARACTER_MAXIMUM_LENGTH BUFFER_LENGTH, NUMERIC_SCALE DECIMAL_DIGITS, NUMERIC_PRECISION_RADIX NUM_PREC_RADIX, NULLABLE, REMARKS, COLUMN_DEFAULT COLUMN_DEF, DATA_TYPE SQL_DATA_TYPE, ZERO() SQL_DATETIME_SUB, CHARACTER_OCTET_LENGTH CHAR_OCTET_LENGTH, ORDINAL_POSITION, IS_NULLABLE IS_NULLABLE, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_CATALOG, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_SCHEMA, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_TABLE, SOURCE_DATA_TYPE, CASE WHEN SEQUENCE_NAME IS NULL THEN CAST(? AS VARCHAR) ELSE CAST(? AS VARCHAR) END IS_AUTOINCREMENT, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_CATLOG FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND TABLE_NAME LIKE ? ESCAPE ? AND COLUMN_NAME LIKE ? ESCAPE ? ORDER BY TABLE_SCHEM, TABLE_NAME, ORDINAL_POSITION");
03-03 10:48:29 jdbc: SESSION_PREPARE_READ_PARAMS 58
03-03 10:48:29 jdbc: 
/**/prep36.setString(1, "NO");
03-03 10:48:29 jdbc: 
/**/prep36.setString(2, "YES");
03-03 10:48:29 jdbc: 
/**/prep36.setString(3, "%");
03-03 10:48:29 jdbc: 
/**/prep36.setString(4, "\\");
03-03 10:48:29 jdbc: 
/**/prep36.setString(5, "INFORMATION_SCHEMA");
03-03 10:48:29 jdbc: 
/**/prep36.setString(6, "\\");
03-03 10:48:29 jdbc: 
/**/prep36.setString(7, "TYPE_INFO");
03-03 10:48:29 jdbc: 
/**/prep36.setString(8, "\\");
03-03 10:48:29 jdbc: 
/**/prep36.setString(9, "%");
03-03 10:48:29 jdbc: 
/**/prep36.setString(10, "\\");
03-03 10:48:29 jdbc: 
/**/ResultSet rs52 = prep36.executeQuery();
03-03 10:48:29 jdbc: COMMAND_EXECUTE_QUERY 58
03-03 10:48:29 jdbc: RESULT_CLOSE 59
03-03 10:48:29 jdbc: 
/**/rs52.next();
03-03 10:48:29 jdbc: 
/**/rs52.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs52.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs52.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs52.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs52.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs52.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs52.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs52.next();
03-03 10:48:29 jdbc: 
/**/rs52.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs52.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs52.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs52.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs52.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs52.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs52.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs52.next();
03-03 10:48:29 jdbc: 
/**/rs52.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs52.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs52.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs52.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs52.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs52.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs52.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs52.next();
03-03 10:48:29 jdbc: 
/**/rs52.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs52.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs52.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs52.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs52.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs52.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs52.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs52.next();
03-03 10:48:29 jdbc: 
/**/rs52.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs52.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs52.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs52.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs52.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs52.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs52.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs52.next();
03-03 10:48:29 jdbc: 
/**/rs52.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs52.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs52.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs52.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs52.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs52.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs52.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs52.next();
03-03 10:48:29 jdbc: 
/**/rs52.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs52.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs52.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs52.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs52.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs52.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs52.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs52.next();
03-03 10:48:29 jdbc: 
/**/rs52.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs52.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs52.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs52.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs52.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs52.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs52.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs52.next();
03-03 10:48:29 jdbc: 
/**/rs52.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs52.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs52.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs52.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs52.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs52.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs52.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs52.next();
03-03 10:48:29 jdbc: 
/**/rs52.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs52.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs52.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs52.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs52.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs52.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs52.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs52.next();
03-03 10:48:29 jdbc: 
/**/rs52.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs52.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs52.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs52.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs52.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs52.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs52.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs52.next();
03-03 10:48:29 jdbc: 
/**/rs52.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs52.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs52.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs52.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs52.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs52.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs52.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs52.next();
03-03 10:48:29 jdbc: 
/**/rs52.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs52.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs52.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs52.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs52.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs52.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs52.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs52.next();
03-03 10:48:29 jdbc: 
/**/rs52.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs52.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs52.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs52.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs52.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs52.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs52.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs52.next();
03-03 10:48:29 jdbc: 
/**/rs52.close();
03-03 10:48:29 jdbc: 
/**/prep36.close();
03-03 10:48:29 jdbc: COMMAND_CLOSE 58
03-03 10:48:29 jdbc: 
/**/dbMeta0.getColumns(null, "INFORMATION_SCHEMA", "USERS", null);
03-03 10:48:29 jdbc: 
/**/PreparedStatement prep37 = conn5.prepareStatement("SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, COLUMN_NAME, DATA_TYPE, TYPE_NAME, CHARACTER_MAXIMUM_LENGTH COLUMN_SIZE, CHARACTER_MAXIMUM_LENGTH BUFFER_LENGTH, NUMERIC_SCALE DECIMAL_DIGITS, NUMERIC_PRECISION_RADIX NUM_PREC_RADIX, NULLABLE, REMARKS, COLUMN_DEFAULT COLUMN_DEF, DATA_TYPE SQL_DATA_TYPE, ZERO() SQL_DATETIME_SUB, CHARACTER_OCTET_LENGTH CHAR_OCTET_LENGTH, ORDINAL_POSITION, IS_NULLABLE IS_NULLABLE, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_CATALOG, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_SCHEMA, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_TABLE, SOURCE_DATA_TYPE, CASE WHEN SEQUENCE_NAME IS NULL THEN CAST(? AS VARCHAR) ELSE CAST(? AS VARCHAR) END IS_AUTOINCREMENT, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_CATLOG FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND TABLE_NAME LIKE ? ESCAPE ? AND COLUMN_NAME LIKE ? ESCAPE ? ORDER BY TABLE_SCHEM, TABLE_NAME, ORDINAL_POSITION");
03-03 10:48:29 jdbc: SESSION_PREPARE_READ_PARAMS 60
03-03 10:48:29 jdbc: 
/**/prep37.setString(1, "NO");
03-03 10:48:29 jdbc: 
/**/prep37.setString(2, "YES");
03-03 10:48:29 jdbc: 
/**/prep37.setString(3, "%");
03-03 10:48:29 jdbc: 
/**/prep37.setString(4, "\\");
03-03 10:48:29 jdbc: 
/**/prep37.setString(5, "INFORMATION_SCHEMA");
03-03 10:48:29 jdbc: 
/**/prep37.setString(6, "\\");
03-03 10:48:29 jdbc: 
/**/prep37.setString(7, "USERS");
03-03 10:48:29 jdbc: 
/**/prep37.setString(8, "\\");
03-03 10:48:29 jdbc: 
/**/prep37.setString(9, "%");
03-03 10:48:29 jdbc: 
/**/prep37.setString(10, "\\");
03-03 10:48:29 jdbc: 
/**/ResultSet rs53 = prep37.executeQuery();
03-03 10:48:29 jdbc: COMMAND_EXECUTE_QUERY 60
03-03 10:48:29 jdbc: RESULT_CLOSE 61
03-03 10:48:29 jdbc: 
/**/rs53.next();
03-03 10:48:29 jdbc: 
/**/rs53.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs53.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs53.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs53.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs53.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs53.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs53.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs53.next();
03-03 10:48:29 jdbc: 
/**/rs53.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs53.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs53.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs53.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs53.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs53.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs53.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs53.next();
03-03 10:48:29 jdbc: 
/**/rs53.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs53.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs53.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs53.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs53.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs53.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs53.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs53.next();
03-03 10:48:29 jdbc: 
/**/rs53.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs53.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs53.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs53.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs53.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs53.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs53.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs53.next();
03-03 10:48:29 jdbc: 
/**/rs53.close();
03-03 10:48:29 jdbc: 
/**/prep37.close();
03-03 10:48:29 jdbc: COMMAND_CLOSE 60
03-03 10:48:29 jdbc: 
/**/dbMeta0.getColumns(null, "INFORMATION_SCHEMA", "VIEWS", null);
03-03 10:48:29 jdbc: 
/**/PreparedStatement prep38 = conn5.prepareStatement("SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, COLUMN_NAME, DATA_TYPE, TYPE_NAME, CHARACTER_MAXIMUM_LENGTH COLUMN_SIZE, CHARACTER_MAXIMUM_LENGTH BUFFER_LENGTH, NUMERIC_SCALE DECIMAL_DIGITS, NUMERIC_PRECISION_RADIX NUM_PREC_RADIX, NULLABLE, REMARKS, COLUMN_DEFAULT COLUMN_DEF, DATA_TYPE SQL_DATA_TYPE, ZERO() SQL_DATETIME_SUB, CHARACTER_OCTET_LENGTH CHAR_OCTET_LENGTH, ORDINAL_POSITION, IS_NULLABLE IS_NULLABLE, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_CATALOG, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_SCHEMA, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_TABLE, SOURCE_DATA_TYPE, CASE WHEN SEQUENCE_NAME IS NULL THEN CAST(? AS VARCHAR) ELSE CAST(? AS VARCHAR) END IS_AUTOINCREMENT, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_CATLOG FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND TABLE_NAME LIKE ? ESCAPE ? AND COLUMN_NAME LIKE ? ESCAPE ? ORDER BY TABLE_SCHEM, TABLE_NAME, ORDINAL_POSITION");
03-03 10:48:29 jdbc: SESSION_PREPARE_READ_PARAMS 62
03-03 10:48:29 jdbc: 
/**/prep38.setString(1, "NO");
03-03 10:48:29 jdbc: 
/**/prep38.setString(2, "YES");
03-03 10:48:29 jdbc: 
/**/prep38.setString(3, "%");
03-03 10:48:29 jdbc: 
/**/prep38.setString(4, "\\");
03-03 10:48:29 jdbc: 
/**/prep38.setString(5, "INFORMATION_SCHEMA");
03-03 10:48:29 jdbc: 
/**/prep38.setString(6, "\\");
03-03 10:48:29 jdbc: 
/**/prep38.setString(7, "VIEWS");
03-03 10:48:29 jdbc: 
/**/prep38.setString(8, "\\");
03-03 10:48:29 jdbc: 
/**/prep38.setString(9, "%");
03-03 10:48:29 jdbc: 
/**/prep38.setString(10, "\\");
03-03 10:48:29 jdbc: 
/**/ResultSet rs54 = prep38.executeQuery();
03-03 10:48:29 jdbc: COMMAND_EXECUTE_QUERY 62
03-03 10:48:29 jdbc: RESULT_CLOSE 63
03-03 10:48:29 jdbc: 
/**/rs54.next();
03-03 10:48:29 jdbc: 
/**/rs54.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs54.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs54.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs54.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs54.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs54.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs54.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs54.next();
03-03 10:48:29 jdbc: 
/**/rs54.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs54.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs54.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs54.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs54.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs54.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs54.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs54.next();
03-03 10:48:29 jdbc: 
/**/rs54.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs54.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs54.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs54.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs54.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs54.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs54.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs54.next();
03-03 10:48:29 jdbc: 
/**/rs54.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs54.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs54.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs54.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs54.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs54.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs54.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs54.next();
03-03 10:48:29 jdbc: 
/**/rs54.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs54.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs54.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs54.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs54.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs54.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs54.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs54.next();
03-03 10:48:29 jdbc: 
/**/rs54.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs54.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs54.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs54.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs54.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs54.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs54.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs54.next();
03-03 10:48:29 jdbc: 
/**/rs54.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs54.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs54.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs54.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs54.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs54.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs54.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs54.next();
03-03 10:48:29 jdbc: 
/**/rs54.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs54.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs54.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs54.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs54.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs54.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs54.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs54.next();
03-03 10:48:29 jdbc: 
/**/rs54.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs54.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs54.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs54.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs54.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs54.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs54.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs54.next();
03-03 10:48:29 jdbc: 
/**/rs54.close();
03-03 10:48:29 jdbc: 
/**/prep38.close();
03-03 10:48:29 jdbc: COMMAND_CLOSE 62
03-03 10:48:29 jdbc: 
/**/dbMeta0.getTables(null, "PUBLIC", null, new String[]{"TABLE", "SYSTEM TABLE", "VIEW", "SYSTEM VIEW", "TABLE LINK", "SYNONYM"});
03-03 10:48:29 jdbc: 
/**/PreparedStatement prep39 = conn5.prepareStatement("SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, TABLE_TYPE, REMARKS, TYPE_NAME TYPE_CAT, TYPE_NAME TYPE_SCHEM, TYPE_NAME, TYPE_NAME SELF_REFERENCING_COL_NAME, TYPE_NAME REF_GENERATION, SQL FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND TABLE_NAME LIKE ? ESCAPE ? AND (TABLE_TYPE IN(?, ?, ?, ?, ?, ?)) ORDER BY TABLE_TYPE, TABLE_SCHEMA, TABLE_NAME");
03-03 10:48:29 jdbc: SESSION_PREPARE_READ_PARAMS 64
03-03 10:48:29 jdbc: 
/**/prep39.setString(1, "%");
03-03 10:48:29 jdbc: 
/**/prep39.setString(2, "\\");
03-03 10:48:29 jdbc: 
/**/prep39.setString(3, "PUBLIC");
03-03 10:48:29 jdbc: 
/**/prep39.setString(4, "\\");
03-03 10:48:29 jdbc: 
/**/prep39.setString(5, "%");
03-03 10:48:29 jdbc: 
/**/prep39.setString(6, "\\");
03-03 10:48:29 jdbc: 
/**/prep39.setString(7, "TABLE");
03-03 10:48:29 jdbc: 
/**/prep39.setString(8, "SYSTEM TABLE");
03-03 10:48:29 jdbc: 
/**/prep39.setString(9, "VIEW");
03-03 10:48:29 jdbc: 
/**/prep39.setString(10, "SYSTEM VIEW");
03-03 10:48:29 jdbc: 
/**/prep39.setString(11, "TABLE LINK");
03-03 10:48:29 jdbc: 
/**/prep39.setString(12, "SYNONYM");
03-03 10:48:29 jdbc: 
/**/ResultSet rs55 = prep39.executeQuery();
03-03 10:48:29 jdbc: COMMAND_EXECUTE_QUERY 64
03-03 10:48:29 jdbc: RESULT_CLOSE 65
03-03 10:48:29 jdbc: 
/**/rs55.next();
03-03 10:48:29 jdbc: 
/**/rs55.getString("TABLE_NAME");
03-03 10:48:29 jdbc: 
/**/rs55.getString("TABLE_TYPE");
03-03 10:48:29 jdbc: 
/**/rs55.next();
03-03 10:48:29 jdbc: 
/**/rs55.getString("TABLE_NAME");
03-03 10:48:29 jdbc: 
/**/rs55.getString("TABLE_TYPE");
03-03 10:48:29 jdbc: 
/**/rs55.next();
03-03 10:48:29 jdbc: 
/**/rs55.getString("TABLE_NAME");
03-03 10:48:29 jdbc: 
/**/rs55.getString("TABLE_TYPE");
03-03 10:48:29 jdbc: 
/**/rs55.next();
03-03 10:48:29 jdbc: 
/**/rs55.getString("TABLE_NAME");
03-03 10:48:29 jdbc: 
/**/rs55.getString("TABLE_TYPE");
03-03 10:48:29 jdbc: 
/**/rs55.next();
03-03 10:48:29 jdbc: 
/**/rs55.getString("TABLE_NAME");
03-03 10:48:29 jdbc: 
/**/rs55.getString("TABLE_TYPE");
03-03 10:48:29 jdbc: 
/**/rs55.next();
03-03 10:48:29 jdbc: 
/**/rs55.getString("TABLE_NAME");
03-03 10:48:29 jdbc: 
/**/rs55.getString("TABLE_TYPE");
03-03 10:48:29 jdbc: 
/**/rs55.next();
03-03 10:48:29 jdbc: 
/**/rs55.getString("TABLE_NAME");
03-03 10:48:29 jdbc: 
/**/rs55.getString("TABLE_TYPE");
03-03 10:48:29 jdbc: 
/**/rs55.next();
03-03 10:48:29 jdbc: 
/**/rs55.getString("TABLE_NAME");
03-03 10:48:29 jdbc: 
/**/rs55.getString("TABLE_TYPE");
03-03 10:48:29 jdbc: 
/**/rs55.next();
03-03 10:48:29 jdbc: 
/**/rs55.getString("TABLE_NAME");
03-03 10:48:29 jdbc: 
/**/rs55.getString("TABLE_TYPE");
03-03 10:48:29 jdbc: 
/**/rs55.next();
03-03 10:48:29 jdbc: 
/**/rs55.getString("TABLE_NAME");
03-03 10:48:29 jdbc: 
/**/rs55.getString("TABLE_TYPE");
03-03 10:48:29 jdbc: 
/**/rs55.next();
03-03 10:48:29 jdbc: 
/**/rs55.getString("TABLE_NAME");
03-03 10:48:29 jdbc: 
/**/rs55.getString("TABLE_TYPE");
03-03 10:48:29 jdbc: 
/**/rs55.next();
03-03 10:48:29 jdbc: 
/**/rs55.getString("TABLE_NAME");
03-03 10:48:29 jdbc: 
/**/rs55.getString("TABLE_TYPE");
03-03 10:48:29 jdbc: 
/**/rs55.next();
03-03 10:48:29 jdbc: 
/**/rs55.getString("TABLE_NAME");
03-03 10:48:29 jdbc: 
/**/rs55.getString("TABLE_TYPE");
03-03 10:48:29 jdbc: 
/**/rs55.next();
03-03 10:48:29 jdbc: 
/**/rs55.getString("TABLE_NAME");
03-03 10:48:29 jdbc: 
/**/rs55.getString("TABLE_TYPE");
03-03 10:48:29 jdbc: 
/**/rs55.next();
03-03 10:48:29 jdbc: 
/**/rs55.close();
03-03 10:48:29 jdbc: 
/**/prep39.close();
03-03 10:48:29 jdbc: COMMAND_CLOSE 64
03-03 10:48:29 jdbc: 
/**/dbMeta0.getColumns(null, "PUBLIC", "ARTICLE", null);
03-03 10:48:29 jdbc: 
/**/PreparedStatement prep40 = conn5.prepareStatement("SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, COLUMN_NAME, DATA_TYPE, TYPE_NAME, CHARACTER_MAXIMUM_LENGTH COLUMN_SIZE, CHARACTER_MAXIMUM_LENGTH BUFFER_LENGTH, NUMERIC_SCALE DECIMAL_DIGITS, NUMERIC_PRECISION_RADIX NUM_PREC_RADIX, NULLABLE, REMARKS, COLUMN_DEFAULT COLUMN_DEF, DATA_TYPE SQL_DATA_TYPE, ZERO() SQL_DATETIME_SUB, CHARACTER_OCTET_LENGTH CHAR_OCTET_LENGTH, ORDINAL_POSITION, IS_NULLABLE IS_NULLABLE, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_CATALOG, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_SCHEMA, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_TABLE, SOURCE_DATA_TYPE, CASE WHEN SEQUENCE_NAME IS NULL THEN CAST(? AS VARCHAR) ELSE CAST(? AS VARCHAR) END IS_AUTOINCREMENT, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_CATLOG FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND TABLE_NAME LIKE ? ESCAPE ? AND COLUMN_NAME LIKE ? ESCAPE ? ORDER BY TABLE_SCHEM, TABLE_NAME, ORDINAL_POSITION");
03-03 10:48:29 jdbc: SESSION_PREPARE_READ_PARAMS 66
03-03 10:48:29 jdbc: 
/**/prep40.setString(1, "NO");
03-03 10:48:29 jdbc: 
/**/prep40.setString(2, "YES");
03-03 10:48:29 jdbc: 
/**/prep40.setString(3, "%");
03-03 10:48:29 jdbc: 
/**/prep40.setString(4, "\\");
03-03 10:48:29 jdbc: 
/**/prep40.setString(5, "PUBLIC");
03-03 10:48:29 jdbc: 
/**/prep40.setString(6, "\\");
03-03 10:48:29 jdbc: 
/**/prep40.setString(7, "ARTICLE");
03-03 10:48:29 jdbc: 
/**/prep40.setString(8, "\\");
03-03 10:48:29 jdbc: 
/**/prep40.setString(9, "%");
03-03 10:48:29 jdbc: 
/**/prep40.setString(10, "\\");
03-03 10:48:29 jdbc: 
/**/ResultSet rs56 = prep40.executeQuery();
03-03 10:48:29 jdbc: COMMAND_EXECUTE_QUERY 66
03-03 10:48:29 jdbc: RESULT_CLOSE 67
03-03 10:48:29 jdbc: 
/**/rs56.next();
03-03 10:48:29 jdbc: 
/**/rs56.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs56.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs56.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs56.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs56.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs56.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs56.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs56.next();
03-03 10:48:29 jdbc: 
/**/rs56.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs56.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs56.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs56.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs56.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs56.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs56.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs56.next();
03-03 10:48:29 jdbc: 
/**/rs56.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs56.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs56.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs56.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs56.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs56.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs56.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs56.next();
03-03 10:48:29 jdbc: 
/**/rs56.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs56.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs56.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs56.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs56.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs56.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs56.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs56.next();
03-03 10:48:29 jdbc: 
/**/rs56.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs56.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs56.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs56.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs56.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs56.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs56.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs56.next();
03-03 10:48:29 jdbc: 
/**/rs56.close();
03-03 10:48:29 jdbc: 
/**/prep40.close();
03-03 10:48:29 jdbc: COMMAND_CLOSE 66
03-03 10:48:29 jdbc: 
/**/dbMeta0.getColumns(null, "PUBLIC", "ARTICLE_CSS_RESOURCES", null);
03-03 10:48:29 jdbc: 
/**/PreparedStatement prep41 = conn5.prepareStatement("SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, COLUMN_NAME, DATA_TYPE, TYPE_NAME, CHARACTER_MAXIMUM_LENGTH COLUMN_SIZE, CHARACTER_MAXIMUM_LENGTH BUFFER_LENGTH, NUMERIC_SCALE DECIMAL_DIGITS, NUMERIC_PRECISION_RADIX NUM_PREC_RADIX, NULLABLE, REMARKS, COLUMN_DEFAULT COLUMN_DEF, DATA_TYPE SQL_DATA_TYPE, ZERO() SQL_DATETIME_SUB, CHARACTER_OCTET_LENGTH CHAR_OCTET_LENGTH, ORDINAL_POSITION, IS_NULLABLE IS_NULLABLE, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_CATALOG, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_SCHEMA, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_TABLE, SOURCE_DATA_TYPE, CASE WHEN SEQUENCE_NAME IS NULL THEN CAST(? AS VARCHAR) ELSE CAST(? AS VARCHAR) END IS_AUTOINCREMENT, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_CATLOG FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND TABLE_NAME LIKE ? ESCAPE ? AND COLUMN_NAME LIKE ? ESCAPE ? ORDER BY TABLE_SCHEM, TABLE_NAME, ORDINAL_POSITION");
03-03 10:48:29 jdbc: SESSION_PREPARE_READ_PARAMS 68
03-03 10:48:29 jdbc: 
/**/prep41.setString(1, "NO");
03-03 10:48:29 jdbc: 
/**/prep41.setString(2, "YES");
03-03 10:48:29 jdbc: 
/**/prep41.setString(3, "%");
03-03 10:48:29 jdbc: 
/**/prep41.setString(4, "\\");
03-03 10:48:29 jdbc: 
/**/prep41.setString(5, "PUBLIC");
03-03 10:48:29 jdbc: 
/**/prep41.setString(6, "\\");
03-03 10:48:29 jdbc: 
/**/prep41.setString(7, "ARTICLE_CSS_RESOURCES");
03-03 10:48:29 jdbc: 
/**/prep41.setString(8, "\\");
03-03 10:48:29 jdbc: 
/**/prep41.setString(9, "%");
03-03 10:48:29 jdbc: 
/**/prep41.setString(10, "\\");
03-03 10:48:29 jdbc: 
/**/ResultSet rs57 = prep41.executeQuery();
03-03 10:48:29 jdbc: COMMAND_EXECUTE_QUERY 68
03-03 10:48:29 jdbc: RESULT_CLOSE 69
03-03 10:48:29 jdbc: 
/**/rs57.next();
03-03 10:48:29 jdbc: 
/**/rs57.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs57.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs57.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs57.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs57.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs57.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs57.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs57.next();
03-03 10:48:29 jdbc: 
/**/rs57.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs57.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs57.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs57.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs57.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs57.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs57.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs57.next();
03-03 10:48:29 jdbc: 
/**/rs57.close();
03-03 10:48:29 jdbc: 
/**/prep41.close();
03-03 10:48:29 jdbc: COMMAND_CLOSE 68
03-03 10:48:29 jdbc: 
/**/dbMeta0.getColumns(null, "PUBLIC", "ARTICLE_JS_RESOURCES", null);
03-03 10:48:29 jdbc: 
/**/PreparedStatement prep42 = conn5.prepareStatement("SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, COLUMN_NAME, DATA_TYPE, TYPE_NAME, CHARACTER_MAXIMUM_LENGTH COLUMN_SIZE, CHARACTER_MAXIMUM_LENGTH BUFFER_LENGTH, NUMERIC_SCALE DECIMAL_DIGITS, NUMERIC_PRECISION_RADIX NUM_PREC_RADIX, NULLABLE, REMARKS, COLUMN_DEFAULT COLUMN_DEF, DATA_TYPE SQL_DATA_TYPE, ZERO() SQL_DATETIME_SUB, CHARACTER_OCTET_LENGTH CHAR_OCTET_LENGTH, ORDINAL_POSITION, IS_NULLABLE IS_NULLABLE, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_CATALOG, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_SCHEMA, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_TABLE, SOURCE_DATA_TYPE, CASE WHEN SEQUENCE_NAME IS NULL THEN CAST(? AS VARCHAR) ELSE CAST(? AS VARCHAR) END IS_AUTOINCREMENT, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_CATLOG FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND TABLE_NAME LIKE ? ESCAPE ? AND COLUMN_NAME LIKE ? ESCAPE ? ORDER BY TABLE_SCHEM, TABLE_NAME, ORDINAL_POSITION");
03-03 10:48:29 jdbc: SESSION_PREPARE_READ_PARAMS 70
03-03 10:48:29 jdbc: 
/**/prep42.setString(1, "NO");
03-03 10:48:29 jdbc: 
/**/prep42.setString(2, "YES");
03-03 10:48:29 jdbc: 
/**/prep42.setString(3, "%");
03-03 10:48:29 jdbc: 
/**/prep42.setString(4, "\\");
03-03 10:48:29 jdbc: 
/**/prep42.setString(5, "PUBLIC");
03-03 10:48:29 jdbc: 
/**/prep42.setString(6, "\\");
03-03 10:48:29 jdbc: 
/**/prep42.setString(7, "ARTICLE_JS_RESOURCES");
03-03 10:48:29 jdbc: 
/**/prep42.setString(8, "\\");
03-03 10:48:29 jdbc: 
/**/prep42.setString(9, "%");
03-03 10:48:29 jdbc: 
/**/prep42.setString(10, "\\");
03-03 10:48:29 jdbc: 
/**/ResultSet rs58 = prep42.executeQuery();
03-03 10:48:29 jdbc: COMMAND_EXECUTE_QUERY 70
03-03 10:48:29 jdbc: RESULT_CLOSE 71
03-03 10:48:29 jdbc: 
/**/rs58.next();
03-03 10:48:29 jdbc: 
/**/rs58.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs58.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs58.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs58.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs58.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs58.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs58.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs58.next();
03-03 10:48:29 jdbc: 
/**/rs58.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs58.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs58.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs58.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs58.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs58.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs58.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs58.next();
03-03 10:48:29 jdbc: 
/**/rs58.close();
03-03 10:48:29 jdbc: 
/**/prep42.close();
03-03 10:48:29 jdbc: COMMAND_CLOSE 70
03-03 10:48:29 jdbc: 
/**/dbMeta0.getColumns(null, "PUBLIC", "CONTENTNODE", null);
03-03 10:48:29 jdbc: 
/**/PreparedStatement prep43 = conn5.prepareStatement("SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, COLUMN_NAME, DATA_TYPE, TYPE_NAME, CHARACTER_MAXIMUM_LENGTH COLUMN_SIZE, CHARACTER_MAXIMUM_LENGTH BUFFER_LENGTH, NUMERIC_SCALE DECIMAL_DIGITS, NUMERIC_PRECISION_RADIX NUM_PREC_RADIX, NULLABLE, REMARKS, COLUMN_DEFAULT COLUMN_DEF, DATA_TYPE SQL_DATA_TYPE, ZERO() SQL_DATETIME_SUB, CHARACTER_OCTET_LENGTH CHAR_OCTET_LENGTH, ORDINAL_POSITION, IS_NULLABLE IS_NULLABLE, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_CATALOG, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_SCHEMA, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_TABLE, SOURCE_DATA_TYPE, CASE WHEN SEQUENCE_NAME IS NULL THEN CAST(? AS VARCHAR) ELSE CAST(? AS VARCHAR) END IS_AUTOINCREMENT, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_CATLOG FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND TABLE_NAME LIKE ? ESCAPE ? AND COLUMN_NAME LIKE ? ESCAPE ? ORDER BY TABLE_SCHEM, TABLE_NAME, ORDINAL_POSITION");
03-03 10:48:29 jdbc: SESSION_PREPARE_READ_PARAMS 72
03-03 10:48:29 jdbc: 
/**/prep43.setString(1, "NO");
03-03 10:48:29 jdbc: 
/**/prep43.setString(2, "YES");
03-03 10:48:29 jdbc: 
/**/prep43.setString(3, "%");
03-03 10:48:29 jdbc: 
/**/prep43.setString(4, "\\");
03-03 10:48:29 jdbc: 
/**/prep43.setString(5, "PUBLIC");
03-03 10:48:29 jdbc: 
/**/prep43.setString(6, "\\");
03-03 10:48:29 jdbc: 
/**/prep43.setString(7, "CONTENTNODE");
03-03 10:48:29 jdbc: 
/**/prep43.setString(8, "\\");
03-03 10:48:29 jdbc: 
/**/prep43.setString(9, "%");
03-03 10:48:29 jdbc: 
/**/prep43.setString(10, "\\");
03-03 10:48:29 jdbc: 
/**/ResultSet rs59 = prep43.executeQuery();
03-03 10:48:29 jdbc: COMMAND_EXECUTE_QUERY 72
03-03 10:48:29 jdbc: RESULT_CLOSE 73
03-03 10:48:29 jdbc: 
/**/rs59.next();
03-03 10:48:29 jdbc: 
/**/rs59.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs59.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs59.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs59.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs59.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs59.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs59.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs59.next();
03-03 10:48:29 jdbc: 
/**/rs59.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs59.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs59.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs59.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs59.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs59.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs59.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs59.next();
03-03 10:48:29 jdbc: 
/**/rs59.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs59.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs59.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs59.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs59.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs59.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs59.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs59.next();
03-03 10:48:29 jdbc: 
/**/rs59.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs59.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs59.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs59.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs59.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs59.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs59.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs59.next();
03-03 10:48:29 jdbc: 
/**/rs59.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs59.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs59.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs59.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs59.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs59.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs59.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs59.next();
03-03 10:48:29 jdbc: 
/**/rs59.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs59.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs59.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs59.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs59.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs59.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs59.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs59.next();
03-03 10:48:29 jdbc: 
/**/rs59.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs59.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs59.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs59.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs59.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs59.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs59.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs59.next();
03-03 10:48:29 jdbc: 
/**/rs59.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs59.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs59.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs59.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs59.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs59.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs59.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs59.next();
03-03 10:48:29 jdbc: 
/**/rs59.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs59.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs59.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs59.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs59.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs59.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs59.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs59.next();
03-03 10:48:29 jdbc: 
/**/rs59.close();
03-03 10:48:29 jdbc: 
/**/prep43.close();
03-03 10:48:29 jdbc: COMMAND_CLOSE 72
03-03 10:48:29 jdbc: 
/**/dbMeta0.getColumns(null, "PUBLIC", "CONTENTNODE_CONTENT_TAG", null);
03-03 10:48:29 jdbc: 
/**/PreparedStatement prep44 = conn5.prepareStatement("SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, COLUMN_NAME, DATA_TYPE, TYPE_NAME, CHARACTER_MAXIMUM_LENGTH COLUMN_SIZE, CHARACTER_MAXIMUM_LENGTH BUFFER_LENGTH, NUMERIC_SCALE DECIMAL_DIGITS, NUMERIC_PRECISION_RADIX NUM_PREC_RADIX, NULLABLE, REMARKS, COLUMN_DEFAULT COLUMN_DEF, DATA_TYPE SQL_DATA_TYPE, ZERO() SQL_DATETIME_SUB, CHARACTER_OCTET_LENGTH CHAR_OCTET_LENGTH, ORDINAL_POSITION, IS_NULLABLE IS_NULLABLE, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_CATALOG, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_SCHEMA, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_TABLE, SOURCE_DATA_TYPE, CASE WHEN SEQUENCE_NAME IS NULL THEN CAST(? AS VARCHAR) ELSE CAST(? AS VARCHAR) END IS_AUTOINCREMENT, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_CATLOG FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND TABLE_NAME LIKE ? ESCAPE ? AND COLUMN_NAME LIKE ? ESCAPE ? ORDER BY TABLE_SCHEM, TABLE_NAME, ORDINAL_POSITION");
03-03 10:48:29 jdbc: SESSION_PREPARE_READ_PARAMS 74
03-03 10:48:29 jdbc: 
/**/prep44.setString(1, "NO");
03-03 10:48:29 jdbc: 
/**/prep44.setString(2, "YES");
03-03 10:48:29 jdbc: 
/**/prep44.setString(3, "%");
03-03 10:48:29 jdbc: 
/**/prep44.setString(4, "\\");
03-03 10:48:29 jdbc: 
/**/prep44.setString(5, "PUBLIC");
03-03 10:48:29 jdbc: 
/**/prep44.setString(6, "\\");
03-03 10:48:29 jdbc: 
/**/prep44.setString(7, "CONTENTNODE_CONTENT_TAG");
03-03 10:48:29 jdbc: 
/**/prep44.setString(8, "\\");
03-03 10:48:29 jdbc: 
/**/prep44.setString(9, "%");
03-03 10:48:29 jdbc: 
/**/prep44.setString(10, "\\");
03-03 10:48:29 jdbc: 
/**/ResultSet rs60 = prep44.executeQuery();
03-03 10:48:29 jdbc: COMMAND_EXECUTE_QUERY 74
03-03 10:48:29 jdbc: RESULT_CLOSE 75
03-03 10:48:29 jdbc: 
/**/rs60.next();
03-03 10:48:29 jdbc: 
/**/rs60.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs60.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs60.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs60.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs60.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs60.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs60.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs60.next();
03-03 10:48:29 jdbc: 
/**/rs60.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs60.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs60.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs60.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs60.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs60.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs60.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs60.next();
03-03 10:48:29 jdbc: 
/**/rs60.close();
03-03 10:48:29 jdbc: 
/**/prep44.close();
03-03 10:48:29 jdbc: COMMAND_CLOSE 74
03-03 10:48:29 jdbc: 
/**/dbMeta0.getColumns(null, "PUBLIC", "CONTENT_TAG", null);
03-03 10:48:29 jdbc: 
/**/PreparedStatement prep45 = conn5.prepareStatement("SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, COLUMN_NAME, DATA_TYPE, TYPE_NAME, CHARACTER_MAXIMUM_LENGTH COLUMN_SIZE, CHARACTER_MAXIMUM_LENGTH BUFFER_LENGTH, NUMERIC_SCALE DECIMAL_DIGITS, NUMERIC_PRECISION_RADIX NUM_PREC_RADIX, NULLABLE, REMARKS, COLUMN_DEFAULT COLUMN_DEF, DATA_TYPE SQL_DATA_TYPE, ZERO() SQL_DATETIME_SUB, CHARACTER_OCTET_LENGTH CHAR_OCTET_LENGTH, ORDINAL_POSITION, IS_NULLABLE IS_NULLABLE, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_CATALOG, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_SCHEMA, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_TABLE, SOURCE_DATA_TYPE, CASE WHEN SEQUENCE_NAME IS NULL THEN CAST(? AS VARCHAR) ELSE CAST(? AS VARCHAR) END IS_AUTOINCREMENT, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_CATLOG FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND TABLE_NAME LIKE ? ESCAPE ? AND COLUMN_NAME LIKE ? ESCAPE ? ORDER BY TABLE_SCHEM, TABLE_NAME, ORDINAL_POSITION");
03-03 10:48:29 jdbc: SESSION_PREPARE_READ_PARAMS 76
03-03 10:48:29 jdbc: 
/**/prep45.setString(1, "NO");
03-03 10:48:29 jdbc: 
/**/prep45.setString(2, "YES");
03-03 10:48:29 jdbc: 
/**/prep45.setString(3, "%");
03-03 10:48:29 jdbc: 
/**/prep45.setString(4, "\\");
03-03 10:48:29 jdbc: 
/**/prep45.setString(5, "PUBLIC");
03-03 10:48:29 jdbc: 
/**/prep45.setString(6, "\\");
03-03 10:48:29 jdbc: 
/**/prep45.setString(7, "CONTENT_TAG");
03-03 10:48:29 jdbc: 
/**/prep45.setString(8, "\\");
03-03 10:48:29 jdbc: 
/**/prep45.setString(9, "%");
03-03 10:48:29 jdbc: 
/**/prep45.setString(10, "\\");
03-03 10:48:29 jdbc: 
/**/ResultSet rs61 = prep45.executeQuery();
03-03 10:48:29 jdbc: COMMAND_EXECUTE_QUERY 76
03-03 10:48:29 jdbc: RESULT_CLOSE 77
03-03 10:48:29 jdbc: 
/**/rs61.next();
03-03 10:48:29 jdbc: 
/**/rs61.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs61.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs61.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs61.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs61.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs61.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs61.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs61.next();
03-03 10:48:29 jdbc: 
/**/rs61.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs61.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs61.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs61.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs61.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs61.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs61.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs61.next();
03-03 10:48:29 jdbc: 
/**/rs61.close();
03-03 10:48:29 jdbc: 
/**/prep45.close();
03-03 10:48:29 jdbc: COMMAND_CLOSE 76
03-03 10:48:29 jdbc: 
/**/dbMeta0.getColumns(null, "PUBLIC", "NODE", null);
03-03 10:48:29 jdbc: 
/**/PreparedStatement prep46 = conn5.prepareStatement("SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, COLUMN_NAME, DATA_TYPE, TYPE_NAME, CHARACTER_MAXIMUM_LENGTH COLUMN_SIZE, CHARACTER_MAXIMUM_LENGTH BUFFER_LENGTH, NUMERIC_SCALE DECIMAL_DIGITS, NUMERIC_PRECISION_RADIX NUM_PREC_RADIX, NULLABLE, REMARKS, COLUMN_DEFAULT COLUMN_DEF, DATA_TYPE SQL_DATA_TYPE, ZERO() SQL_DATETIME_SUB, CHARACTER_OCTET_LENGTH CHAR_OCTET_LENGTH, ORDINAL_POSITION, IS_NULLABLE IS_NULLABLE, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_CATALOG, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_SCHEMA, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_TABLE, SOURCE_DATA_TYPE, CASE WHEN SEQUENCE_NAME IS NULL THEN CAST(? AS VARCHAR) ELSE CAST(? AS VARCHAR) END IS_AUTOINCREMENT, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_CATLOG FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND TABLE_NAME LIKE ? ESCAPE ? AND COLUMN_NAME LIKE ? ESCAPE ? ORDER BY TABLE_SCHEM, TABLE_NAME, ORDINAL_POSITION");
03-03 10:48:29 jdbc: SESSION_PREPARE_READ_PARAMS 78
03-03 10:48:29 jdbc: 
/**/prep46.setString(1, "NO");
03-03 10:48:29 jdbc: 
/**/prep46.setString(2, "YES");
03-03 10:48:29 jdbc: 
/**/prep46.setString(3, "%");
03-03 10:48:29 jdbc: 
/**/prep46.setString(4, "\\");
03-03 10:48:29 jdbc: 
/**/prep46.setString(5, "PUBLIC");
03-03 10:48:29 jdbc: 
/**/prep46.setString(6, "\\");
03-03 10:48:29 jdbc: 
/**/prep46.setString(7, "NODE");
03-03 10:48:29 jdbc: 
/**/prep46.setString(8, "\\");
03-03 10:48:29 jdbc: 
/**/prep46.setString(9, "%");
03-03 10:48:29 jdbc: 
/**/prep46.setString(10, "\\");
03-03 10:48:29 jdbc: 
/**/ResultSet rs62 = prep46.executeQuery();
03-03 10:48:29 jdbc: COMMAND_EXECUTE_QUERY 78
03-03 10:48:29 jdbc: RESULT_CLOSE 79
03-03 10:48:29 jdbc: 
/**/rs62.next();
03-03 10:48:29 jdbc: 
/**/rs62.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs62.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs62.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs62.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs62.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs62.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs62.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs62.next();
03-03 10:48:29 jdbc: 
/**/rs62.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs62.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs62.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs62.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs62.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs62.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs62.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs62.next();
03-03 10:48:29 jdbc: 
/**/rs62.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs62.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs62.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs62.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs62.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs62.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs62.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs62.next();
03-03 10:48:29 jdbc: 
/**/rs62.close();
03-03 10:48:29 jdbc: 
/**/prep46.close();
03-03 10:48:29 jdbc: COMMAND_CLOSE 78
03-03 10:48:29 jdbc: 
/**/dbMeta0.getColumns(null, "PUBLIC", "NODE_CONTENTNODE", null);
03-03 10:48:29 jdbc: 
/**/PreparedStatement prep47 = conn5.prepareStatement("SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, COLUMN_NAME, DATA_TYPE, TYPE_NAME, CHARACTER_MAXIMUM_LENGTH COLUMN_SIZE, CHARACTER_MAXIMUM_LENGTH BUFFER_LENGTH, NUMERIC_SCALE DECIMAL_DIGITS, NUMERIC_PRECISION_RADIX NUM_PREC_RADIX, NULLABLE, REMARKS, COLUMN_DEFAULT COLUMN_DEF, DATA_TYPE SQL_DATA_TYPE, ZERO() SQL_DATETIME_SUB, CHARACTER_OCTET_LENGTH CHAR_OCTET_LENGTH, ORDINAL_POSITION, IS_NULLABLE IS_NULLABLE, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_CATALOG, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_SCHEMA, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_TABLE, SOURCE_DATA_TYPE, CASE WHEN SEQUENCE_NAME IS NULL THEN CAST(? AS VARCHAR) ELSE CAST(? AS VARCHAR) END IS_AUTOINCREMENT, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_CATLOG FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND TABLE_NAME LIKE ? ESCAPE ? AND COLUMN_NAME LIKE ? ESCAPE ? ORDER BY TABLE_SCHEM, TABLE_NAME, ORDINAL_POSITION");
03-03 10:48:29 jdbc: SESSION_PREPARE_READ_PARAMS 80
03-03 10:48:29 jdbc: 
/**/prep47.setString(1, "NO");
03-03 10:48:29 jdbc: 
/**/prep47.setString(2, "YES");
03-03 10:48:29 jdbc: 
/**/prep47.setString(3, "%");
03-03 10:48:29 jdbc: 
/**/prep47.setString(4, "\\");
03-03 10:48:29 jdbc: 
/**/prep47.setString(5, "PUBLIC");
03-03 10:48:29 jdbc: 
/**/prep47.setString(6, "\\");
03-03 10:48:29 jdbc: 
/**/prep47.setString(7, "NODE_CONTENTNODE");
03-03 10:48:29 jdbc: 
/**/prep47.setString(8, "\\");
03-03 10:48:29 jdbc: 
/**/prep47.setString(9, "%");
03-03 10:48:29 jdbc: 
/**/prep47.setString(10, "\\");
03-03 10:48:29 jdbc: 
/**/ResultSet rs63 = prep47.executeQuery();
03-03 10:48:29 jdbc: COMMAND_EXECUTE_QUERY 80
03-03 10:48:29 jdbc: RESULT_CLOSE 81
03-03 10:48:29 jdbc: 
/**/rs63.next();
03-03 10:48:29 jdbc: 
/**/rs63.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs63.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs63.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs63.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs63.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs63.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs63.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs63.next();
03-03 10:48:29 jdbc: 
/**/rs63.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs63.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs63.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs63.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs63.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs63.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs63.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs63.next();
03-03 10:48:29 jdbc: 
/**/rs63.close();
03-03 10:48:29 jdbc: 
/**/prep47.close();
03-03 10:48:29 jdbc: COMMAND_CLOSE 80
03-03 10:48:29 jdbc: 
/**/dbMeta0.getColumns(null, "PUBLIC", "NODE_NODE", null);
03-03 10:48:29 jdbc: 
/**/PreparedStatement prep48 = conn5.prepareStatement("SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, COLUMN_NAME, DATA_TYPE, TYPE_NAME, CHARACTER_MAXIMUM_LENGTH COLUMN_SIZE, CHARACTER_MAXIMUM_LENGTH BUFFER_LENGTH, NUMERIC_SCALE DECIMAL_DIGITS, NUMERIC_PRECISION_RADIX NUM_PREC_RADIX, NULLABLE, REMARKS, COLUMN_DEFAULT COLUMN_DEF, DATA_TYPE SQL_DATA_TYPE, ZERO() SQL_DATETIME_SUB, CHARACTER_OCTET_LENGTH CHAR_OCTET_LENGTH, ORDINAL_POSITION, IS_NULLABLE IS_NULLABLE, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_CATALOG, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_SCHEMA, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_TABLE, SOURCE_DATA_TYPE, CASE WHEN SEQUENCE_NAME IS NULL THEN CAST(? AS VARCHAR) ELSE CAST(? AS VARCHAR) END IS_AUTOINCREMENT, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_CATLOG FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND TABLE_NAME LIKE ? ESCAPE ? AND COLUMN_NAME LIKE ? ESCAPE ? ORDER BY TABLE_SCHEM, TABLE_NAME, ORDINAL_POSITION");
03-03 10:48:29 jdbc: SESSION_PREPARE_READ_PARAMS 82
03-03 10:48:29 jdbc: 
/**/prep48.setString(1, "NO");
03-03 10:48:29 jdbc: 
/**/prep48.setString(2, "YES");
03-03 10:48:29 jdbc: 
/**/prep48.setString(3, "%");
03-03 10:48:29 jdbc: 
/**/prep48.setString(4, "\\");
03-03 10:48:29 jdbc: 
/**/prep48.setString(5, "PUBLIC");
03-03 10:48:29 jdbc: 
/**/prep48.setString(6, "\\");
03-03 10:48:29 jdbc: 
/**/prep48.setString(7, "NODE_NODE");
03-03 10:48:29 jdbc: 
/**/prep48.setString(8, "\\");
03-03 10:48:29 jdbc: 
/**/prep48.setString(9, "%");
03-03 10:48:29 jdbc: 
/**/prep48.setString(10, "\\");
03-03 10:48:29 jdbc: 
/**/ResultSet rs64 = prep48.executeQuery();
03-03 10:48:29 jdbc: COMMAND_EXECUTE_QUERY 82
03-03 10:48:29 jdbc: RESULT_CLOSE 83
03-03 10:48:29 jdbc: 
/**/rs64.next();
03-03 10:48:29 jdbc: 
/**/rs64.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs64.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs64.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs64.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs64.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs64.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs64.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs64.next();
03-03 10:48:29 jdbc: 
/**/rs64.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs64.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs64.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs64.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs64.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs64.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs64.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs64.next();
03-03 10:48:29 jdbc: 
/**/rs64.close();
03-03 10:48:29 jdbc: 
/**/prep48.close();
03-03 10:48:29 jdbc: COMMAND_CLOSE 82
03-03 10:48:29 jdbc: 
/**/dbMeta0.getColumns(null, "PUBLIC", "QUOTE", null);
03-03 10:48:29 jdbc: 
/**/PreparedStatement prep49 = conn5.prepareStatement("SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, COLUMN_NAME, DATA_TYPE, TYPE_NAME, CHARACTER_MAXIMUM_LENGTH COLUMN_SIZE, CHARACTER_MAXIMUM_LENGTH BUFFER_LENGTH, NUMERIC_SCALE DECIMAL_DIGITS, NUMERIC_PRECISION_RADIX NUM_PREC_RADIX, NULLABLE, REMARKS, COLUMN_DEFAULT COLUMN_DEF, DATA_TYPE SQL_DATA_TYPE, ZERO() SQL_DATETIME_SUB, CHARACTER_OCTET_LENGTH CHAR_OCTET_LENGTH, ORDINAL_POSITION, IS_NULLABLE IS_NULLABLE, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_CATALOG, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_SCHEMA, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_TABLE, SOURCE_DATA_TYPE, CASE WHEN SEQUENCE_NAME IS NULL THEN CAST(? AS VARCHAR) ELSE CAST(? AS VARCHAR) END IS_AUTOINCREMENT, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_CATLOG FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND TABLE_NAME LIKE ? ESCAPE ? AND COLUMN_NAME LIKE ? ESCAPE ? ORDER BY TABLE_SCHEM, TABLE_NAME, ORDINAL_POSITION");
03-03 10:48:29 jdbc: SESSION_PREPARE_READ_PARAMS 84
03-03 10:48:29 jdbc: 
/**/prep49.setString(1, "NO");
03-03 10:48:29 jdbc: 
/**/prep49.setString(2, "YES");
03-03 10:48:29 jdbc: 
/**/prep49.setString(3, "%");
03-03 10:48:29 jdbc: 
/**/prep49.setString(4, "\\");
03-03 10:48:29 jdbc: 
/**/prep49.setString(5, "PUBLIC");
03-03 10:48:29 jdbc: 
/**/prep49.setString(6, "\\");
03-03 10:48:29 jdbc: 
/**/prep49.setString(7, "QUOTE");
03-03 10:48:29 jdbc: 
/**/prep49.setString(8, "\\");
03-03 10:48:29 jdbc: 
/**/prep49.setString(9, "%");
03-03 10:48:29 jdbc: 
/**/prep49.setString(10, "\\");
03-03 10:48:29 jdbc: 
/**/ResultSet rs65 = prep49.executeQuery();
03-03 10:48:29 jdbc: COMMAND_EXECUTE_QUERY 84
03-03 10:48:29 jdbc: RESULT_CLOSE 85
03-03 10:48:29 jdbc: 
/**/rs65.next();
03-03 10:48:29 jdbc: 
/**/rs65.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs65.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs65.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs65.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs65.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs65.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs65.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs65.next();
03-03 10:48:29 jdbc: 
/**/rs65.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs65.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs65.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs65.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs65.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs65.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs65.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs65.next();
03-03 10:48:29 jdbc: 
/**/rs65.close();
03-03 10:48:29 jdbc: 
/**/prep49.close();
03-03 10:48:29 jdbc: COMMAND_CLOSE 84
03-03 10:48:29 jdbc: 
/**/dbMeta0.getColumns(null, "PUBLIC", "TEMPARTICLE", null);
03-03 10:48:29 jdbc: 
/**/PreparedStatement prep50 = conn5.prepareStatement("SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, COLUMN_NAME, DATA_TYPE, TYPE_NAME, CHARACTER_MAXIMUM_LENGTH COLUMN_SIZE, CHARACTER_MAXIMUM_LENGTH BUFFER_LENGTH, NUMERIC_SCALE DECIMAL_DIGITS, NUMERIC_PRECISION_RADIX NUM_PREC_RADIX, NULLABLE, REMARKS, COLUMN_DEFAULT COLUMN_DEF, DATA_TYPE SQL_DATA_TYPE, ZERO() SQL_DATETIME_SUB, CHARACTER_OCTET_LENGTH CHAR_OCTET_LENGTH, ORDINAL_POSITION, IS_NULLABLE IS_NULLABLE, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_CATALOG, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_SCHEMA, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_TABLE, SOURCE_DATA_TYPE, CASE WHEN SEQUENCE_NAME IS NULL THEN CAST(? AS VARCHAR) ELSE CAST(? AS VARCHAR) END IS_AUTOINCREMENT, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_CATLOG FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND TABLE_NAME LIKE ? ESCAPE ? AND COLUMN_NAME LIKE ? ESCAPE ? ORDER BY TABLE_SCHEM, TABLE_NAME, ORDINAL_POSITION");
03-03 10:48:29 jdbc: SESSION_PREPARE_READ_PARAMS 86
03-03 10:48:29 jdbc: 
/**/prep50.setString(1, "NO");
03-03 10:48:29 jdbc: 
/**/prep50.setString(2, "YES");
03-03 10:48:29 jdbc: 
/**/prep50.setString(3, "%");
03-03 10:48:29 jdbc: 
/**/prep50.setString(4, "\\");
03-03 10:48:29 jdbc: 
/**/prep50.setString(5, "PUBLIC");
03-03 10:48:29 jdbc: 
/**/prep50.setString(6, "\\");
03-03 10:48:29 jdbc: 
/**/prep50.setString(7, "TEMPARTICLE");
03-03 10:48:29 jdbc: 
/**/prep50.setString(8, "\\");
03-03 10:48:29 jdbc: 
/**/prep50.setString(9, "%");
03-03 10:48:29 jdbc: 
/**/prep50.setString(10, "\\");
03-03 10:48:29 jdbc: 
/**/ResultSet rs66 = prep50.executeQuery();
03-03 10:48:29 jdbc: COMMAND_EXECUTE_QUERY 86
03-03 10:48:29 jdbc: RESULT_CLOSE 87
03-03 10:48:29 jdbc: 
/**/rs66.next();
03-03 10:48:29 jdbc: 
/**/rs66.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs66.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs66.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs66.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs66.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs66.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs66.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs66.next();
03-03 10:48:29 jdbc: 
/**/rs66.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs66.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs66.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs66.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs66.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs66.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs66.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs66.next();
03-03 10:48:29 jdbc: 
/**/rs66.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs66.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs66.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs66.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs66.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs66.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs66.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs66.next();
03-03 10:48:29 jdbc: 
/**/rs66.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs66.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs66.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs66.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs66.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs66.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs66.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs66.next();
03-03 10:48:29 jdbc: 
/**/rs66.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs66.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs66.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs66.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs66.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs66.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs66.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs66.next();
03-03 10:48:29 jdbc: 
/**/rs66.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs66.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs66.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs66.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs66.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs66.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs66.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs66.next();
03-03 10:48:29 jdbc: 
/**/rs66.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs66.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs66.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs66.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs66.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs66.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs66.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs66.next();
03-03 10:48:29 jdbc: 
/**/rs66.close();
03-03 10:48:29 jdbc: 
/**/prep50.close();
03-03 10:48:29 jdbc: COMMAND_CLOSE 86
03-03 10:48:29 jdbc: 
/**/dbMeta0.getColumns(null, "PUBLIC", "USER_ACCOUNTS", null);
03-03 10:48:29 jdbc: 
/**/PreparedStatement prep51 = conn5.prepareStatement("SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, COLUMN_NAME, DATA_TYPE, TYPE_NAME, CHARACTER_MAXIMUM_LENGTH COLUMN_SIZE, CHARACTER_MAXIMUM_LENGTH BUFFER_LENGTH, NUMERIC_SCALE DECIMAL_DIGITS, NUMERIC_PRECISION_RADIX NUM_PREC_RADIX, NULLABLE, REMARKS, COLUMN_DEFAULT COLUMN_DEF, DATA_TYPE SQL_DATA_TYPE, ZERO() SQL_DATETIME_SUB, CHARACTER_OCTET_LENGTH CHAR_OCTET_LENGTH, ORDINAL_POSITION, IS_NULLABLE IS_NULLABLE, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_CATALOG, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_SCHEMA, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_TABLE, SOURCE_DATA_TYPE, CASE WHEN SEQUENCE_NAME IS NULL THEN CAST(? AS VARCHAR) ELSE CAST(? AS VARCHAR) END IS_AUTOINCREMENT, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_CATLOG FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND TABLE_NAME LIKE ? ESCAPE ? AND COLUMN_NAME LIKE ? ESCAPE ? ORDER BY TABLE_SCHEM, TABLE_NAME, ORDINAL_POSITION");
03-03 10:48:29 jdbc: SESSION_PREPARE_READ_PARAMS 88
03-03 10:48:29 jdbc: 
/**/prep51.setString(1, "NO");
03-03 10:48:29 jdbc: 
/**/prep51.setString(2, "YES");
03-03 10:48:29 jdbc: 
/**/prep51.setString(3, "%");
03-03 10:48:29 jdbc: 
/**/prep51.setString(4, "\\");
03-03 10:48:29 jdbc: 
/**/prep51.setString(5, "PUBLIC");
03-03 10:48:29 jdbc: 
/**/prep51.setString(6, "\\");
03-03 10:48:29 jdbc: 
/**/prep51.setString(7, "USER_ACCOUNTS");
03-03 10:48:29 jdbc: 
/**/prep51.setString(8, "\\");
03-03 10:48:29 jdbc: 
/**/prep51.setString(9, "%");
03-03 10:48:29 jdbc: 
/**/prep51.setString(10, "\\");
03-03 10:48:29 jdbc: 
/**/ResultSet rs67 = prep51.executeQuery();
03-03 10:48:29 jdbc: COMMAND_EXECUTE_QUERY 88
03-03 10:48:29 jdbc: RESULT_CLOSE 89
03-03 10:48:29 jdbc: 
/**/rs67.next();
03-03 10:48:29 jdbc: 
/**/rs67.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs67.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs67.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs67.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs67.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs67.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs67.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs67.next();
03-03 10:48:29 jdbc: 
/**/rs67.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs67.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs67.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs67.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs67.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs67.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs67.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs67.next();
03-03 10:48:29 jdbc: 
/**/rs67.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs67.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs67.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs67.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs67.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs67.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs67.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs67.next();
03-03 10:48:29 jdbc: 
/**/rs67.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs67.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs67.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs67.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs67.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs67.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs67.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs67.next();
03-03 10:48:29 jdbc: 
/**/rs67.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs67.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs67.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs67.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs67.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs67.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs67.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs67.next();
03-03 10:48:29 jdbc: 
/**/rs67.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs67.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs67.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs67.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs67.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs67.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs67.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs67.next();
03-03 10:48:29 jdbc: 
/**/rs67.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs67.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs67.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs67.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs67.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs67.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs67.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs67.next();
03-03 10:48:29 jdbc: 
/**/rs67.close();
03-03 10:48:29 jdbc: 
/**/prep51.close();
03-03 10:48:29 jdbc: COMMAND_CLOSE 88
03-03 10:48:29 jdbc: 
/**/dbMeta0.getColumns(null, "PUBLIC", "USER_ACCOUNTS_CONTENTNODE", null);
03-03 10:48:29 jdbc: 
/**/PreparedStatement prep52 = conn5.prepareStatement("SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, COLUMN_NAME, DATA_TYPE, TYPE_NAME, CHARACTER_MAXIMUM_LENGTH COLUMN_SIZE, CHARACTER_MAXIMUM_LENGTH BUFFER_LENGTH, NUMERIC_SCALE DECIMAL_DIGITS, NUMERIC_PRECISION_RADIX NUM_PREC_RADIX, NULLABLE, REMARKS, COLUMN_DEFAULT COLUMN_DEF, DATA_TYPE SQL_DATA_TYPE, ZERO() SQL_DATETIME_SUB, CHARACTER_OCTET_LENGTH CHAR_OCTET_LENGTH, ORDINAL_POSITION, IS_NULLABLE IS_NULLABLE, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_CATALOG, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_SCHEMA, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_TABLE, SOURCE_DATA_TYPE, CASE WHEN SEQUENCE_NAME IS NULL THEN CAST(? AS VARCHAR) ELSE CAST(? AS VARCHAR) END IS_AUTOINCREMENT, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_CATLOG FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND TABLE_NAME LIKE ? ESCAPE ? AND COLUMN_NAME LIKE ? ESCAPE ? ORDER BY TABLE_SCHEM, TABLE_NAME, ORDINAL_POSITION");
03-03 10:48:29 jdbc: SESSION_PREPARE_READ_PARAMS 90
03-03 10:48:29 jdbc: 
/**/prep52.setString(1, "NO");
03-03 10:48:29 jdbc: 
/**/prep52.setString(2, "YES");
03-03 10:48:29 jdbc: 
/**/prep52.setString(3, "%");
03-03 10:48:29 jdbc: 
/**/prep52.setString(4, "\\");
03-03 10:48:29 jdbc: 
/**/prep52.setString(5, "PUBLIC");
03-03 10:48:29 jdbc: 
/**/prep52.setString(6, "\\");
03-03 10:48:29 jdbc: 
/**/prep52.setString(7, "USER_ACCOUNTS_CONTENTNODE");
03-03 10:48:29 jdbc: 
/**/prep52.setString(8, "\\");
03-03 10:48:29 jdbc: 
/**/prep52.setString(9, "%");
03-03 10:48:29 jdbc: 
/**/prep52.setString(10, "\\");
03-03 10:48:29 jdbc: 
/**/ResultSet rs68 = prep52.executeQuery();
03-03 10:48:29 jdbc: COMMAND_EXECUTE_QUERY 90
03-03 10:48:29 jdbc: RESULT_CLOSE 91
03-03 10:48:29 jdbc: 
/**/rs68.next();
03-03 10:48:29 jdbc: 
/**/rs68.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs68.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs68.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs68.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs68.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs68.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs68.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs68.next();
03-03 10:48:29 jdbc: 
/**/rs68.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs68.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs68.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs68.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs68.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs68.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs68.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs68.next();
03-03 10:48:29 jdbc: 
/**/rs68.close();
03-03 10:48:29 jdbc: 
/**/prep52.close();
03-03 10:48:29 jdbc: COMMAND_CLOSE 90
03-03 10:48:29 jdbc: 
/**/dbMeta0.getColumns(null, "PUBLIC", "USER_ROLES", null);
03-03 10:48:29 jdbc: 
/**/PreparedStatement prep53 = conn5.prepareStatement("SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, COLUMN_NAME, DATA_TYPE, TYPE_NAME, CHARACTER_MAXIMUM_LENGTH COLUMN_SIZE, CHARACTER_MAXIMUM_LENGTH BUFFER_LENGTH, NUMERIC_SCALE DECIMAL_DIGITS, NUMERIC_PRECISION_RADIX NUM_PREC_RADIX, NULLABLE, REMARKS, COLUMN_DEFAULT COLUMN_DEF, DATA_TYPE SQL_DATA_TYPE, ZERO() SQL_DATETIME_SUB, CHARACTER_OCTET_LENGTH CHAR_OCTET_LENGTH, ORDINAL_POSITION, IS_NULLABLE IS_NULLABLE, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_CATALOG, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_SCHEMA, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_TABLE, SOURCE_DATA_TYPE, CASE WHEN SEQUENCE_NAME IS NULL THEN CAST(? AS VARCHAR) ELSE CAST(? AS VARCHAR) END IS_AUTOINCREMENT, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_CATLOG FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND TABLE_NAME LIKE ? ESCAPE ? AND COLUMN_NAME LIKE ? ESCAPE ? ORDER BY TABLE_SCHEM, TABLE_NAME, ORDINAL_POSITION");
03-03 10:48:29 jdbc: SESSION_PREPARE_READ_PARAMS 92
03-03 10:48:29 jdbc: 
/**/prep53.setString(1, "NO");
03-03 10:48:29 jdbc: 
/**/prep53.setString(2, "YES");
03-03 10:48:29 jdbc: 
/**/prep53.setString(3, "%");
03-03 10:48:29 jdbc: 
/**/prep53.setString(4, "\\");
03-03 10:48:29 jdbc: 
/**/prep53.setString(5, "PUBLIC");
03-03 10:48:29 jdbc: 
/**/prep53.setString(6, "\\");
03-03 10:48:29 jdbc: 
/**/prep53.setString(7, "USER_ROLES");
03-03 10:48:29 jdbc: 
/**/prep53.setString(8, "\\");
03-03 10:48:29 jdbc: 
/**/prep53.setString(9, "%");
03-03 10:48:29 jdbc: 
/**/prep53.setString(10, "\\");
03-03 10:48:29 jdbc: 
/**/ResultSet rs69 = prep53.executeQuery();
03-03 10:48:29 jdbc: COMMAND_EXECUTE_QUERY 92
03-03 10:48:29 jdbc: RESULT_CLOSE 93
03-03 10:48:29 jdbc: 
/**/rs69.next();
03-03 10:48:29 jdbc: 
/**/rs69.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs69.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs69.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs69.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs69.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs69.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs69.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs69.next();
03-03 10:48:29 jdbc: 
/**/rs69.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs69.getString("TYPE_NAME");
03-03 10:48:29 jdbc: 
/**/rs69.findColumn("COLUMN_SIZE");
03-03 10:48:29 jdbc: 
/**/rs69.getInt(7);
03-03 10:48:29 jdbc: 
/**/rs69.findColumn("DECIMAL_DIGITS");
03-03 10:48:29 jdbc: 
/**/rs69.getInt(9);
03-03 10:48:29 jdbc: 
/**/rs69.getInt("NULLABLE");
03-03 10:48:29 jdbc: 
/**/rs69.next();
03-03 10:48:29 jdbc: 
/**/rs69.close();
03-03 10:48:29 jdbc: 
/**/prep53.close();
03-03 10:48:29 jdbc: COMMAND_CLOSE 92
03-03 10:48:29 jdbc: 
/**/dbMeta0.getIndexInfo(null, "PUBLIC", "ARTICLE", false, true);
03-03 10:48:29 jdbc: 
/**/PreparedStatement prep54 = conn5.prepareStatement("SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION");
03-03 10:48:29 jdbc: SESSION_PREPARE_READ_PARAMS 94
03-03 10:48:29 jdbc: 
/**/prep54.setString(1, "%");
03-03 10:48:29 jdbc: 
/**/prep54.setString(2, "\\");
03-03 10:48:29 jdbc: 
/**/prep54.setString(3, "PUBLIC");
03-03 10:48:29 jdbc: 
/**/prep54.setString(4, "\\");
03-03 10:48:29 jdbc: 
/**/prep54.setString(5, "ARTICLE");
03-03 10:48:29 jdbc: 
/**/ResultSet rs70 = prep54.executeQuery();
03-03 10:48:29 jdbc: COMMAND_EXECUTE_QUERY 94
03-03 10:48:29 jdbc: RESULT_CLOSE 95
03-03 10:48:29 jdbc: 
/**/rs70.next();
03-03 10:48:29 jdbc: 
/**/rs70.getString("INDEX_NAME");
03-03 10:48:29 jdbc: 
/**/rs70.getInt("TYPE");
03-03 10:48:29 jdbc: 
/**/rs70.getBoolean("NON_UNIQUE");
03-03 10:48:29 jdbc: 
/**/rs70.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs70.next();
03-03 10:48:29 jdbc: 
/**/rs70.getString("INDEX_NAME");
03-03 10:48:29 jdbc: 
/**/rs70.getInt("TYPE");
03-03 10:48:29 jdbc: 
/**/rs70.getBoolean("NON_UNIQUE");
03-03 10:48:29 jdbc: 
/**/rs70.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs70.next();
03-03 10:48:29 jdbc: 
/**/rs70.close();
03-03 10:48:29 jdbc: 
/**/prep54.close();
03-03 10:48:29 jdbc: COMMAND_CLOSE 94
03-03 10:48:29 jdbc: 
/**/dbMeta0.getIndexInfo(null, "PUBLIC", "ARTICLE_CSS_RESOURCES", false, true);
03-03 10:48:29 jdbc: 
/**/PreparedStatement prep55 = conn5.prepareStatement("SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION");
03-03 10:48:29 jdbc: SESSION_PREPARE_READ_PARAMS 96
03-03 10:48:29 jdbc: 
/**/prep55.setString(1, "%");
03-03 10:48:29 jdbc: 
/**/prep55.setString(2, "\\");
03-03 10:48:29 jdbc: 
/**/prep55.setString(3, "PUBLIC");
03-03 10:48:29 jdbc: 
/**/prep55.setString(4, "\\");
03-03 10:48:29 jdbc: 
/**/prep55.setString(5, "ARTICLE_CSS_RESOURCES");
03-03 10:48:29 jdbc: 
/**/ResultSet rs71 = prep55.executeQuery();
03-03 10:48:29 jdbc: COMMAND_EXECUTE_QUERY 96
03-03 10:48:29 jdbc: RESULT_CLOSE 97
03-03 10:48:29 jdbc: 
/**/rs71.next();
03-03 10:48:29 jdbc: 
/**/rs71.getString("INDEX_NAME");
03-03 10:48:29 jdbc: 
/**/rs71.getInt("TYPE");
03-03 10:48:29 jdbc: 
/**/rs71.getBoolean("NON_UNIQUE");
03-03 10:48:29 jdbc: 
/**/rs71.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs71.next();
03-03 10:48:29 jdbc: 
/**/rs71.close();
03-03 10:48:29 jdbc: 
/**/prep55.close();
03-03 10:48:29 jdbc: COMMAND_CLOSE 96
03-03 10:48:29 jdbc: 
/**/dbMeta0.getIndexInfo(null, "PUBLIC", "ARTICLE_JS_RESOURCES", false, true);
03-03 10:48:29 jdbc: 
/**/PreparedStatement prep56 = conn5.prepareStatement("SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION");
03-03 10:48:29 jdbc: SESSION_PREPARE_READ_PARAMS 98
03-03 10:48:29 jdbc: 
/**/prep56.setString(1, "%");
03-03 10:48:29 jdbc: 
/**/prep56.setString(2, "\\");
03-03 10:48:29 jdbc: 
/**/prep56.setString(3, "PUBLIC");
03-03 10:48:29 jdbc: 
/**/prep56.setString(4, "\\");
03-03 10:48:29 jdbc: 
/**/prep56.setString(5, "ARTICLE_JS_RESOURCES");
03-03 10:48:29 jdbc: 
/**/ResultSet rs72 = prep56.executeQuery();
03-03 10:48:29 jdbc: COMMAND_EXECUTE_QUERY 98
03-03 10:48:29 jdbc: RESULT_CLOSE 99
03-03 10:48:29 jdbc: 
/**/rs72.next();
03-03 10:48:29 jdbc: 
/**/rs72.getString("INDEX_NAME");
03-03 10:48:29 jdbc: 
/**/rs72.getInt("TYPE");
03-03 10:48:29 jdbc: 
/**/rs72.getBoolean("NON_UNIQUE");
03-03 10:48:29 jdbc: 
/**/rs72.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs72.next();
03-03 10:48:29 jdbc: 
/**/rs72.close();
03-03 10:48:29 jdbc: 
/**/prep56.close();
03-03 10:48:29 jdbc: COMMAND_CLOSE 98
03-03 10:48:29 jdbc: 
/**/dbMeta0.getIndexInfo(null, "PUBLIC", "CONTENTNODE", false, true);
03-03 10:48:29 jdbc: 
/**/PreparedStatement prep57 = conn5.prepareStatement("SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION");
03-03 10:48:29 jdbc: SESSION_PREPARE_READ_PARAMS 100
03-03 10:48:29 jdbc: 
/**/prep57.setString(1, "%");
03-03 10:48:29 jdbc: 
/**/prep57.setString(2, "\\");
03-03 10:48:29 jdbc: 
/**/prep57.setString(3, "PUBLIC");
03-03 10:48:29 jdbc: 
/**/prep57.setString(4, "\\");
03-03 10:48:29 jdbc: 
/**/prep57.setString(5, "CONTENTNODE");
03-03 10:48:29 jdbc: 
/**/ResultSet rs73 = prep57.executeQuery();
03-03 10:48:29 jdbc: COMMAND_EXECUTE_QUERY 100
03-03 10:48:29 jdbc: RESULT_CLOSE 101
03-03 10:48:29 jdbc: 
/**/rs73.next();
03-03 10:48:29 jdbc: 
/**/rs73.getString("INDEX_NAME");
03-03 10:48:29 jdbc: 
/**/rs73.getInt("TYPE");
03-03 10:48:29 jdbc: 
/**/rs73.getBoolean("NON_UNIQUE");
03-03 10:48:29 jdbc: 
/**/rs73.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs73.next();
03-03 10:48:29 jdbc: 
/**/rs73.getString("INDEX_NAME");
03-03 10:48:29 jdbc: 
/**/rs73.getInt("TYPE");
03-03 10:48:29 jdbc: 
/**/rs73.getBoolean("NON_UNIQUE");
03-03 10:48:29 jdbc: 
/**/rs73.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs73.next();
03-03 10:48:29 jdbc: 
/**/rs73.getString("INDEX_NAME");
03-03 10:48:29 jdbc: 
/**/rs73.getInt("TYPE");
03-03 10:48:29 jdbc: 
/**/rs73.getBoolean("NON_UNIQUE");
03-03 10:48:29 jdbc: 
/**/rs73.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs73.next();
03-03 10:48:29 jdbc: 
/**/rs73.close();
03-03 10:48:29 jdbc: 
/**/prep57.close();
03-03 10:48:29 jdbc: COMMAND_CLOSE 100
03-03 10:48:29 jdbc: 
/**/dbMeta0.getIndexInfo(null, "PUBLIC", "CONTENTNODE_CONTENT_TAG", false, true);
03-03 10:48:29 jdbc: 
/**/PreparedStatement prep58 = conn5.prepareStatement("SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION");
03-03 10:48:29 jdbc: SESSION_PREPARE_READ_PARAMS 102
03-03 10:48:29 jdbc: 
/**/prep58.setString(1, "%");
03-03 10:48:29 jdbc: 
/**/prep58.setString(2, "\\");
03-03 10:48:29 jdbc: 
/**/prep58.setString(3, "PUBLIC");
03-03 10:48:29 jdbc: 
/**/prep58.setString(4, "\\");
03-03 10:48:29 jdbc: 
/**/prep58.setString(5, "CONTENTNODE_CONTENT_TAG");
03-03 10:48:29 jdbc: 
/**/ResultSet rs74 = prep58.executeQuery();
03-03 10:48:29 jdbc: COMMAND_EXECUTE_QUERY 102
03-03 10:48:29 jdbc: RESULT_CLOSE 103
03-03 10:48:29 jdbc: 
/**/rs74.next();
03-03 10:48:29 jdbc: 
/**/rs74.getString("INDEX_NAME");
03-03 10:48:29 jdbc: 
/**/rs74.getInt("TYPE");
03-03 10:48:29 jdbc: 
/**/rs74.getBoolean("NON_UNIQUE");
03-03 10:48:29 jdbc: 
/**/rs74.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs74.next();
03-03 10:48:29 jdbc: 
/**/rs74.getString("INDEX_NAME");
03-03 10:48:29 jdbc: 
/**/rs74.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs74.next();
03-03 10:48:29 jdbc: 
/**/rs74.getString("INDEX_NAME");
03-03 10:48:29 jdbc: 
/**/rs74.getInt("TYPE");
03-03 10:48:29 jdbc: 
/**/rs74.getBoolean("NON_UNIQUE");
03-03 10:48:29 jdbc: 
/**/rs74.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs74.next();
03-03 10:48:29 jdbc: 
/**/rs74.close();
03-03 10:48:29 jdbc: 
/**/prep58.close();
03-03 10:48:29 jdbc: COMMAND_CLOSE 102
03-03 10:48:29 jdbc: 
/**/dbMeta0.getIndexInfo(null, "PUBLIC", "CONTENT_TAG", false, true);
03-03 10:48:29 jdbc: 
/**/PreparedStatement prep59 = conn5.prepareStatement("SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION");
03-03 10:48:29 jdbc: SESSION_PREPARE_READ_PARAMS 104
03-03 10:48:29 jdbc: 
/**/prep59.setString(1, "%");
03-03 10:48:29 jdbc: 
/**/prep59.setString(2, "\\");
03-03 10:48:29 jdbc: 
/**/prep59.setString(3, "PUBLIC");
03-03 10:48:29 jdbc: 
/**/prep59.setString(4, "\\");
03-03 10:48:29 jdbc: 
/**/prep59.setString(5, "CONTENT_TAG");
03-03 10:48:29 jdbc: 
/**/ResultSet rs75 = prep59.executeQuery();
03-03 10:48:29 jdbc: COMMAND_EXECUTE_QUERY 104
03-03 10:48:29 jdbc: RESULT_CLOSE 105
03-03 10:48:29 jdbc: 
/**/rs75.next();
03-03 10:48:29 jdbc: 
/**/rs75.getString("INDEX_NAME");
03-03 10:48:29 jdbc: 
/**/rs75.getInt("TYPE");
03-03 10:48:29 jdbc: 
/**/rs75.getBoolean("NON_UNIQUE");
03-03 10:48:29 jdbc: 
/**/rs75.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs75.next();
03-03 10:48:29 jdbc: 
/**/rs75.close();
03-03 10:48:29 jdbc: 
/**/prep59.close();
03-03 10:48:29 jdbc: COMMAND_CLOSE 104
03-03 10:48:29 jdbc: 
/**/dbMeta0.getIndexInfo(null, "PUBLIC", "NODE", false, true);
03-03 10:48:29 jdbc: 
/**/PreparedStatement prep60 = conn5.prepareStatement("SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION");
03-03 10:48:29 jdbc: SESSION_PREPARE_READ_PARAMS 106
03-03 10:48:29 jdbc: 
/**/prep60.setString(1, "%");
03-03 10:48:29 jdbc: 
/**/prep60.setString(2, "\\");
03-03 10:48:29 jdbc: 
/**/prep60.setString(3, "PUBLIC");
03-03 10:48:29 jdbc: 
/**/prep60.setString(4, "\\");
03-03 10:48:29 jdbc: 
/**/prep60.setString(5, "NODE");
03-03 10:48:29 jdbc: 
/**/ResultSet rs76 = prep60.executeQuery();
03-03 10:48:29 jdbc: COMMAND_EXECUTE_QUERY 106
03-03 10:48:29 jdbc: RESULT_CLOSE 107
03-03 10:48:29 jdbc: 
/**/rs76.next();
03-03 10:48:29 jdbc: 
/**/rs76.getString("INDEX_NAME");
03-03 10:48:29 jdbc: 
/**/rs76.getInt("TYPE");
03-03 10:48:29 jdbc: 
/**/rs76.getBoolean("NON_UNIQUE");
03-03 10:48:29 jdbc: 
/**/rs76.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs76.next();
03-03 10:48:29 jdbc: 
/**/rs76.getString("INDEX_NAME");
03-03 10:48:29 jdbc: 
/**/rs76.getInt("TYPE");
03-03 10:48:29 jdbc: 
/**/rs76.getBoolean("NON_UNIQUE");
03-03 10:48:29 jdbc: 
/**/rs76.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs76.next();
03-03 10:48:29 jdbc: 
/**/rs76.close();
03-03 10:48:29 jdbc: 
/**/prep60.close();
03-03 10:48:29 jdbc: COMMAND_CLOSE 106
03-03 10:48:29 jdbc: 
/**/dbMeta0.getIndexInfo(null, "PUBLIC", "NODE_CONTENTNODE", false, true);
03-03 10:48:29 jdbc: 
/**/PreparedStatement prep61 = conn5.prepareStatement("SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION");
03-03 10:48:29 jdbc: SESSION_PREPARE_READ_PARAMS 108
03-03 10:48:29 jdbc: 
/**/prep61.setString(1, "%");
03-03 10:48:29 jdbc: 
/**/prep61.setString(2, "\\");
03-03 10:48:29 jdbc: 
/**/prep61.setString(3, "PUBLIC");
03-03 10:48:29 jdbc: 
/**/prep61.setString(4, "\\");
03-03 10:48:29 jdbc: 
/**/prep61.setString(5, "NODE_CONTENTNODE");
03-03 10:48:29 jdbc: 
/**/ResultSet rs77 = prep61.executeQuery();
03-03 10:48:29 jdbc: COMMAND_EXECUTE_QUERY 108
03-03 10:48:29 jdbc: RESULT_CLOSE 109
03-03 10:48:29 jdbc: 
/**/rs77.next();
03-03 10:48:29 jdbc: 
/**/rs77.getString("INDEX_NAME");
03-03 10:48:29 jdbc: 
/**/rs77.getInt("TYPE");
03-03 10:48:29 jdbc: 
/**/rs77.getBoolean("NON_UNIQUE");
03-03 10:48:29 jdbc: 
/**/rs77.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs77.next();
03-03 10:48:29 jdbc: 
/**/rs77.getString("INDEX_NAME");
03-03 10:48:29 jdbc: 
/**/rs77.getInt("TYPE");
03-03 10:48:29 jdbc: 
/**/rs77.getBoolean("NON_UNIQUE");
03-03 10:48:29 jdbc: 
/**/rs77.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs77.next();
03-03 10:48:29 jdbc: 
/**/rs77.getString("INDEX_NAME");
03-03 10:48:29 jdbc: 
/**/rs77.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs77.next();
03-03 10:48:29 jdbc: 
/**/rs77.close();
03-03 10:48:29 jdbc: 
/**/prep61.close();
03-03 10:48:29 jdbc: COMMAND_CLOSE 108
03-03 10:48:29 jdbc: 
/**/dbMeta0.getIndexInfo(null, "PUBLIC", "NODE_NODE", false, true);
03-03 10:48:29 jdbc: 
/**/PreparedStatement prep62 = conn5.prepareStatement("SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION");
03-03 10:48:29 jdbc: SESSION_PREPARE_READ_PARAMS 110
03-03 10:48:29 jdbc: 
/**/prep62.setString(1, "%");
03-03 10:48:29 jdbc: 
/**/prep62.setString(2, "\\");
03-03 10:48:29 jdbc: 
/**/prep62.setString(3, "PUBLIC");
03-03 10:48:29 jdbc: 
/**/prep62.setString(4, "\\");
03-03 10:48:29 jdbc: 
/**/prep62.setString(5, "NODE_NODE");
03-03 10:48:29 jdbc: 
/**/ResultSet rs78 = prep62.executeQuery();
03-03 10:48:29 jdbc: COMMAND_EXECUTE_QUERY 110
03-03 10:48:29 jdbc: RESULT_CLOSE 111
03-03 10:48:29 jdbc: 
/**/rs78.next();
03-03 10:48:29 jdbc: 
/**/rs78.getString("INDEX_NAME");
03-03 10:48:29 jdbc: 
/**/rs78.getInt("TYPE");
03-03 10:48:29 jdbc: 
/**/rs78.getBoolean("NON_UNIQUE");
03-03 10:48:29 jdbc: 
/**/rs78.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs78.next();
03-03 10:48:29 jdbc: 
/**/rs78.getString("INDEX_NAME");
03-03 10:48:29 jdbc: 
/**/rs78.getInt("TYPE");
03-03 10:48:29 jdbc: 
/**/rs78.getBoolean("NON_UNIQUE");
03-03 10:48:29 jdbc: 
/**/rs78.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs78.next();
03-03 10:48:29 jdbc: 
/**/rs78.getString("INDEX_NAME");
03-03 10:48:29 jdbc: 
/**/rs78.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs78.next();
03-03 10:48:29 jdbc: 
/**/rs78.close();
03-03 10:48:29 jdbc: 
/**/prep62.close();
03-03 10:48:29 jdbc: COMMAND_CLOSE 110
03-03 10:48:29 jdbc: 
/**/dbMeta0.getIndexInfo(null, "PUBLIC", "QUOTE", false, true);
03-03 10:48:29 jdbc: 
/**/PreparedStatement prep63 = conn5.prepareStatement("SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION");
03-03 10:48:29 jdbc: SESSION_PREPARE_READ_PARAMS 112
03-03 10:48:29 jdbc: 
/**/prep63.setString(1, "%");
03-03 10:48:29 jdbc: 
/**/prep63.setString(2, "\\");
03-03 10:48:29 jdbc: 
/**/prep63.setString(3, "PUBLIC");
03-03 10:48:29 jdbc: 
/**/prep63.setString(4, "\\");
03-03 10:48:29 jdbc: 
/**/prep63.setString(5, "QUOTE");
03-03 10:48:29 jdbc: 
/**/ResultSet rs79 = prep63.executeQuery();
03-03 10:48:29 jdbc: COMMAND_EXECUTE_QUERY 112
03-03 10:48:29 jdbc: RESULT_CLOSE 113
03-03 10:48:29 jdbc: 
/**/rs79.next();
03-03 10:48:29 jdbc: 
/**/rs79.getString("INDEX_NAME");
03-03 10:48:29 jdbc: 
/**/rs79.getInt("TYPE");
03-03 10:48:29 jdbc: 
/**/rs79.getBoolean("NON_UNIQUE");
03-03 10:48:29 jdbc: 
/**/rs79.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs79.next();
03-03 10:48:29 jdbc: 
/**/rs79.close();
03-03 10:48:29 jdbc: 
/**/prep63.close();
03-03 10:48:29 jdbc: COMMAND_CLOSE 112
03-03 10:48:29 jdbc: 
/**/dbMeta0.getIndexInfo(null, "PUBLIC", "TEMPARTICLE", false, true);
03-03 10:48:29 jdbc: 
/**/PreparedStatement prep64 = conn5.prepareStatement("SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION");
03-03 10:48:29 jdbc: SESSION_PREPARE_READ_PARAMS 114
03-03 10:48:29 jdbc: 
/**/prep64.setString(1, "%");
03-03 10:48:29 jdbc: 
/**/prep64.setString(2, "\\");
03-03 10:48:29 jdbc: 
/**/prep64.setString(3, "PUBLIC");
03-03 10:48:29 jdbc: 
/**/prep64.setString(4, "\\");
03-03 10:48:29 jdbc: 
/**/prep64.setString(5, "TEMPARTICLE");
03-03 10:48:29 jdbc: 
/**/ResultSet rs80 = prep64.executeQuery();
03-03 10:48:29 jdbc: COMMAND_EXECUTE_QUERY 114
03-03 10:48:29 jdbc: RESULT_CLOSE 115
03-03 10:48:29 jdbc: 
/**/rs80.next();
03-03 10:48:29 jdbc: 
/**/rs80.getString("INDEX_NAME");
03-03 10:48:29 jdbc: 
/**/rs80.getInt("TYPE");
03-03 10:48:29 jdbc: 
/**/rs80.getBoolean("NON_UNIQUE");
03-03 10:48:29 jdbc: 
/**/rs80.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs80.next();
03-03 10:48:29 jdbc: 
/**/rs80.getString("INDEX_NAME");
03-03 10:48:29 jdbc: 
/**/rs80.getInt("TYPE");
03-03 10:48:29 jdbc: 
/**/rs80.getBoolean("NON_UNIQUE");
03-03 10:48:29 jdbc: 
/**/rs80.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs80.next();
03-03 10:48:29 jdbc: 
/**/rs80.getString("INDEX_NAME");
03-03 10:48:29 jdbc: 
/**/rs80.getInt("TYPE");
03-03 10:48:29 jdbc: 
/**/rs80.getBoolean("NON_UNIQUE");
03-03 10:48:29 jdbc: 
/**/rs80.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs80.next();
03-03 10:48:29 jdbc: 
/**/rs80.getString("INDEX_NAME");
03-03 10:48:29 jdbc: 
/**/rs80.getInt("TYPE");
03-03 10:48:29 jdbc: 
/**/rs80.getBoolean("NON_UNIQUE");
03-03 10:48:29 jdbc: 
/**/rs80.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs80.next();
03-03 10:48:29 jdbc: 
/**/rs80.close();
03-03 10:48:29 jdbc: 
/**/prep64.close();
03-03 10:48:29 jdbc: COMMAND_CLOSE 114
03-03 10:48:29 jdbc: 
/**/dbMeta0.getIndexInfo(null, "PUBLIC", "USER_ACCOUNTS", false, true);
03-03 10:48:29 jdbc: 
/**/PreparedStatement prep65 = conn5.prepareStatement("SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION");
03-03 10:48:29 jdbc: SESSION_PREPARE_READ_PARAMS 116
03-03 10:48:29 jdbc: 
/**/prep65.setString(1, "%");
03-03 10:48:29 jdbc: 
/**/prep65.setString(2, "\\");
03-03 10:48:29 jdbc: 
/**/prep65.setString(3, "PUBLIC");
03-03 10:48:29 jdbc: 
/**/prep65.setString(4, "\\");
03-03 10:48:29 jdbc: 
/**/prep65.setString(5, "USER_ACCOUNTS");
03-03 10:48:29 jdbc: 
/**/ResultSet rs81 = prep65.executeQuery();
03-03 10:48:29 jdbc: COMMAND_EXECUTE_QUERY 116
03-03 10:48:29 jdbc: RESULT_CLOSE 117
03-03 10:48:29 jdbc: 
/**/rs81.next();
03-03 10:48:29 jdbc: 
/**/rs81.getString("INDEX_NAME");
03-03 10:48:29 jdbc: 
/**/rs81.getInt("TYPE");
03-03 10:48:29 jdbc: 
/**/rs81.getBoolean("NON_UNIQUE");
03-03 10:48:29 jdbc: 
/**/rs81.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs81.next();
03-03 10:48:29 jdbc: 
/**/rs81.getString("INDEX_NAME");
03-03 10:48:29 jdbc: 
/**/rs81.getInt("TYPE");
03-03 10:48:29 jdbc: 
/**/rs81.getBoolean("NON_UNIQUE");
03-03 10:48:29 jdbc: 
/**/rs81.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs81.next();
03-03 10:48:29 jdbc: 
/**/rs81.close();
03-03 10:48:29 jdbc: 
/**/prep65.close();
03-03 10:48:29 jdbc: COMMAND_CLOSE 116
03-03 10:48:29 jdbc: 
/**/dbMeta0.getIndexInfo(null, "PUBLIC", "USER_ACCOUNTS_CONTENTNODE", false, true);
03-03 10:48:29 jdbc: 
/**/PreparedStatement prep66 = conn5.prepareStatement("SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION");
03-03 10:48:29 jdbc: SESSION_PREPARE_READ_PARAMS 118
03-03 10:48:29 jdbc: 
/**/prep66.setString(1, "%");
03-03 10:48:29 jdbc: 
/**/prep66.setString(2, "\\");
03-03 10:48:29 jdbc: 
/**/prep66.setString(3, "PUBLIC");
03-03 10:48:29 jdbc: 
/**/prep66.setString(4, "\\");
03-03 10:48:29 jdbc: 
/**/prep66.setString(5, "USER_ACCOUNTS_CONTENTNODE");
03-03 10:48:29 jdbc: 
/**/ResultSet rs82 = prep66.executeQuery();
03-03 10:48:29 jdbc: COMMAND_EXECUTE_QUERY 118
03-03 10:48:29 jdbc: RESULT_CLOSE 119
03-03 10:48:29 jdbc: 
/**/rs82.next();
03-03 10:48:29 jdbc: 
/**/rs82.getString("INDEX_NAME");
03-03 10:48:29 jdbc: 
/**/rs82.getInt("TYPE");
03-03 10:48:29 jdbc: 
/**/rs82.getBoolean("NON_UNIQUE");
03-03 10:48:29 jdbc: 
/**/rs82.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs82.next();
03-03 10:48:29 jdbc: 
/**/rs82.getString("INDEX_NAME");
03-03 10:48:29 jdbc: 
/**/rs82.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs82.next();
03-03 10:48:29 jdbc: 
/**/rs82.getString("INDEX_NAME");
03-03 10:48:29 jdbc: 
/**/rs82.getInt("TYPE");
03-03 10:48:29 jdbc: 
/**/rs82.getBoolean("NON_UNIQUE");
03-03 10:48:29 jdbc: 
/**/rs82.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs82.next();
03-03 10:48:29 jdbc: 
/**/rs82.close();
03-03 10:48:29 jdbc: 
/**/prep66.close();
03-03 10:48:29 jdbc: COMMAND_CLOSE 118
03-03 10:48:29 jdbc: 
/**/dbMeta0.getIndexInfo(null, "PUBLIC", "USER_ROLES", false, true);
03-03 10:48:29 jdbc: 
/**/PreparedStatement prep67 = conn5.prepareStatement("SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, NON_UNIQUE, TABLE_CATALOG INDEX_QUALIFIER, INDEX_NAME, INDEX_TYPE TYPE, ORDINAL_POSITION, COLUMN_NAME, ASC_OR_DESC, CARDINALITY, PAGES, FILTER_CONDITION, SORT_TYPE FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE ? AND TABLE_SCHEMA LIKE ? ESCAPE ? AND (TRUE) AND TABLE_NAME = ? ORDER BY NON_UNIQUE, TYPE, TABLE_SCHEM, INDEX_NAME, ORDINAL_POSITION");
03-03 10:48:29 jdbc: SESSION_PREPARE_READ_PARAMS 120
03-03 10:48:29 jdbc: 
/**/prep67.setString(1, "%");
03-03 10:48:29 jdbc: 
/**/prep67.setString(2, "\\");
03-03 10:48:29 jdbc: 
/**/prep67.setString(3, "PUBLIC");
03-03 10:48:29 jdbc: 
/**/prep67.setString(4, "\\");
03-03 10:48:29 jdbc: 
/**/prep67.setString(5, "USER_ROLES");
03-03 10:48:29 jdbc: 
/**/ResultSet rs83 = prep67.executeQuery();
03-03 10:48:29 jdbc: COMMAND_EXECUTE_QUERY 120
03-03 10:48:29 jdbc: RESULT_CLOSE 121
03-03 10:48:29 jdbc: 
/**/rs83.next();
03-03 10:48:29 jdbc: 
/**/rs83.getString("INDEX_NAME");
03-03 10:48:29 jdbc: 
/**/rs83.getInt("TYPE");
03-03 10:48:29 jdbc: 
/**/rs83.getBoolean("NON_UNIQUE");
03-03 10:48:29 jdbc: 
/**/rs83.getString("COLUMN_NAME");
03-03 10:48:29 jdbc: 
/**/rs83.next();
03-03 10:48:29 jdbc: 
/**/rs83.close();
03-03 10:48:29 jdbc: 
/**/prep67.close();
03-03 10:48:29 jdbc: COMMAND_CLOSE 120
03-03 10:48:29 jdbc: 
/**/Statement stat5 = conn5.createStatement();
03-03 10:48:29 jdbc: 
/**/ResultSet rs84 = stat5.executeQuery("SELECT * FROM INFORMATION_SCHEMA.SEQUENCES ORDER BY SEQUENCE_NAME");
03-03 10:48:29 jdbc: SESSION_PREPARE_READ_PARAMS 122
03-03 10:48:29 jdbc: COMMAND_EXECUTE_QUERY 122
03-03 10:48:29 jdbc: RESULT_CLOSE 123
03-03 10:48:29 jdbc: COMMAND_CLOSE 122
03-03 10:48:29 jdbc: 
/**/rs84.next();
03-03 10:48:29 jdbc: 
/**/rs84.close();
03-03 10:48:29 jdbc: 
/**/ResultSet rs85 = stat5.executeQuery("SELECT * FROM INFORMATION_SCHEMA.USERS ORDER BY NAME");
03-03 10:48:29 jdbc: SESSION_PREPARE_READ_PARAMS 124
03-03 10:48:29 jdbc: COMMAND_EXECUTE_QUERY 124
03-03 10:48:29 jdbc: RESULT_CLOSE 125
03-03 10:48:29 jdbc: COMMAND_CLOSE 124
03-03 10:48:29 jdbc: 
/**/rs85.next();
03-03 10:48:29 jdbc: 
/**/rs85.getString("NAME");
03-03 10:48:29 jdbc: 
/**/rs85.getString("ADMIN");
03-03 10:48:29 jdbc: 
/**/rs85.next();
03-03 10:48:29 jdbc: 
/**/rs85.close();
03-03 10:48:29 jdbc: 
/**/stat5.close();
03-03 10:48:29 jdbc: 
/**/dbMeta0.getDatabaseProductName();
03-03 10:48:29 jdbc: 
/**/dbMeta0.getDatabaseProductVersion();
03-03 10:48:33 jdbc: 
/**/conn5.close();
03-03 10:48:33 jdbc: SESSION_UNDO_LOG_POS 0
03-03 10:48:33 jdbc: SESSION_CLOSE 0
