03-03 14:39:24 jdbc: 
/**/Connection conn11 = DriverManager.getConnection("jdbc:h2:tcp://localhost/grass3H2DB;TRACE_LEVEL_FIlE=3", "SA", "");
03-03 14:39:24 jdbc: java.lang.Exception: Open Stack Trace
	at org.h2.util.CloseWatcher.register(CloseWatcher.java:93)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:120)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:92)
	at org.h2.Driver.connect(Driver.java:72)
	at java.sql.DriverManager.getConnection(DriverManager.java:579)
	at java.sql.DriverManager.getConnection(DriverManager.java:190)
	at org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl.getConnection(DriverManagerConnectionProviderImpl.java:173)
	at org.hibernate.internal.AbstractSessionImpl$NonContextualJdbcConnectionAccess.obtainConnection(AbstractSessionImpl.java:276)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:297)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.getConnection(LogicalConnectionImpl.java:169)
	at org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:67)
	at org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:160)
	at org.hibernate.internal.SessionImpl.beginTransaction(SessionImpl.java:1263)
	at org.myftp.gattserver.grass3.model.dao.QuoteDAO.count(QuoteDAO.java:26)
	at org.myftp.gattserver.grass3.facades.QuotesFacade.getRandomQuote(QuotesFacade.java:65)
	at org.myftp.gattserver.grass3.pages.template.BasePage.chooseQuote(BasePage.java:224)
	at org.myftp.gattserver.grass3.pages.template.BasePage.createQuotes(BasePage.java:75)
	at org.myftp.gattserver.grass3.pages.template.GrassPage.init(GrassPage.java:44)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:344)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:295)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:130)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1479)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:461)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:314)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1129)
	at org.myftp.gattserver.grass3.pages.factories.template.PageFactory.createPage(PageFactory.java:43)
	at org.myftp.gattserver.grass3.GrassUI.init(GrassUI.java:65)
	at com.vaadin.ui.UI.doInit(UI.java:523)
	at com.vaadin.server.AbstractCommunicationManager.getBrowserDetailsUI(AbstractCommunicationManager.java:2457)
	at com.vaadin.server.AbstractCommunicationManager.handleBrowserDetailsRequest(AbstractCommunicationManager.java:2352)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:325)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:201)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:669)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1448)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:118)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:45)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(BasicAuthenticationFilter.java:150)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:183)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:192)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:160)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1419)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:455)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:557)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1075)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:384)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1009)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:255)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:154)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)
	at org.eclipse.jetty.server.Server.handle(Server.java:368)
	at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:488)
	at org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:932)
	at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:994)
	at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:640)
	at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235)
	at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:628)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)
	at java.lang.Thread.run(Thread.java:722)

org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-168]
	at org.h2.message.DbException.get(DbException.java:169)
	at org.h2.message.DbException.get(DbException.java:146)
	at org.h2.message.DbException.get(DbException.java:135)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:172)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:119)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:92)
	at org.h2.Driver.connect(Driver.java:72)
	at java.sql.DriverManager.getConnection(DriverManager.java:579)
	at java.sql.DriverManager.getConnection(DriverManager.java:190)
	at org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl.getConnection(DriverManagerConnectionProviderImpl.java:173)
	at org.hibernate.internal.AbstractSessionImpl$NonContextualJdbcConnectionAccess.obtainConnection(AbstractSessionImpl.java:276)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:297)
	at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.getConnection(LogicalConnectionImpl.java:169)
	at org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:67)
	at org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:160)
	at org.hibernate.internal.SessionImpl.beginTransaction(SessionImpl.java:1263)
	at org.myftp.gattserver.grass3.model.AbstractDAO.findByID(AbstractDAO.java:133)
	at org.myftp.gattserver.grass3.facades.NodeFacade.getNodeById(NodeFacade.java:30)
	at org.myftp.gattserver.grass3.pages.template.ContentsTableFactory$ContentsTable.populateTable(ContentsTableFactory.java:118)
	at org.myftp.gattserver.grass3.pages.HomePage.createRecentMenus(HomePage.java:244)
	at org.myftp.gattserver.grass3.pages.HomePage.createContent(HomePage.java:99)
	at org.myftp.gattserver.grass3.pages.template.GrassPage.init(GrassPage.java:50)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:344)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:295)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:130)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1479)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:461)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:314)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1129)
	at org.myftp.gattserver.grass3.pages.factories.template.PageFactory.createPage(PageFactory.java:43)
	at org.myftp.gattserver.grass3.GrassUI.init(GrassUI.java:65)
	at com.vaadin.ui.UI.doInit(UI.java:523)
	at com.vaadin.server.AbstractCommunicationManager.getBrowserDetailsUI(AbstractCommunicationManager.java:2457)
	at com.vaadin.server.AbstractCommunicationManager.handleBrowserDetailsRequest(AbstractCommunicationManager.java:2352)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:325)
	at com.vaadin.server.VaadinServlet.service(VaadinServlet.java:201)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:669)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1448)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:118)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:45)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(BasicAuthenticationFilter.java:150)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:183)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:192)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:160)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1419)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:455)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:557)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1075)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:384)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1009)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:255)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:154)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)
	at org.eclipse.jetty.server.Server.handle(Server.java:368)
	at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:488)
	at org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:932)
	at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:994)
	at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:640)
	at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235)
	at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:628)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)
	at java.lang.Thread.run(Thread.java:722)
Caused by: org.h2.jdbc.JdbcSQLException: The connection was not closed by the application and is garbage collected [90018-168]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:329)
	... 97 more
03-03 14:39:24 jdbc: 
/**/conn11.getAutoCommit();
03-03 14:39:24 jdbc: 
/**/conn11.setAutoCommit(false);
03-03 14:39:24 jdbc: SESSION_SET_AUTOCOMMIT 0
03-03 14:39:24 jdbc: 
/**/conn11.getAutoCommit();
03-03 14:39:24 jdbc: 
/**/conn11.commit();
03-03 14:39:24 jdbc: SESSION_PREPARE_READ_PARAMS 0
03-03 14:39:24 jdbc: COMMAND_EXECUTE_UPDATE 0
03-03 14:39:24 jdbc: 
/**/PreparedStatement prep88 = conn11.prepareStatement("select node0_.id as id4_1_, node0_.name as name4_1_, node0_.parent_id as parent3_4_1_, node1_.id as id4_0_, node1_.name as name4_0_, node1_.parent_id as parent3_4_0_ from NODE node0_ left outer join NODE node1_ on node0_.parent_id=node1_.id where node0_.id=?");
03-03 14:39:24 jdbc: SESSION_PREPARE_READ_PARAMS 1
03-03 14:39:24 jdbc: 
/**/prep88.setLong(1, 4L);
03-03 14:39:24 jdbc: 
/**/ResultSet rs89 = prep88.executeQuery();
03-03 14:39:24 jdbc: COMMAND_EXECUTE_QUERY 1
03-03 14:39:24 jdbc: RESULT_CLOSE 2
03-03 14:39:24 jdbc: 
/**/rs89.next();
03-03 14:39:24 jdbc: 
/**/rs89.getLong("id4_0_");
03-03 14:39:24 jdbc: 
/**/rs89.wasNull();
03-03 14:39:24 jdbc: 
/**/rs89.getString("name4_0_");
03-03 14:39:24 jdbc: 
/**/rs89.wasNull();
03-03 14:39:24 jdbc: 
/**/rs89.getLong("parent3_4_0_");
03-03 14:39:24 jdbc: 
/**/rs89.wasNull();
03-03 14:39:24 jdbc: 
/**/rs89.getString("name4_1_");
03-03 14:39:24 jdbc: 
/**/rs89.wasNull();
03-03 14:39:24 jdbc: 
/**/rs89.getLong("parent3_4_1_");
03-03 14:39:24 jdbc: 
/**/rs89.wasNull();
03-03 14:39:24 jdbc: 
/**/rs89.next();
03-03 14:39:24 jdbc: 
/**/rs89.close();
03-03 14:39:24 jdbc: 
/**/prep88.getMaxRows();
03-03 14:39:24 jdbc: 
/**/prep88.getQueryTimeout();
03-03 14:39:24 jdbc: 
/**/conn11.getQueryTimeout();
03-03 14:39:24 jdbc: SESSION_PREPARE_READ_PARAMS 3
03-03 14:39:24 jdbc: COMMAND_EXECUTE_QUERY 3
03-03 14:39:24 jdbc: RESULT_CLOSE 4
03-03 14:39:24 jdbc: 
/**/prep88.close();
03-03 14:39:24 jdbc: COMMAND_CLOSE 1
03-03 14:39:24 jdbc: 
/**/PreparedStatement prep89 = conn11.prepareStatement("select node0_.id as id4_1_, node0_.name as name4_1_, node0_.parent_id as parent3_4_1_, node1_.id as id4_0_, node1_.name as name4_0_, node1_.parent_id as parent3_4_0_ from NODE node0_ left outer join NODE node1_ on node0_.parent_id=node1_.id where node0_.id=?");
03-03 14:39:24 jdbc: SESSION_PREPARE_READ_PARAMS 5
03-03 14:39:24 jdbc: 
/**/prep89.setLong(1, 2L);
03-03 14:39:24 jdbc: 
/**/ResultSet rs90 = prep89.executeQuery();
03-03 14:39:24 jdbc: COMMAND_EXECUTE_QUERY 5
03-03 14:39:24 jdbc: RESULT_CLOSE 6
03-03 14:39:24 jdbc: 
/**/rs90.next();
03-03 14:39:24 jdbc: 
/**/rs90.getLong("id4_0_");
03-03 14:39:24 jdbc: 
/**/rs90.wasNull();
03-03 14:39:24 jdbc: 
/**/rs90.getString("name4_0_");
03-03 14:39:24 jdbc: 
/**/rs90.wasNull();
03-03 14:39:24 jdbc: 
/**/rs90.getLong("parent3_4_0_");
03-03 14:39:24 jdbc: 
/**/rs90.wasNull();
03-03 14:39:24 jdbc: 
/**/rs90.getString("name4_1_");
03-03 14:39:24 jdbc: 
/**/rs90.wasNull();
03-03 14:39:24 jdbc: 
/**/rs90.getLong("parent3_4_1_");
03-03 14:39:24 jdbc: 
/**/rs90.wasNull();
03-03 14:39:24 jdbc: 
/**/rs90.next();
03-03 14:39:24 jdbc: 
/**/rs90.close();
03-03 14:39:24 jdbc: 
/**/prep89.getMaxRows();
03-03 14:39:24 jdbc: 
/**/prep89.getQueryTimeout();
03-03 14:39:24 jdbc: 
/**/conn11.getQueryTimeout();
03-03 14:39:24 jdbc: COMMAND_EXECUTE_QUERY 3
03-03 14:39:24 jdbc: RESULT_CLOSE 7
03-03 14:39:24 jdbc: 
/**/prep89.close();
03-03 14:39:24 jdbc: COMMAND_CLOSE 5
03-03 14:39:24 jdbc: 
/**/PreparedStatement prep90 = conn11.prepareStatement("select contentnod0_.NODE_id as NODE1_4_4_, contentnod0_.contentNodes_id as contentN2_4_, contentnod1_.id as id1_0_, contentnod1_.author_id as author8_1_0_, contentnod1_.contentId as contentId1_0_, contentnod1_.contentReaderId as contentR3_1_0_, contentnod1_.creationDate as creation4_1_0_, contentnod1_.lastModificationDate as lastModi5_1_0_, contentnod1_.name as name1_0_, contentnod1_.parent_id as parent9_1_0_, contentnod1_.publicated as publicated1_0_, user2_.id as id0_1_, user2_.confirmed as confirmed0_1_, user2_.email as email0_1_, user2_.LAST_LOGIN_DATE as LAST4_0_1_, user2_.name as name0_1_, user2_.password as password0_1_, user2_.REGISTRATION_DATE as REGISTRA7_0_1_, node3_.id as id4_2_, node3_.name as name4_2_, node3_.parent_id as parent3_4_2_, node4_.id as id4_3_, node4_.name as name4_3_, node4_.parent_id as parent3_4_3_ from NODE_CONTENTNODE contentnod0_ inner join CONTENTNODE contentnod1_ on contentnod0_.contentNodes_id=contentnod1_.id left outer join USER_ACCOUNTS user2_ on contentnod1_.author_id=user2_.id left outer join NODE node3_ on contentnod1_.parent_id=node3_.id left outer join NODE node4_ on node3_.parent_id=node4_.id where contentnod0_.NODE_id=?");
03-03 14:39:24 jdbc: SESSION_PREPARE_READ_PARAMS 8
03-03 14:39:24 jdbc: 
/**/prep90.setLong(1, 4L);
03-03 14:39:24 jdbc: 
/**/ResultSet rs91 = prep90.executeQuery();
03-03 14:39:24 jdbc: COMMAND_EXECUTE_QUERY 8
03-03 14:39:24 jdbc: RESULT_CLOSE 9
03-03 14:39:24 jdbc: 
/**/rs91.next();
03-03 14:39:24 jdbc: 
/**/rs91.getLong("id1_0_");
03-03 14:39:24 jdbc: 
/**/rs91.wasNull();
03-03 14:39:24 jdbc: 
/**/rs91.getLong("id0_1_");
03-03 14:39:24 jdbc: 
/**/rs91.wasNull();
03-03 14:39:24 jdbc: 
/**/rs91.getLong("id4_2_");
03-03 14:39:24 jdbc: 
/**/rs91.wasNull();
03-03 14:39:24 jdbc: 
/**/rs91.getLong("id4_3_");
03-03 14:39:24 jdbc: 
/**/rs91.wasNull();
03-03 14:39:24 jdbc: 
/**/rs91.getLong("author8_1_0_");
03-03 14:39:24 jdbc: 
/**/rs91.wasNull();
03-03 14:39:24 jdbc: 
/**/rs91.getLong("contentId1_0_");
03-03 14:39:24 jdbc: 
/**/rs91.wasNull();
03-03 14:39:24 jdbc: 
/**/rs91.getString("contentR3_1_0_");
03-03 14:39:24 jdbc: 
/**/rs91.wasNull();
03-03 14:39:24 jdbc: 
/**/rs91.getTimestamp("creation4_1_0_");
03-03 14:39:24 jdbc: 
/**/rs91.wasNull();
03-03 14:39:24 jdbc: 
/**/rs91.getTimestamp("lastModi5_1_0_");
03-03 14:39:24 jdbc: 
/**/rs91.wasNull();
03-03 14:39:24 jdbc: 
/**/rs91.getString("name1_0_");
03-03 14:39:24 jdbc: 
/**/rs91.wasNull();
03-03 14:39:24 jdbc: 
/**/rs91.getLong("parent9_1_0_");
03-03 14:39:24 jdbc: 
/**/rs91.wasNull();
03-03 14:39:24 jdbc: 
/**/rs91.getBoolean("publicated1_0_");
03-03 14:39:24 jdbc: 
/**/rs91.wasNull();
03-03 14:39:24 jdbc: 
/**/rs91.getBoolean("confirmed0_1_");
03-03 14:39:24 jdbc: 
/**/rs91.wasNull();
03-03 14:39:24 jdbc: 
/**/rs91.getString("email0_1_");
03-03 14:39:24 jdbc: 
/**/rs91.wasNull();
03-03 14:39:24 jdbc: 
/**/rs91.getTimestamp("LAST4_0_1_");
03-03 14:39:24 jdbc: 
/**/rs91.getString("name0_1_");
03-03 14:39:24 jdbc: 
/**/rs91.wasNull();
03-03 14:39:24 jdbc: 
/**/rs91.getString("password0_1_");
03-03 14:39:24 jdbc: 
/**/rs91.wasNull();
03-03 14:39:24 jdbc: 
/**/rs91.getTimestamp("REGISTRA7_0_1_");
03-03 14:39:24 jdbc: 
/**/rs91.wasNull();
03-03 14:39:24 jdbc: 
/**/rs91.getLong("NODE1_4_4_");
03-03 14:39:24 jdbc: 
/**/rs91.wasNull();
03-03 14:39:24 jdbc: 
/**/rs91.getLong("contentN2_4_");
03-03 14:39:24 jdbc: 
/**/rs91.wasNull();
03-03 14:39:24 jdbc: 
/**/rs91.next();
03-03 14:39:24 jdbc: 
/**/rs91.close();
03-03 14:39:24 jdbc: 
/**/prep90.getMaxRows();
03-03 14:39:24 jdbc: 
/**/prep90.getQueryTimeout();
03-03 14:39:24 jdbc: 
/**/conn11.getQueryTimeout();
03-03 14:39:24 jdbc: COMMAND_EXECUTE_QUERY 3
03-03 14:39:24 jdbc: RESULT_CLOSE 10
03-03 14:39:24 jdbc: 
/**/prep90.close();
03-03 14:39:24 jdbc: COMMAND_CLOSE 8
03-03 14:39:24 jdbc: 
/**/PreparedStatement prep91 = conn11.prepareStatement("select roles0_.User_id as User1_0_0_, roles0_.roles as roles0_ from User_roles roles0_ where roles0_.User_id=?");
03-03 14:39:24 jdbc: SESSION_PREPARE_READ_PARAMS 11
03-03 14:39:24 jdbc: 
/**/prep91.setLong(1, 1L);
03-03 14:39:24 jdbc: 
/**/ResultSet rs92 = prep91.executeQuery();
03-03 14:39:24 jdbc: COMMAND_EXECUTE_QUERY 11
03-03 14:39:24 jdbc: RESULT_CLOSE 12
03-03 14:39:24 jdbc: 
/**/rs92.next();
03-03 14:39:24 jdbc: 
/**/rs92.getLong("User1_0_0_");
03-03 14:39:24 jdbc: 
/**/rs92.wasNull();
03-03 14:39:24 jdbc: 
/**/rs92.getObject("roles0_");
03-03 14:39:24 jdbc: 
/**/rs92.wasNull();
03-03 14:39:24 jdbc: 
/**/rs92.next();
03-03 14:39:24 jdbc: 
/**/rs92.getLong("User1_0_0_");
03-03 14:39:24 jdbc: 
/**/rs92.wasNull();
03-03 14:39:24 jdbc: 
/**/rs92.getObject("roles0_");
03-03 14:39:24 jdbc: 
/**/rs92.wasNull();
03-03 14:39:24 jdbc: 
/**/rs92.next();
03-03 14:39:24 jdbc: 
/**/rs92.getLong("User1_0_0_");
03-03 14:39:24 jdbc: 
/**/rs92.wasNull();
03-03 14:39:24 jdbc: 
/**/rs92.getObject("roles0_");
03-03 14:39:24 jdbc: 
/**/rs92.wasNull();
03-03 14:39:24 jdbc: 
/**/rs92.next();
03-03 14:39:24 jdbc: 
/**/rs92.getLong("User1_0_0_");
03-03 14:39:24 jdbc: 
/**/rs92.wasNull();
03-03 14:39:24 jdbc: 
/**/rs92.getObject("roles0_");
03-03 14:39:24 jdbc: 
/**/rs92.wasNull();
03-03 14:39:24 jdbc: 
/**/rs92.next();
03-03 14:39:24 jdbc: 
/**/rs92.getLong("User1_0_0_");
03-03 14:39:24 jdbc: 
/**/rs92.wasNull();
03-03 14:39:24 jdbc: 
/**/rs92.getObject("roles0_");
03-03 14:39:24 jdbc: 
/**/rs92.wasNull();
03-03 14:39:24 jdbc: 
/**/rs92.next();
03-03 14:39:24 jdbc: 
/**/rs92.close();
03-03 14:39:24 jdbc: 
/**/prep91.getMaxRows();
03-03 14:39:24 jdbc: 
/**/prep91.getQueryTimeout();
03-03 14:39:24 jdbc: 
/**/conn11.getQueryTimeout();
03-03 14:39:24 jdbc: COMMAND_EXECUTE_QUERY 3
03-03 14:39:24 jdbc: RESULT_CLOSE 13
03-03 14:39:24 jdbc: 
/**/prep91.close();
03-03 14:39:24 jdbc: COMMAND_CLOSE 11
03-03 14:39:24 jdbc: 
/**/PreparedStatement prep92 = conn11.prepareStatement("select contenttag0_.contentNodes_id as contentN1_1_1_, contenttag0_.contentTags_id as contentT2_1_, contenttag1_.id as id2_0_, contenttag1_.name as name2_0_ from CONTENTNODE_CONTENT_TAG contenttag0_ inner join CONTENT_TAG contenttag1_ on contenttag0_.contentTags_id=contenttag1_.id where contenttag0_.contentNodes_id=?");
03-03 14:39:24 jdbc: SESSION_PREPARE_READ_PARAMS 14
03-03 14:39:24 jdbc: 
/**/prep92.setLong(1, 66L);
03-03 14:39:24 jdbc: 
/**/ResultSet rs93 = prep92.executeQuery();
03-03 14:39:24 jdbc: COMMAND_EXECUTE_QUERY 14
03-03 14:39:24 jdbc: RESULT_CLOSE 15
03-03 14:39:24 jdbc: 
/**/rs93.next();
03-03 14:39:24 jdbc: 
/**/rs93.getLong("id2_0_");
03-03 14:39:24 jdbc: 
/**/rs93.wasNull();
03-03 14:39:24 jdbc: 
/**/rs93.getString("name2_0_");
03-03 14:39:24 jdbc: 
/**/rs93.wasNull();
03-03 14:39:24 jdbc: 
/**/rs93.getLong("contentN1_1_1_");
03-03 14:39:24 jdbc: 
/**/rs93.wasNull();
03-03 14:39:24 jdbc: 
/**/rs93.getLong("contentT2_1_");
03-03 14:39:24 jdbc: 
/**/rs93.wasNull();
03-03 14:39:24 jdbc: 
/**/rs93.next();
03-03 14:39:24 jdbc: 
/**/rs93.close();
03-03 14:39:24 jdbc: 
/**/prep92.getMaxRows();
03-03 14:39:24 jdbc: 
/**/prep92.getQueryTimeout();
03-03 14:39:24 jdbc: 
/**/conn11.getQueryTimeout();
03-03 14:39:24 jdbc: COMMAND_EXECUTE_QUERY 3
03-03 14:39:24 jdbc: RESULT_CLOSE 16
03-03 14:39:24 jdbc: 
/**/prep92.close();
03-03 14:39:24 jdbc: COMMAND_CLOSE 14
03-03 14:39:25 jdbc: SESSION_CLOSE 0
